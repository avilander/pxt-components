{"version":3,"file":"pxt-shared-components.js.map","sources":["ng://pxt-shared-components/src/app/directives/pxt-content-body.ts","ng://pxt-shared-components/src/app/services/pxt-app-components.service.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.component.ts","ng://pxt-shared-components/src/app/modules/material-angular/material-angular.module.ts","ng://pxt-shared-components/src/app/services/pxt-http/config.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/HttpHelperService.ts","ng://pxt-shared-components/src/environments/environment.ts","ng://pxt-shared-components/src/app/services/pxt-http/pxt-http.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/request-base.service.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.module.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.component.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.module.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/model/pxt-submenus.model.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/enum/option-submenu.enum.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.component.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ad-pxt-content]',\r\n})\r\nexport class PxtContentBody {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class PxtAppComponentService {\r\n    private submenusItens: Subject<any> = new Subject<any>();\r\n    public readonly submenusItensObservable: Observable<any> = this.submenusItens.asObservable();\r\n\r\n    private _loadComponent: Subject<any> = new Subject<any>();\r\n    public readonly loadComponentObservable: Observable<any> = this._loadComponent.asObservable();\r\n\r\n    private _setUserLogged: Subject<any> = new Subject<any>();\r\n    public readonly userLoggedObservable: Observable<any> = this._setUserLogged.asObservable();\r\n\r\n    private _setInfoInit: Subject<any> = new Subject<any>();\r\n    public readonly infoInitial: Observable<any> = this._setInfoInit.asObservable();\r\n\r\n    setSubmenus(routes: any) {\r\n        this.submenusItens.next(routes);\r\n    }\r\n\r\n    setInitialInfo(infoInitial) {\r\n        this._setInfoInit.next(infoInitial)\r\n    }\r\n\r\n    loadComponent(component: any) {\r\n        this._loadComponent.next(component);\r\n    }\r\n\r\n    setUser(user: any) {\r\n        this._setUserLogged.next(user);\r\n    }\r\n\r\n}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, Input, ViewChild, ComponentFactoryResolver, Inject } from '@angular/core';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\n\nimport { Routes } from '@angular/router';\nimport { PxtApp } from './pxt-app';\nimport { PxtAppModel } from './model/pxt-app.model';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\n\n@Component({\n  selector: 'pxt-app',\n  templateUrl: './pxt-app.component.html',\n  styleUrls: ['./pxt-app.component.scss']\n})\nexport class PxtAppComponent {\n\n  routes: any[] = [];\n  submenus: any[] = [];\n  system: String = \"SYSTEM NAME\"\n  urlImg: string = 'http://imagensdsv.peixoto.com.br/auth/mini_logo.png';\n  menuSelected = \"\";\n  usuerLogged = \"Loogged user\";\n\n  _mobileQueryListener: () => void;\n  mobileQuery: MediaQueryList;\n  shouldRun = true;\n\n  constructor(changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(PxtAppComponentService) public pxtAppComponentService\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n    //this.routes = routes;\n    pxtAppComponentService.infoInitial.subscribe(infoInitial => {\n      if (infoInitial != undefined) {\n        this.routes = infoInitial.components;\n        this.system = infoInitial.system;\n        this.usuerLogged = infoInitial.userLogged;\n      } else {\n        this.routes = [];\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n    clearInterval(this.interval);\n  }\n\n  currentAdIndex = -1;\n  @ViewChild(PxtContentBody) adHost: PxtContentBody;\n  interval: any;\n\n  ngOnInit() {\n    this.subscribeComponent();\n  }\n  loadComponent(route: any, adHost) {\n    this.menuSelected = route.data.text;\n    //this.currentAdIndex = (this.currentAdIndex + 1) % this.ads.length;\n    let adItem = route;\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(adItem.component);\n\n    let viewContainerRef = adHost.viewContainerRef;\n    viewContainerRef.clear();\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    //(<Teste1Component>componentRef.instance).data = adItem.data;\n  }\n\n  subscribeComponent() {\n    debugger;\n    this.pxtAppComponentService.loadComponentObservable.subscribe(component => {\n      debugger;\n      let componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n      let viewContainerRef = this.adHost.viewContainerRef;\n      viewContainerRef.clear();\n      let componentRef = viewContainerRef.createComponent(componentFactory);\n    });\n  }\n\n\n  selectItemMenu(nav) {\n    console.log(nav);\n    this.loadComponent(nav, this.adHost);\n  }\n\n}\n","import './../../../polyfills';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatIconModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule\n  ]\n})\nexport class MaterialAngularModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { map, filter, scan } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  config: any;\r\n  constructor(\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  load(url: string) {\r\n    const injectHttp = this.injector.get(HttpClient);\r\n    return new Promise((resolve) => {\r\n      injectHttp.get(url).pipe(\r\n        map(res => res)\r\n      ).subscribe(config => {\r\n          this.config = config;\r\n          resolve();\r\n        });\r\n    });\r\n  }\r\n\r\n  getConfiguration(element: string, dataList?: string) {\r\n    if (!dataList) {\r\n      const urlWithElement = this.config[element];\r\n      return this.verifyUrl(urlWithElement);\r\n    } else {\r\n      const urlWithDataList = this.config[dataList][element];\r\n      return this.verifyUrl(urlWithDataList);\r\n    }\r\n  }\r\n\r\n  verifyUrl(typeModel: any) {\r\n    if (typeModel.includes('/', typeModel.length - 1)) {\r\n      const typeRelease = typeModel;\r\n      return typeRelease;\r\n    } else {\r\n      const newType = typeModel + '/';\r\n      return newType;\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nimport { Http } from '@angular/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { map, filter, scan } from 'rxjs/operators';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable()\r\nexport class HttpHelperService {\r\n  constructor(private configService: ConfigService) {\r\n  }\r\n  public getApi() {\r\n    return this.configService.getConfiguration('API', 'PATH');\r\n  };\r\n}","\nexport const environment = {\n  production: true,\n  envName: 'dev',\n  version: '0.0.1',\n  CONFIG_FILE: 'assets/config/env.json',\n  esbApiPxt : \"http://esbdsv.peixoto.com.br/sge/\",\n  system: {\n    id: 108,\n    prex: \"PORCRP\"\n  }\n};\n\n","import { Observable, Subject } from 'rxjs';\nimport { Inject, forwardRef, Injectable, Injector } from '@angular/core';\nimport { Headers, Http, RequestOptions, Response, XHRBackend, RequestOptionsArgs, Request } from '@angular/http';\nimport { map, filter, scan, finalize, catchError } from 'rxjs/operators';\n\nimport { environment } from './../../../environments/environment';\n//import { TokenService } from './token.service';\n//import { HttpHelperService } from './HttpHelperService';\n\n@Injectable()\nexport class PxtHttpService extends Http {\n\n  constructor(private backend: XHRBackend,\n    options: RequestOptions,\n    private injector: Injector,\n    //private urlHelper: HttpHelperService,\n    //private tokenService: TokenService\n  ) {\n    super(backend, options);\n  }\n\n  urlRequest: any;\n  origRequest: Request;\n  isUnathourized = false;\n\n  /**\n   *  Control Services\n   */\n  getHeaders() {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Cache-Control', 'no-store');\n    headers.append('Pragma', 'no-cache');\n    // headers.append( 'Content-type', 'application/x-www-form-urlencoded; charset=utf-8');\n    // headers.append('Authentication', 'Basic YWNtZTphY21lc2VjcmV0ZQ==');\n    return headers;\n  }\n\n  handleResponse(observable: Observable<Response>, url?: string) {\n\n    let result = null;\n    const orig = this.origRequest;\n    result = observable.pipe(\n      catchError((error) => {\n        return this.onCatch(error);\n      }),\n      map(res => {\n        return this.onResult(res);\n      })\n    );\n    return result;\n  }\n  onResult(res) {\n    if (res.status == 201) {\n      return res._body;\n    } else {\n      return res.json();\n    }\n  }\n\n  doGet(api: string, loader?: boolean) {\n    // this.preLoaderService.update(true);\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.get(url, requestOptions));\n  }\n\n  doPost(endpoint: string, params?: any) {\n    const url = endpoint;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.post(url, params, requestOptions), url);\n  }\n\n  doPut(api: string, params?: any) {\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.put(url, params, requestOptions), url);\n  }\n\n  doPath(api: string, params?: any, loader?: boolean) {\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.patch(url, params, requestOptions), url);\n  }\n\n  doDelete(api: string, params: any, loader?: boolean) {\n    const url = api;\n    const urlParam = url + '/' + params;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n\n    return this.handleResponse(super.delete(urlParam, requestOptions), urlParam);\n  }\n\n  /*\n  request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\n    options = this.requestArgs(options);\n    if (typeof url === 'string') {\n      this.urlRequest = url;\n    } else {\n      this.urlRequest = url.url;\n      this.origRequest = url;\n    }\n\n    if (this.urlRequest !== environment.CONFIG_FILE) {\n     // const token = this.tokenService.getAccessToken();\n      if (token != null) {\n        this.origRequest.headers.set('Authorization', 'Bearer '.concat(token));\n        options.headers.set('Authorization', 'Bearer '.concat(token));\n      }\n    }\n\n    url = this.origRequest;\n    return super.request(url, options);\n  }\n  */\n  private requestArgs(options: RequestOptionsArgs): RequestOptionsArgs {\n    if (options == null) {\n      options = new RequestOptions({ headers: this.getHeaders() });\n    }\n    return options;\n  }\n  public onCatch(error: any) {\n    switch (error.status) {\n      case 401:\n        if (!this.isUnathourized) {\n          //this.tokenService.removeTokenStorage();\n          window.location.href = environment.esbApiPxt + \"?erro=401\";\n        }\n        this.isUnathourized = true;\n        break;\n      case 400:\n        //this.tokenService.removeTokenStorage();\n        window.location.href = environment.esbApiPxt + \"?erro=400\";\n        break;\n      case 404:\n        //this.tokenService.removeTokenStorage();\n        window.location.href = environment.esbApiPxt + \"?erro=404\";\n        break;\n      default:\n        window.location.href = environment.esbApiPxt + \"?erro=0\";\n        break;\n    }\n    return Observable.throw(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PxtHttpService } from './pxt-http.service';\n\n@Injectable()\nexport class RequestBaseService <T> {\n\n  constructor(private httpService: PxtHttpService) {\n  }\n  load(urlApi , model?: T): any {\n    return this.httpService.doGet(urlApi);\n  };\n  save(urlApi , model?: T): any {\n    return this.httpService.doPost(urlApi, model);\n  };\n  delete(urlApi , model?: T) :any{\n    return this.httpService.doDelete(urlApi , '');\n  };\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtAppComponent } from './pxt-app.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { ConfigService } from '../../services/pxt-http/config.service';\nimport { HttpHelperService } from '../../services/pxt-http/HttpHelperService';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { PxtHttpService } from '../../services/pxt-http/pxt-http.service';\nimport { environment } from '../../../environments/environment';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtAppComponent, PxtContentBody],\n  exports: [PxtAppComponent],\n  providers: [PxtAppComponentService, PxtHttpService, RequestBaseService, HttpHelperService, ConfigService]\n})\nexport class PxtAppModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'pxt-content-body',\n  templateUrl: './pxt-content.component.html',\n  styleUrls: ['./pxt-content.component.css']\n})\nexport class PxtContentComponent implements OnInit, OnDestroy  {\n\n  ngOnDestroy(): void {\n    //throw new Error(\"Method not implemented.\");\n  }\n  ngOnInit(): void {\n    //throw new Error(\"Method not implemented.\");\n  }\n  constructor() { }\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtContentComponent } from './pxt-content.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { templateJitUrl } from '@angular/compiler';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    HttpClientModule,\n    HttpModule,\n  ],\n  declarations: [PxtContentComponent],\n   exports: [PxtContentComponent],\n  entryComponents: [ PxtContentComponent ]\n})\nexport class PxtContentModule { }\n","\r\n\r\n\r\nexport class PxtButton {\r\n    icon: String;\r\n    menu: String;\r\n    enable: Boolean;\r\n    enum : Number;\r\n    constructor(icon: String, menu: String, enable: Boolean, id : number) {\r\n        this.icon = icon;\r\n        this.menu = menu;\r\n        this.enable = enable;\r\n        this.enum = id;\r\n    }\r\n\r\n}\r\n","export enum OptionsSubmenu {\r\n    SALVAR = 1,\r\n    PESQUISAR = 2,\r\n    LIMPAR = 3,\r\n    NOVO = 4,\r\n    VOLTAR= 5,\r\n    EXCLUIR= 6\r\n}","import { Component, ViewChild, ComponentFactoryResolver, Output, Input, EventEmitter } from '@angular/core';\nimport { PxtButton } from './model/pxt-submenus.model';\nimport { OptionsSubmenu } from './enum/option-submenu.enum';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { Observable } from 'rxjs';\nimport { HttpHelperService } from '../../services/pxt-http/HttpHelperService';\n@Component({\n  selector: 'pxt-submenus',\n  templateUrl: './pxt-submenus.component.html',\n  styleUrls: ['./pxt-submenus.component.css']\n})\nexport class PxtSubmenusComponent<T> {\n\n  @Input() model?: T = {} as T;\n  type: (new () => T);\n  private urlService = \"\";\n\n  @Output() listing: EventEmitter<T[]> = new EventEmitter();\n  @Input() controller?: String;\n\n  save() {\n    this._serviceBase.save(this.urlService, this.model).subscribe(result => {\n      console.log(result);\n    });\n  }\n  search() {\n    this._serviceBase.load(this.urlService, this.model).subscribe(result => {\n      this.listing.emit(result);\n    })\n  }\n  delete() {\n    this._serviceBase.delete(this.urlService, this.model).subscribe(result => {\n      this.listing.emit(result);\n    })\n  }\n\n  clear() {\n    throw new Error(\"Method 'clear()' not implemented.\");\n  }\n  add(): T {\n    throw new Error(\"Method 'add()' not implemented.\");\n  }\n  back() {\n    throw new Error(\"Method 'back()' not implemented.\");\n  }\n\n  buttons: PxtButton[] = [];\n  enableSave = true;\n  enableBack = true;\n  enableClear = true;\n  enableSearch = true;\n  enableAdd = true;\n  enableDelete = true;\n\n  constructor(public _pxtAppService: PxtAppComponentService, public _serviceBase: RequestBaseService<T>,public helper:  HttpHelperService) {\n    this.buttons.push(new PxtButton(\"keyboard_backspace\", \"VOLTAR\", true, OptionsSubmenu.VOLTAR));\n    this.buttons.push(new PxtButton(\"add\", \"SALVAR\", true, OptionsSubmenu.SALVAR));\n    this.buttons.push(new PxtButton(\"add\", \"NOVO\", true, OptionsSubmenu.NOVO));\n    this.buttons.push(new PxtButton(\"delete\", \"LIMPAR\", true, OptionsSubmenu.LIMPAR));\n    this.buttons.push(new PxtButton(\"search\", \"PESQUISAR\", true, OptionsSubmenu.PESQUISAR));\n    this.buttons.push(new PxtButton(\"delete\", \"EXCLUIR\", true, OptionsSubmenu.EXCLUIR));\n    setTimeout(() => {\n      this.urlService = helper.getApi() + this.model.constructor.name ;\n      console.log(this.urlService);\n    }, 100);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { PxtSubmenusComponent } from './pxt-submenus.component';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { PxtHttpService } from '../../services/pxt-http/pxt-http.service';\nimport { HttpHelperService } from '../../services/pxt-http/HttpHelperService';\nimport { ConfigService } from '../../services/pxt-http/config.service';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtSubmenusComponent],\n  exports: [PxtSubmenusComponent],\n  providers:[PxtHttpService, RequestBaseService, HttpHelperService, ConfigService]\n})\nexport class PxtSubmenusModule { }\n\n"],"names":[],"mappings":"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"}
