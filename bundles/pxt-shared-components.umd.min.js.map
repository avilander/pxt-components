{"version":3,"sources":["ng://pxt-shared-components/src/app/directives/pxt-content-body.ts","ng://pxt-shared-components/src/app/services/pxt-app-components.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/config.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/http-helper-service.ts","node_modules/tslib/tslib.es6.js","ng://pxt-shared-components/src/environments/environment.ts","ng://pxt-shared-components/src/app/services/pxt-http/token.service.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog.component.ts","ng://pxt-shared-components/src/app/services/pxt-http/error.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/http-error-handler.ts","ng://pxt-shared-components/src/app/services/pxt-http/pxt-http.service.ts","ng://pxt-shared-components/src/app/models/pxtConfiguration.ts","ng://pxt-shared-components/src/app/services/user.service.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.component.ts","ng://pxt-shared-components/src/app/modules/material-angular/material-angular.module.ts","ng://pxt-shared-components/src/app/services/pxt-http/request-base.service.ts","ng://pxt-shared-components/src/app/pipes/uppercase-first.ts","ng://pxt-shared-components/src/app/util/constants.ts","ng://pxt-shared-components/src/app/pipes/date-format.pipe.ts","ng://pxt-shared-components/src/app/pipes/date-time-format.pipe.ts","ng://pxt-shared-components/src/app/pipes/controller.pipe.ts","ng://pxt-shared-components/src/app/pipes/pipes.module.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app-menu-item/pxt-app-menu-item.component.ts","ng://pxt-shared-components/src/app/directives/rules.directive.ts","ng://pxt-shared-components/src/app/directives/directive/directive.module.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app-menu-item/pxt-app-menu-item.module.ts","ng://pxt-shared-components/src/app/directives/HashDirective.ts","ng://pxt-shared-components/src/app/services/authority.service.ts","ng://pxt-shared-components/src/app/visible-in-roles.guard.ts","ng://pxt-shared-components/src/app/services/pxt-interceptor/intercept-service .ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.module.ts","ng://pxt-shared-components/src/app/fields/pxt-input-field.ts","ng://pxt-shared-components/src/app/fields/pxt-checkbox-field.ts","ng://pxt-shared-components/src/app/fields/pxt-date-field.ts","ng://pxt-shared-components/src/app/fields/pxt-filter-field.ts","ng://pxt-shared-components/src/app/fields/pxt-radiobutton-field.ts","ng://pxt-shared-components/src/app/fields/pxt-select-field.ts","ng://pxt-shared-components/src/app/fields/pxt-filter-custom-field.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input/pxt-input.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-button/pxt-button.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-date/pxt-date.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-checkbox/pxt-checkbox.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-radiobutton/pxt-radiobutton.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-select/pxt-select.component.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input-filter/pxt-input-filter.component.ts","ng://pxt-shared-components/src/app/directives/dynamic-field-directive.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input/pxt-input.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-button/pxt-button.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-date/pxt-date.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-select/pxt-select.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-radiobutton/pxt-radiobutton.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-checkbox/pxt-checkbox.module.ts","ng://pxt-shared-components/src/app/directives/dynamic-field-directive-dialog.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input-filter/pxt-input-filter.module.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.module.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/model/pxt-submenus.model.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/enum/option-submenu.enum.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.component.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.module.ts","ng://pxt-shared-components/src/app/modules/pxt-datepicker/pxt-datepicker.component.ts","ng://pxt-shared-components/src/app/modules/pxt-datepicker/pxt-datepicker.module.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog.module.ts","ng://pxt-shared-components/src/app/modules/pxt-filter/pxt-filter.component.ts","ng://pxt-shared-components/src/app/modules/pxt-filter/pxt-filter.module.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter-custom/pxt-dialog-filter-custom.component.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter-custom/pxt-dialog-filter-custom.module.ts","ng://pxt-shared-components/src/app/modules/pxt-filter-mat-table/pxt-filter-mat-table.component.ts","ng://pxt-shared-components/src/app/modules/pxt-filter-mat-table/pxt-filter-mat-table.module.ts","ng://pxt-shared-components/src/app/models/pxt-fields-model.ts","ng://pxt-shared-components/src/app/enum/pxt-enum-tag-html.ts","ng://pxt-shared-components/src/app/modules/pxt-upload-file/pxt-upload-file.component.ts","ng://pxt-shared-components/src/app/modules/pxt-upload-file/pxt-upload-file.module.ts","ng://pxt-shared-components/src/app/modules/pxt-gallery/pxt-gallery.component.ts","ng://pxt-shared-components/src/app/modules/pxt-gallery/pxt-gallery.module.ts"],"names":["PxtContentBody","viewContainerRef","this","Directive","args","selector","ViewContainerRef","PxtAppComponentService","Subject","submenusItens","asObservable","_loadComponent","_setUserLogged","_setInfoInit","prototype","setSubmenus","routes","next","setInitialInfo","infoInitial","loadComponent","component","setUser","user","Injectable","ConfigService","injector","load","url","_this","injectHttp","get","HttpClient","Promise","resolve","pipe","map","res","subscribe","config","getConfiguration","element","dataList","urlWithDataList","verifyUrl","urlWithElement","typeModel","includes","length","Injector","HttpHelperService","configService","getApi","getApiSgi","getFrontSgi","getApiUrl","name","getUrlLogo","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","environment","system","id","prex","TokenService","getAccessToken","token","localStorage","getItem","setTokenStorage","setItem","JSON","stringify","removeTokenStorage","decoded","jwt_decode","removeItem","sub","deleteToken","tokenExists","undefined","PxtDialogComponent","fb","dialogRef","data","ngOnInit","cancelation","close","confirmation","Component","template","FormBuilder","MatDialogRef","Inject","MAT_DIALOG_DATA","Input","ErrorService","providedIn","HttpErrorHandler","errorService","serviceName","operation","result","handleError","error","message","ErrorEvent","status","errorMessage","of","PxtHttpService","backend","options","urlHelper","dialog","tokenService","httpErrorHandler","_super","call","createHandleError","tslib_1.__extends","getHeaders","headers","Headers","append","handleResponse","observable","origRequest","catchError","onCatch","onResult","console","log","_body","json","doGet","api","loader","requestOptions","RequestOptions","doPost","endpoint","params","post","doPut","put","doPath","patch","doDelete","urlParam","delete","request","requestArgs","urlRequest","set","concat","isUnathourized","openDialog","Observable","throw","erro","open","width","panelClass","titleDialog","contentDialog","afterClosed","window","location","href","XHRBackend","MatDialog","Http","pxtConfiguration","systemId","systemPrex","UserService","httpService","helper","path","logout","clear","getUsuarioLogado","usuario","usuarioBase64","atob","parse","identificacaoAcesso","codigoPessoa","person_id","setUsuarioLogado","username","buscarPorIdentificacaoAcesso","val","btoa","getRules","tokenAuthorities","authorities","PxtAppComponent","changeDetectorRef","media","componentFactoryResolver","pxtAppComponentService","userService","httpHelperService","setTimeout","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","usuerLogged","userLogged","menusReceived","sideBarMenus","menus","prepareMenu","subscribeComponent","ngOnDestroy","removeListener","clearInterval","interval","urlLogo","endsWith","substring","findUserLogged","route","adHost","menuSelected","menuText","adItem","menuSource","componentFactory","resolveComponentFactory","createComponent","loadComponentObservable","componentObj","arrayAux","filter","x","selectItemMenu","nav","menuType","menuParent","arrayAuxGroup","arrayAuxItem","forEach","item","arrayTmp","menuId","childs","push","ChangeDetectorRef","MediaMatcher","ComponentFactoryResolver","ViewChild","read","MatMenuTrigger","MaterialAngularModule","NgModule","imports","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","BrowserModule","BrowserAnimationsModule","CommonModule","FormsModule","MatLineModule","MatCommonModule","MatOptionModule","MatFormFieldModule","MatPseudoCheckboxModule","ReactiveFormsModule","exports","RequestBaseService","_httpClient","urlService","urlServiceAuto","save","model","size","buildRequestParams","indexOf","uploadImage","header","Authorization","httpOptions","HttpHeaders","formdata","setParamsFormdata","req","HttpRequest","reportProgress","responseType","FormData","value","key","final","primeiraIteracao","UpercaseFirst","transform","text","words","toLowerCase","split","a","w","toUpperCase","slice","join","Pipe","UpperCasePipe","DateFormatPipe","Constants","DATE_FMT","DatePipe","DateTimeFormatPipe","DATE_TIME_FMT","ControllerPipe","aux","PipeModule","declarations","PxtAppMenuItemComponent","child","RulesDirective","el","ngAfterViewInit","permissoes","nativeElement","style","display","rule","login","ElementRef","DirectiveModule","PxtAppMenuItemModule","entryComponents","HashDirective","vcRef","AuthorityService","_http","_httpHelper","buscarAuthorities","codigoSistema","VisibleInRolesGuard","router","httpHelper","authorityService","canActivate","state","decoded_1","authority","exp","err","Router","InterceptService","intercept","clone","setHeaders","handle","tap","event","PxtAppModule","ToastrModule","forRoot","progressBar","providers","provide","HTTP_INTERCEPTORS","useClass","multi","pxtInputField","pxtCheckboxField","pxtDateField","pxtFilterField","pxtRadioButtonField","pxtSelectField","pxtfilterCustomField","PxtContentComponent","EventEmitter","form","field","keys","instanceFilterCustom","type","fields","instanceInput","instanceCheck","instanceDate","instanceFilter","instanceRadio","instanceSelect","onResize","colsInitial","cols","createControl","onSubmit","preventDefault","stopPropagation","valid","submit","emit","validateAllFormFields","group","control","disabled","bindValidations","validations","addControl","validList_1","validator","Validators","compose","formGroup","controls","markAsTouched","onlySelf","screenWidth","innerWidth","Output","HostListener","PxtInputComponent","PxtButtonComponent","PxtDateComponent","PxtCheckboxComponent","PxtRadiobuttonComponent","noop","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","PxtSelectComponent","pxthttp","ngOnChanges","changes","firstChange","currentValue","find","defineProperty","option","f","onChangeCallback","codigo","selectionChange","onBlur","onTouchedCallback","writeValue","registerOnChange","fn","registerOnTouched","controller","auto","className","PxtDialogFilterComponent","http","MatTableDataSource","code","description","filters","fieldsHist","sort","position","displayedColumns","search","Map","dataSource","paginator","selectRow","row","MatPaginator","MatSort","PxtInputFilterComponent","placeholder","openFilter","onValueCallback","componentMapper","input","button","date","select","radiobutton","checkbox","DynamicFieldDirective","resolver","container","factory","componentRef","instance","PxtInputModule","PxtButtonModule","PxtDateModule","PxtSelectModule","schemas","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","PxtRadiobuttonModule","PxtCheckboxModule","DynamicFieldDirectiveDialog","ɵ0$1","ɵ1","hasBackdrop","useValue","MAT_DIALOG_DEFAULT_OPTIONS","PxtInputFilterModule","PxtDialogFilterModule","PxtContentModule","HttpClientModule","HttpModule","PxtButton","icon","menu","enable","enum","SALVAR","PESQUISAR","LIMPAR","NOVO","VOLTAR","EXCLUIR","PxtSubmenusComponent","_pxtAppService","_serviceBase","notificationService","buttons","OptionsSubmenu","validationModel","statusSave","listing","statusDelete","add","Error","back","toString","toLocaleUpperCase","warning","ToastrService","PxtSubmenusModule","PxtDatepickerComponent","dateModel","onDateChange","onChange","PxtDatePickerModule","PxtDialogModule","PxtFilterComponent","PxtFilterModule","PxtDialogFilterCustomComponent","ɵ0$3","ɵ1$1","PxtFilterMatTableComponent","ENTER","COMMA","trim","applyFilterArray","applyFilter","applyFilterx","tableFilters","remove","index","splice","PxtFilterMatTableModule","pxtFields","Combo","Filter","Checkbox","PxtUploadFileComponent","onChangeImagem","imagem","fileSelected","PxtUploadFileModule","PxtGalleryComponent","galleryOptions","height","thumbnailsColumns","imageAnimation","NgxGalleryAnimation","Slide","breakpoint","imagePercent","thumbnailsPercent","thumbnailsMargin","thumbnailMargin","preview","PxtGalleryModule","NgxGalleryModule"],"mappings":"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","sourcesContent":["import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ad-pxt-content]',\r\n})\r\nexport class PxtContentBody {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class PxtAppComponentService {\r\n    private submenusItens: Subject<any> = new Subject<any>();\r\n    public readonly submenusItensObservable: Observable<any> = this.submenusItens.asObservable();\r\n\r\n    private _loadComponent: Subject<any> = new Subject<any>();\r\n    public readonly loadComponentObservable: Observable<any> = this._loadComponent.asObservable();\r\n\r\n    private _setUserLogged: Subject<any> = new Subject<any>();\r\n    public readonly userLoggedObservable: Observable<any> = this._setUserLogged.asObservable();\r\n\r\n    private _setInfoInit: Subject<any> = new Subject<any>();\r\n    public readonly infoInitial: Observable<any> = this._setInfoInit.asObservable();\r\n\r\n    setSubmenus(routes: any) {\r\n        this.submenusItens.next(routes);\r\n    }\r\n\r\n    setInitialInfo(infoInitial) {\r\n        this._setInfoInit.next(infoInitial)\r\n    }\r\n\r\n    loadComponent(component: any) {\r\n        this._loadComponent.next(component);\r\n    }\r\n\r\n    setUser(user: any) {\r\n        this._setUserLogged.next(user);\r\n    }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { map, filter, scan } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  config: any;\r\n  constructor(\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  load(url: string) {\r\n    const injectHttp = this.injector.get(HttpClient);\r\n    return new Promise((resolve) => {\r\n      injectHttp.get(url).pipe(\r\n        map(res => res)\r\n      ).subscribe(config => {\r\n          this.config = config;\r\n          resolve();\r\n        });\r\n    });\r\n  }\r\n\r\n  getConfiguration(element: string, dataList?: string) {\r\n    if (!dataList) {\r\n      const urlWithElement = this.config[element];\r\n      return this.verifyUrl(urlWithElement);\r\n    } else {\r\n      const urlWithDataList = this.config[dataList][element];\r\n      return this.verifyUrl(urlWithDataList);\r\n    }\r\n  }\r\n\r\n  verifyUrl(typeModel: any) {\r\n    if (typeModel.includes('/', typeModel.length - 1)) {\r\n      const typeRelease = typeModel;\r\n      return typeRelease;\r\n    } else {\r\n      const newType = typeModel + '/';\r\n      return newType;\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nimport { Http } from '@angular/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { map, filter, scan } from 'rxjs/operators';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable()\r\nexport class HttpHelperService {\r\n  constructor(private configService: ConfigService) {\r\n  }\r\n  public getApi() {\r\n    return this.configService.getConfiguration('API', 'PATH');\r\n  };\r\n\r\n  public getApiSgi() {\r\n    return this.configService.getConfiguration('API', 'SGI');\r\n  };\r\n\r\n  public getFrontSgi() {\r\n    return this.configService.getConfiguration('FRONT', 'SGI');\r\n  };\r\n\r\n  public getApiUrl (name, url) {\r\n    return this.configService.getConfiguration(url, name);\r\n  }\r\n\r\n  public getUrlLogo() {\r\n    return this.configService.getConfiguration('IMAGEM_LOGO', 'SGI');\r\n  }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport const environment = {\n  production: true,\n  envName: 'dev',\n  version: '0.0.1',\n  CONFIG_FILE: 'assets/config/env.json',\n  esbApiPxt : \"http://esbdsv.peixoto.com.br/sge/\",  \n  system: {\n    id: 108,\n    prex: \"PORCRP\"\n  }\n};\n\n","import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\nimport { Observable } from 'rxjs';\nimport { Http, RequestOptions } from '@angular/http';\nimport { environment } from '../../../environments/environment';\n\nvar system = environment.system;\n\n@Injectable()\nexport class TokenService {\n\n  constructor() {\n  }\n  getAccessToken() {\n    const token = localStorage.getItem('token');\n    if (token != null) {\n      return token;\n    }\n  }\n  setTokenStorage(res: any) {\n    localStorage.setItem('token', JSON.stringify(res));\n  }\n  removeTokenStorage() {\n    var token =  localStorage.getItem('token')\n    const decoded = <any> jwt_decode(token);\n    localStorage.removeItem(system.id+system.prex+decoded.sub);\n  }\n  \n  deleteToken() {\n    this.removeTokenStorage();\n  }\n\n  tokenExists(): boolean {\n    return localStorage.getItem('token') !== null && localStorage.getItem('token') !== undefined && localStorage.getItem('token') !== '';\n  }\n}\n","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-pxt-dialog',\n  templateUrl: './pxt-dialog.component.html',\n  styleUrls: ['./pxt-dialog.component.scss']\n})\nexport class PxtDialogComponent implements OnInit {\n\n  @Input() placeholder: string;\n\n  constructor(private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n  ngOnInit() {\n  }\n  cancelation() {\n    this.dialogRef.close(false);\n  }\n  confirmation() {\n    this.dialogRef.close(true);\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n  errorMessage: string = \"\";\r\n  \r\n  constructor() { }\r\n}\r\n","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { ErrorService } from './error.service';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n\r\nexport type HandleError = <T> (operation?: string, result?: T) => (error: HttpErrorResponse) => Observable<T>;\r\n\r\n/** Handles HttpClient errors */\r\n@Injectable()\r\nexport class HttpErrorHandler {\r\n\r\n  constructor(private errorService: ErrorService) { }\r\n\r\n  /** Create handleError function that already knows the service name */\r\n  createHandleError = (serviceName = '') => <T>\r\n    (operation = 'operation', result = {} as T) => this.handleError(serviceName, operation, result);\r\n\r\n  /**\r\n   * @param serviceName: name of the data service\r\n   * @param operation: name of the failed operation\r\n   * @param result: optional value to return as the observable result\r\n   */\r\n  handleError<T> (serviceName = '', operation = 'operation', result = {} as T) {\r\n\r\n    return (error: HttpErrorResponse): Observable<T> => {\r\n      // Todo -> Send the error to remote logging infrastructure\r\n     // console.error(error); // log to console instead\r\n\r\n      const message = (error.error instanceof ErrorEvent) ?\r\n        error.error.message :\r\n       `{error code: ${error.status}, body: \"${error.message}\"}`;\r\n\r\n      // Todo -> Transforming error for user consumption\r\n      this.errorService.errorMessage = `${serviceName} -> ${operation} failed.\\n  Message: ${message}`;\r\n      // -> Return a safe result.\r\n      return of( result );\r\n    };\r\n  }\r\n}","import { Observable, Subject } from 'rxjs';\nimport { Inject, forwardRef, Injectable, Injector } from '@angular/core';\nimport { Headers, Http, RequestOptions, Response, XHRBackend, RequestOptionsArgs, Request } from '@angular/http';\nimport { map, filter, scan, finalize, catchError } from 'rxjs/operators';\n\nimport { environment } from './../../../environments/environment';\nimport { TokenService } from './token.service';\nimport { MatDialog } from '@angular/material';\nimport { PxtDialogComponent } from './../../modules/pxt-dialog/pxt-dialog.component';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\nimport { HttpErrorHandler, HandleError } from './http-error-handler';\n\n//import { HttpHelperService } from './HttpHelperService';\n\n@Injectable()\nexport class PxtHttpService extends Http {\n\n  private handleError: HandleError;\n  constructor(private backend: XHRBackend,\n    options: RequestOptions,\n    private injector: Injector,\n    private urlHelper: HttpHelperService,\n    private dialog: MatDialog,\n    private tokenService: TokenService,\n    private httpErrorHandler: HttpErrorHandler\n  ) {\n    super(backend, options);\n    this.handleError = httpErrorHandler.createHandleError('CustomerService');\n  }\n\n  urlRequest: any;\n  origRequest: Request;\n  isUnathourized = false;\n\n  /**\n   *  Control Services\n   */\n  getHeaders() {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Cache-Control', 'no-store');\n    headers.append('Pragma', 'no-cache');\n\n    headers.append(\"Cache-Control\", \"no-cache\");\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\n    headers.append(\"Access-Control-Allow-Credentials\", \"true\");\n    headers.append(\"Access-Control-Allow-Methods\", \"GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS\");\n    headers.append(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization, Accept\");\n    return headers;\n  }\n\n  handleResponse(observable: Observable<Response>, url?: string) {\n    let result = null;\n    const orig = this.origRequest;\n    result = observable.pipe(\n     // catchError(this.handleError('addCustomer', null)),\n      \n      catchError((error) => {\n        return this.onCatch(error);\n      }),\n      \n      map(res => {\n        return this.onResult(res);\n      })\n    );\n    return result;\n  }\n  onResult(res) {\n    console.log(res);\n    if (res.status == 201) {\n      return res._body;\n    } else {\n      return res.json();\n    }\n  }\n\n  doGet(api: string, loader?: boolean) {\n    // this.preLoaderService.update(true);\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.get(url, requestOptions));\n  }\n\n  doPost(endpoint: string, params?: any) {\n    const url = endpoint;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.post(url, params, requestOptions), url);\n  }\n\n  doPut(api: string, params?: any) {\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.put(url, params, requestOptions), url);\n  }\n\n  doPath(api: string, params?: any, loader?: boolean) {\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.patch(url, params, requestOptions), url);\n  }\n\n  doDelete(api: string, params: any, loader?: boolean) {\n    const url = api;\n    const urlParam = url + '/' + params;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n\n    return this.handleResponse(super.delete(urlParam, requestOptions), urlParam);\n  }\n\n\n  request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\n    options = this.requestArgs(options);\n    if (typeof url === 'string') {\n      this.urlRequest = url;\n    } else {\n      this.urlRequest = url.url;\n      this.origRequest = url;\n    }\n\n    if (this.urlRequest !== environment.CONFIG_FILE) {\n      const token = this.tokenService.getAccessToken();\n      if (token != null) {\n        this.origRequest.headers.set('Authorization', 'Bearer '.concat(token));\n        options.headers.set('Authorization', 'Bearer '.concat(token));\n      }\n    }\n\n    url = this.origRequest;\n    return super.request(url, options);\n  }\n\n  private requestArgs(options: RequestOptionsArgs): RequestOptionsArgs {\n    if (options == null) {\n      options = new RequestOptions({ headers: this.getHeaders() });\n    }\n    return options;\n  }\n  public onCatch(error: any) {\n    console.log(error);\n    switch (error.status) {\n      case 401:\n        if (!this.isUnathourized) {\n          this.openDialog(401);\n          //this.tokenService.removeTokenStorage();\n          //window.location.href = environment.esbApiPxt + \"?erro=401\";\n        }\n        this.isUnathourized = true;\n        break;\n      case 400:\n        //console.log(\"error 400\");\n        this.openDialog(400);\n        // this.tokenService.removeTokenStorage();\n        //window.location.href = environment.esbApiPxt + \"?erro=400\";\n        break;\n      case 404:\n       // console.log(\"error 400\");\n        this.openDialog(404)\n        //this.tokenService.removeTokenStorage();\n        //window.location.href = environment.esbApiPxt + \"?erro=404\";\n        break;\n      case 403:\n        //console.log(403);\n        this.openDialog(403)\n        //this.tokenService.removeTokenStorage();\n        //window.location.href = environment.esbApiPxt + \"?erro=404\";\n        break;\n      default:\n       // console.log(error);\n        this.openDialog(401);\n        // window.location.href = environment.esbApiPxt + \"?erro=0\";\n        break;\n    }\n    return Observable.throw(error);\n  }\n\n\n  openDialog(erro) {\n    var contentDialog = \"VocÃª serÃ¡ redirecionado a tela de autenticaÃ§Ã£o!\"\n\n    let dialogRef = this.dialog.open(PxtDialogComponent, {\n      width: '600px',\n      panelClass: 'pxt-dialog',\n      data: { titleDialog: \"Erro - \" + erro, contentDialog: contentDialog }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      //console.log(this.urlHelper.getFrontSgi());\n      window.location.href = this.urlHelper.getFrontSgi() + \"?erro=\" + erro;\n    });\n\n  }\n}\n","export const pxtConfiguration = {systemId: 104 ,systemPrex: \"SGE_NEW\"}\r\n","import { Injectable } from '@angular/core';\nimport { HttpHelperService } from '../services/pxt-http/http-helper-service';\nimport { PxtHttpService } from '../services/pxt-http/pxt-http.service';\nimport jwt_decode from 'jwt-decode';\nimport { pxtConfiguration } from \"../models/pxtConfiguration\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private path = 'usuarios';\n\n  constructor(private httpService: PxtHttpService, private helper: HttpHelperService) {\n    this.path = this.helper.getApiSgi()+ this.path;\n  }\n\n  logout() {\n    localStorage.clear();\n    window.location.href = this.helper.getFrontSgi() + '?prefixoSistema=' + pxtConfiguration.systemPrex;\n  }\n\n  public static getUsuarioLogado(): any {\n    debugger\n    let usuario: any = {};\n    if (localStorage.getItem('USRLGD') !== null) {\n      let usuarioBase64: string = atob(localStorage.getItem('USRLGD'));\n      usuario = JSON.parse(usuarioBase64);\n    } else {\n      const decoded = <any>jwt_decode(localStorage.getItem('token'));\n      usuario.identificacaoAcesso = decoded.sub;\n      usuario.codigoPessoa = decoded.person_id;\n    }\n    return usuario;\n  }\n\n  setUsuarioLogado(username: string) {\n    this.buscarPorIdentificacaoAcesso(username).subscribe(val => {\n      let usuario: any = {};\n      usuario = val;\n      if (usuario === null) {\n        usuario = {};\n      }\n      let usuarioBase64: string = btoa(JSON.stringify(usuario));\n      localStorage.setItem('USRLGD', usuarioBase64);\n    });\n  }\n\n  public static getRules(): string[] {\n    debugger\n    var tokenAuthorities = localStorage.getItem(pxtConfiguration.systemId +pxtConfiguration.systemPrex + UserService.getUsuarioLogado().identificacaoAcesso);\n    const authority = <any>jwt_decode(tokenAuthorities);\n    let permissoes: string[] = authority.authorities;\n    return permissoes;\n  }\n\n  buscarPorIdentificacaoAcesso(identificacaoAcesso: string) {\n    return this.httpService.doGet(this.path + '/?identificador=' + identificacaoAcesso);\n  }\n}\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, Input, ViewChild, ComponentFactoryResolver, Inject, ViewContainerRef } from '@angular/core';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { Routes } from '@angular/router';\nimport { PxtApp } from './pxt-app';\nimport { PxtAppModel } from './model/pxt-app.model';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { AdComponent } from '../../interfaces/ad.component';\nimport { MatMenu, MatMenuTrigger } from '@angular/material';\nimport { group } from '@angular/animations';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../../services/user.service';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\n\n@Component({\n  selector: 'pxt-app',\n  templateUrl: './pxt-app.component.html',\n  styleUrls: ['./pxt-app.component.scss']\n\n})\nexport class PxtAppComponent {\n\n  //Properties\n  routes: any[] = [];\n  groups: any[] = [];\n  menus: any[] = [];\n  system: String = \"SYSTEM NAME\"\n  urlImg: string = 'http://imagensdsv.peixoto.com.br/auth/mini_logo.png';\n  menuSelected = \"\";\n  usuerLogged: any = {};\n  menusHtml: SafeHtml;\n  result: Observable<boolean>;\n  _mobileQueryListener: () => void;\n  mobileQuery: MediaQueryList;\n  shouldRun = true;\n  @Input() matMenu: MatMenu;\n  @ViewChild('menus', { read: ViewContainerRef }) subContainer1: ViewContainerRef;\n  @ViewChild('contextMenuTrigger', { read: MatMenuTrigger }) contextMenuTrigger: MatMenuTrigger;\n  currentAdIndex = -1;\n  @ViewChild(PxtContentBody) adHost: PxtContentBody;\n  interval: any;\n  menusReceived: any[];\n  urlLogo: string = '';\n\n  //Constructor\n  constructor(changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(PxtAppComponentService) public pxtAppComponentService,\n    private userService: UserService,\n    private httpHelperService: HttpHelperService,\n  ) {\n    setTimeout(() => {\n      this.mobileQuery = media.matchMedia('(max-width: 600px)');\n      this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n      this.mobileQuery.addListener(this._mobileQueryListener);\n      this.result = pxtAppComponentService.infoInitial.subscribe(infoInitial => {\n        if (infoInitial != undefined) {\n          this.usuerLogged = infoInitial.userLogged;\n          this.system = infoInitial.system;\n          this.menusReceived = infoInitial.sideBarMenus;\n          this.menus = infoInitial.sideBarMenus;\n          this.prepareMenu();\n        }\n      });\n      this.subscribeComponent();\n    }, 2000);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n    clearInterval(this.interval);\n  }\n\n  ngOnInit() {\n    this.urlLogo = this.httpHelperService.getUrlLogo();\n    if (this.urlLogo.endsWith('/')) {\n      this.urlLogo = this.urlLogo.substring(0, this.urlLogo.length - 1);\n    }\n    //this.atualizarMenuRotaAtual();\n    this.findUserLogged();\n  }\n\n  // Include of components in the application body\n  loadComponent(route: any, adHost) {\n    this.menuSelected = route.menuText;\n    let adItem = route.menuSource;\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(adItem.component);\n    let viewContainerRef = adHost.viewContainerRef;\n    viewContainerRef.clear();\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n  }\n\n  // Subscription to the service responsible for including components in the body of the application\n  subscribeComponent() {\n    this.pxtAppComponentService.loadComponentObservable.subscribe(componentObj => {\n      var arrayAux = this.menusReceived.filter(x => x.menuSource != undefined && x.menuSource.component === componentObj.component);\n      if (arrayAux.length == 1) {\n        this.menuSelected = arrayAux[0].menuText;\n      }\n      let componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentObj.component);\n      let viewContainerRef = this.adHost.viewContainerRef;\n      viewContainerRef.clear();\n      let componentRef = viewContainerRef.createComponent(componentFactory);\n      (<AdComponent>componentRef.instance).data = componentObj.data;\n    });\n  }\n\n  // Responsible for call method \"loadcomponents()\" informing parameters\n  selectItemMenu(nav) {\n    this.loadComponent(nav, this.adHost);\n  }\n\n  // Method responsible for preparing application menus;\n  prepareMenu() {\n    let arrayAux: any[];\n    arrayAux = this.menus.filter(x => x.menuType == \"group\" && x.menuParent == \"\");\n    var arrayAuxGroup = this.menus.filter(x => x.menuType == \"group\" && x.menuParent !== \"\");\n    var arrayAuxItem = this.menus.filter(x => x.menuType == \"item\" && x.menuParent !== \"\");\n\n    //add itens in groups\n    arrayAuxItem.forEach(item => {\n      var arrayTmp = arrayAuxGroup.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n        }\n        arrayTmp[0].childs.push(item);\n      };\n    });\n    //add groups in groups\n    arrayAuxGroup.forEach(item => {\n      var arrayTmp = arrayAuxGroup.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n        }\n        arrayTmp[0].childs.push(item)\n      };\n    });\n    //add groups in super-groups\n    arrayAuxGroup.forEach(item => {\n      var arrayTmp = arrayAux.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n          arrayTmp[0].childs.push(item);\n        } else {\n          arrayTmp[0].childs.push(item);\n        }\n      };\n    });\n\n    //add itens in super-groups\n    arrayAuxItem.forEach(item => {\n      var arrayTmp = arrayAux.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n        }\n        arrayTmp[0].childs.push(item);\n      };\n    });\n\n    this.menus = arrayAux;\n  };\n\n  logout() {\n    this.userService.logout();\n  };\n\n  findUserLogged() {\n    setTimeout(() => {\n      this.usuerLogged = UserService.getUsuarioLogado();\n    }, 2000);\n  }\n}\n","import './../../../polyfills';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatLineModule,\n  MatCommonModule,\n  MatOptionModule,\n  MatFormFieldModule,\n  MatPseudoCheckboxModule,\n  \n} from '@angular/material';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatIconModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    MatCardModule,MatIconModule,MatLineModule,\n    MatListModule,MatSortModule,MatTabsModule,MatTreeModule,\n    MatBadgeModule,MatChipsModule,MatInputModule,MatRadioModule,\n    MatTableModule,MatButtonModule,MatCommonModule,MatDialogModule,\n    MatOptionModule,MatRippleModule,MatSelectModule,MatSliderModule,\n    MatDividerModule,MatSidenavModule,MatStepperModule,MatToolbarModule,\n    MatToolbarModule,MatTooltipModule,MatCheckboxModule,MatGridListModule,\n    MatSnackBarModule,MatExpansionModule,MatFormFieldModule,MatPaginatorModule,\n    MatDatepickerModule,MatNativeDateModule,MatBottomSheetModule,MatProgressBarModule,\n    MatSlideToggleModule,MatAutocompleteModule,MatButtonToggleModule,MatPseudoCheckboxModule,\n    MatProgressSpinnerModule, BrowserModule, CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatIconModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    MatMenuModule,MatCardModule,MatIconModule,MatLineModule,\n    MatListModule,MatSortModule,MatTabsModule,MatTreeModule,\n    MatBadgeModule,MatChipsModule,MatInputModule,MatRadioModule,\n    MatTableModule,MatButtonModule,MatCommonModule,MatDialogModule,\n    MatOptionModule,MatRippleModule,MatSelectModule,MatSliderModule,\n    MatDividerModule,MatSidenavModule,MatStepperModule,MatToolbarModule,\n    MatToolbarModule,MatTooltipModule,MatCheckboxModule,MatGridListModule,\n    MatSnackBarModule,MatExpansionModule,MatFormFieldModule,MatPaginatorModule,\n    MatDatepickerModule,MatNativeDateModule,MatBottomSheetModule,MatProgressBarModule,\n    MatSlideToggleModule,MatAutocompleteModule,MatButtonToggleModule,MatPseudoCheckboxModule,\n    MatProgressSpinnerModule, BrowserModule, CommonModule,\n    MatNativeDateModule,\n    ReactiveFormsModule\n  ]\n})\nexport class MaterialAngularModule { }\n","import { Injectable } from '@angular/core';\nimport { PxtHttpService } from './pxt-http.service';\nimport { HttpHelperService } from './http-helper-service';\nimport { TokenService } from './token.service';\nimport { HttpClient, HttpRequest, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class RequestBaseService {\n\n  public model: any;\n  public urlService: string;\n  public urlServiceAuto: string;\n\n  constructor(private httpService: PxtHttpService,\n    private helper: HttpHelperService,\n    private tokenService: TokenService,\n    public _httpClient: HttpClient) {\n    this.urlService = helper.getApi();\n  }\n  load(): any {\n    return this.httpService.doGet(this.urlServiceAuto);\n  };\n  save(model?: any): any {\n    return this.httpService.doPost(this.urlServiceAuto, model);\n  };\n  delete(id): any {\n    return this.httpService.doDelete(this.urlServiceAuto, id);\n  };\n\n  doGet(path: string, params?: Map<any, any>) {\n    let url\n    if (params !== undefined && params.size > 0) {\n      url = path + this.buildRequestParams(params);\n    } else {\n      url = path;\n    }\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doGet(path);\n    } else {\n      return this.httpService.doGet(this.urlService + url);\n    }\n  };\n\n  doPost(path: string, model?: any) {\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doPost(path, model);\n    } else {\n      return this.httpService.doPost(this.urlService + path, model);\n    };\n  };\n\n  doPut(path: string, model?: any) {\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doPut(path, model);\n    } else {\n      return this.httpService.doPut(this.urlService + path, model);\n    }\n  };\n\n  doDelete(path: string, id: number) {\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doDelete(path, id);\n    } else {\n      return this.httpService.doDelete(this.urlService + path, id);\n    };\n  };\n\n  uploadImage(path, params?: Map<any, any>): any {\n\n    if (path.indexOf('http') <= -1) {\n      path = this.urlService + path ;\n    };\n\n    const header = {\n      'Authorization': 'Bearer '.concat(this.tokenService.getAccessToken())\n    };\n    const httpOptions = new HttpHeaders(header);\n    const token = this.tokenService.getAccessToken();\n    const formdata = this.setParamsFormdata(params);\n    const req = new HttpRequest('POST', path, formdata, {\n      headers: httpOptions,\n      reportProgress: true,\n      responseType: 'text'\n    });\n    return this._httpClient.request(req);\n  }\n\n\n  setParamsFormdata(params: Map<any, any>): FormData {\n    const formdata: FormData = new FormData();\n    let primeiraIteracao = true;\n    params.forEach((value, key) => {\n      formdata.append(key, value);\n    });\n    return formdata;\n  };\n\n  private buildRequestParams(params: Map<any, any>): string {\n    let final = '';\n    let primeiraIteracao = true;\n    params.forEach((value, key) => {\n      if (primeiraIteracao) {\n        final += '?' + key + '=' + value;\n        primeiraIteracao = false;\n      } else {\n        final += '&' + key + '=' + value;\n      }\n    });\n    return final;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, UpperCasePipe } from \"@angular/common\";\r\n\r\n@Pipe({\r\n  name: 'uppercaseFirst'\r\n})\r\nexport class UpercaseFirst extends UpperCasePipe implements PipeTransform {\r\n  transform(text: any, args?: any): any {\r\n    if (text != undefined) {\r\n      var words = text.toLowerCase().split(\" \");\r\n      for (var a = 0; a < words.length; a++) {\r\n        if (words[a].length > 3) {\r\n          var w = words[a];\r\n          words[a] = w[0].toUpperCase() + w.slice(1);\r\n        }\r\n      }\r\n      return words.join(\" \");\r\n    }\r\n  }\r\n}","export class Constants {\r\n    static readonly DATE_FMT = 'dd/MM/yyyy';\r\n    static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} - hh:mm:ss a`;\r\n  }","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { Constants } from \"../util/constants\";\r\n\r\n@Pipe({\r\n    name: 'dateFormat'\r\n  })\r\n  export class DateFormatPipe extends DatePipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n      return super.transform(value, Constants.DATE_FMT);\r\n    }\r\n  }","import { DatePipe } from \"@angular/common\";\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { Constants } from \"../util/constants\";\r\n\r\n\r\n@Pipe({\r\n  name: 'dateTimeFormat'\r\n})\r\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    var datePipe = new DatePipe(\"en-US\");\r\n    return  datePipe.transform(value, Constants.DATE_TIME_FMT);\r\n  }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, UpperCasePipe } from \"@angular/common\";\r\n\r\n@Pipe({\r\n  name: 'controllerPipe'\r\n})\r\nexport class ControllerPipe implements PipeTransform {\r\n  transform(text: any, args?: any): any {\r\n    if (text != undefined) {\r\n      var words = text;\r\n      var aux = \"\";\r\n      for (var a = 0; a < words.length; a++) {\r\n        if (a == 0) {\r\n            aux = words[a].toLowerCase();\r\n        }\r\n        else{\r\n            aux = aux + words[a] ;\r\n        }\r\n      }\r\n      return aux;\r\n    }\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UpercaseFirst } from './uppercase-first';\r\nimport { DateFormatPipe } from './date-format.pipe';\r\nimport { DateTimeFormatPipe } from './date-time-format.pipe';\r\nimport { ControllerPipe } from './controller.pipe';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [UpercaseFirst, DateFormatPipe,DateTimeFormatPipe, ControllerPipe ],\r\n    exports: [UpercaseFirst, DateFormatPipe,DateTimeFormatPipe, ControllerPipe ]\r\n})\r\nexport class PipeModule { }\r\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { PxtAppComponentService } from '../../../services/pxt-app-components.service';\n\n\n@Component({\n  selector: 'pxt-app-menu-item',\n  templateUrl: './pxt-app-menu-item.component.html',\n  styleUrls: ['./pxt-app-menu-item.component.css']\n})\nexport class PxtAppMenuItemComponent implements OnInit {\n\n  @Input() items: any[];\n  @ViewChild('childMenu') public childMenu;\n\n  constructor(@Inject(PxtAppComponentService) public pxtAppComponentService) { }\n  ngOnInit() {\n  }\n\n  loadComponent(child) {\n    this.pxtAppComponentService.loadComponent({component: child.menuSource.component, data:\"\"});\n  }\n\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\nimport { pxtConfiguration } from \"../models/pxtConfiguration\";\nimport jwt_decode from 'jwt-decode';\nimport { UserService } from '../services/user.service';\n\n@Directive({\n  selector: '[isUserInRule]'\n})\nexport class RulesDirective {\n\n  @Input('isUserInRule') rule: string;\n\n  constructor(public el: ElementRef) { }\n\n  ngAfterViewInit() {\n    debugger\n    let permissoes: string[] = this.getRules();\n    this.el.nativeElement.style.display = permissoes.includes(this.rule) ? '' : 'none';\n  }\n\n  public  getRules(): string[] {\n    var tokenAuthorities = localStorage.getItem(pxtConfiguration.systemId + pxtConfiguration.systemPrex + UserService.getUsuarioLogado().login);\n    const authority = <any>jwt_decode(tokenAuthorities);\n    let permissoes: string[] = authority.authorities;\n    return permissoes;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RulesDirective } from '../rules.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [RulesDirective],\n  exports:[RulesDirective]\n})\nexport class DirectiveModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtAppMenuItemComponent } from './pxt-app-menu-item.component';\nimport { PipeModule } from '../../../pipes/pipes.module';\nimport { MaterialAngularModule } from '../../material-angular/material-angular.module';\nimport { DirectiveModule } from '../../../directives/directive/directive.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule,\n    DirectiveModule\n  ],\n  declarations: [PxtAppMenuItemComponent],\n   exports: [PxtAppMenuItemComponent],\n  entryComponents: [ PxtAppMenuItemComponent ]\n  \n})\nexport class PxtAppMenuItemModule { }\n","import { Directive, Input, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[hash]',\r\n  })\r\n  export class HashDirective  {\r\n    @Input() hash: string;\r\n  \r\n    constructor(public vcRef: ViewContainerRef) {}\r\n  }","import { Injectable } from '@angular/core';\nimport { VisibleInRolesGuard } from '../visible-in-roles.guard';\nimport { PxtHttpService } from '../services/pxt-http/pxt-http.service';\nimport { HttpHelperService } from '../services/pxt-http/http-helper-service';\n@Injectable()\nexport class AuthorityService {\n  constructor(private _http: PxtHttpService, private _httpHelper: HttpHelperService) { }\n\n  buscarAuthorities (codigoSistema) {\n    const url = this._httpHelper.getApiSgi() + \"permissoes/buscarPerfilSistema/?\";\n    const params = \"codigoSistema=\" + codigoSistema;\n    return this._http.doGet(url + params);\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpHelperService } from './services/pxt-http/http-helper-service';\r\nimport { AuthorityService } from './services/authority.service';\r\nimport { pxtConfiguration } from \"./models/pxtConfiguration\"\r\nimport { UserService } from './services/user.service';\r\n\r\n@Injectable()\r\nexport class VisibleInRolesGuard implements CanActivate {\r\n  constructor(private router: Router, private httpHelper: HttpHelperService, private authorityService: AuthorityService, private userService: UserService) { }\r\n  canActivate(next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const token = localStorage.getItem('token');\r\n    debugger;\r\n    if (token !== 'undefined' && token !== '' && token !== null) {\r\n      try {\r\n        const decoded = <any>jwt_decode(token);\r\n        var tokenAuthorities = localStorage.getItem(pxtConfiguration.systemId + pxtConfiguration.systemPrex + decoded.sub);\r\n        if (tokenAuthorities === 'undefined' || tokenAuthorities === '' || tokenAuthorities === null) {\r\n          this.authorityService.buscarAuthorities(pxtConfiguration.systemId).subscribe(data => {\r\n            localStorage.setItem(pxtConfiguration.systemId + pxtConfiguration.systemPrex + decoded.sub, data.authority)\r\n          });\r\n        }\r\n//----------------------------------------------------------------------------------------------------------------------\r\n        else {\r\n          const authority: any = jwt_decode(tokenAuthorities);\r\n          this.userService.setUsuarioLogado(decoded.sub); // envia username\r\n          if (decoded.exp === undefined) {\r\n            return false;\r\n          }\r\n        }\r\n//----------------------------------------------------------------------------------------------------------------------\r\n      }\r\n      catch (err) {\r\n        //window.location.href = this.httpHelper.getUrlAutenticacao() + \"?erro=401\";\r\n        console.log(err);\r\n        return false;\r\n      }\r\n    } else {\r\n      // window.location.href = this.httpHelper.getUrlAutenticacao() + \"?erro=401\";\r\n      console.log(\"Token Undefined\");\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, \r\n  HttpInterceptor, \r\n  HttpHandler, \r\n  HttpRequest,\r\n  HttpResponse\r\n} from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { catchError,tap} from 'rxjs/operators';\r\n\r\n@Injectable()//{providedIn: 'root'}\r\n\r\nexport class InterceptService  implements HttpInterceptor {\r\n\r\n\tconstructor() { }\r\n\r\n\t// intercept request and add token\r\n  \tintercept(request: HttpRequest<any>, next: HttpHandler):Observable<HttpEvent<any>> {\r\n\r\n    \t// modify request\r\n\t    request = request.clone({\r\n\t      setHeaders: {\r\n\t        Authorization: `Bearer ${localStorage.getItem('MY_TOKEN')}`\r\n\t      }\r\n\t    });\r\n\r\n\r\n\t    return next.handle(request)\r\n\t    .pipe(\r\n\t        tap(event => {\r\n\t          if (event instanceof HttpResponse) {\r\n\t          \r\n\t          }\r\n\t        }, error => {\r\n\t   \t\t\t// http response status code\r\n\r\n\r\n\t        })\r\n\t      )\r\n\r\n    };\r\n  \r\n \r\n}","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtAppComponent } from './pxt-app.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { ConfigService } from '../../services/pxt-http/config.service';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { PxtHttpService } from '../../services/pxt-http/pxt-http.service';\nimport { environment } from '../../../environments/environment';\nimport { PipeModule } from '../../pipes/pipes.module';\nimport { MatMenuModule } from '@angular/material';\nimport { PxtAppMenuItemModule } from './pxt-app-menu-item/pxt-app-menu-item.module';\nimport { HashDirective } from '../../directives/HashDirective';\nimport { VisibleInRolesGuard } from '../../visible-in-roles.guard';\nimport { AuthorityService } from '../../services/authority.service';\nimport { TokenService } from '../../services/pxt-http/token.service';\nimport { ToastrModule } from 'ngx-toastr';\nimport { HttpErrorHandler } from '../../services/pxt-http/http-error-handler';\nimport { InterceptService } from '../../services/pxt-interceptor/intercept-service ';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DirectiveModule } from '../../directives/directive/directive.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule,\n    MatMenuModule,\n    DirectiveModule,\n    PxtAppMenuItemModule,\n    ToastrModule.forRoot({progressBar: true})    \n  ],\n  declarations: [PxtAppComponent, PxtContentBody, HashDirective],\n  exports: [PxtAppComponent],\n  providers: [PxtAppComponentService, \n    PxtHttpService, \n    RequestBaseService, \n    HttpHelperService, \n    ConfigService,  \n    HttpErrorHandler,  \n    VisibleInRolesGuard,\n    TokenService,\n    AuthorityService,\n  InterceptService , {\n    provide: HTTP_INTERCEPTORS,\n    useClass: InterceptService,\n    multi: true\n  }]\n})\nexport class PxtAppModule { }\n","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtInputField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtCheckboxField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    filters?: any;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\n\r\nexport class pxtDateField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    type?: string;\r\n    validations?: Validator[];\r\n    disabled: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtFilterField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    className?: any;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}\r\n","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\n\r\nexport class pxtRadioButtonField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    options?: string[];\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtSelectField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    className?: any;\r\n    options?: string[];\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n    parameter?: any; \r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtfilterCustomField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    className?: any;\r\n    inputType?: string;\r\n    filters?: any;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    disabled?: boolean;\r\n    validations?: Validator[];\r\n}","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { AdComponent } from '../../interfaces/ad.component';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '../../interfaces/field.interface';\nimport { PxtFieldConfig } from '../../interfaces/pxt-field-config';\nimport { PxtInputComponent } from '../shared/components/pxt-input/pxt-input.component';\nimport { pxtInputField } from '../../fields/pxt-input-field';\nimport { pxtCheckboxField } from '../../fields/pxt-checkbox-field';\nimport { pxtDateField } from '../../fields/pxt-date-field';\nimport { pxtFilterField } from '../../fields/pxt-filter-field';\nimport { pxtRadioButtonField } from '../../fields/pxt-radiobutton-field';\nimport { pxtSelectField } from '../../fields/pxt-select-field';\nimport { pxtfilterCustomField } from '../../fields/pxt-filter-custom-field';\n\n@Component({\n  selector: 'pxt-content-body',\n  templateUrl: './pxt-content.component.html',\n  styleUrls: ['./pxt-content.component.scss']\n})\nexport class PxtContentComponent implements AdComponent {\n  //Properties \n  @Input() data: any;\n  @Input() auto?: boolean;\n  @Input() fields: PxtFieldConfig[] = [];\n  @Input() cols: number = 5;\n  @Input() field: any;\n  colsInitial = 5;\n  @Output() submit: EventEmitter<any> = new EventEmitter<any>();\n\n  public form: FormGroup;\n\n  public get value() {\n    return this.form.value;\n  }\n\n  //Constructor\n  constructor(public fb: FormBuilder) { }\n\n  ngOnInit() {\n\n    if (this.field != undefined){\n    Object.keys(this.field).forEach(key => {\n      switch (this.field[key].constructor.name) {\n\n        //FilterCustom\n        case pxtfilterCustomField.name:\n          var instanceFilterCustom = <pxtfilterCustomField>this.field[key];\n          instanceFilterCustom.type = 'filter';\n          this.fields.push(instanceFilterCustom);\n          break;\n\n        //Input\n        case pxtInputField.name:\n          var instanceInput = <pxtInputField>this.field[key];\n          instanceInput.type = 'input';\n          this.fields.push(instanceInput);\n          break;\n\n        //Checkbox\n        case pxtCheckboxField.name:\n          var instanceCheck = <pxtCheckboxField>this.field[key];\n          instanceCheck.type = 'checkbox';\n          this.fields.push(instanceCheck);\n          break;\n\n        //Date\n        case pxtDateField.name:\n          var instanceDate = <pxtDateField>this.field[key];\n          instanceDate.type = 'date';\n          this.fields.push(instanceDate);\n          break;\n\n        //Filter\n        case pxtFilterField.name:\n          var instanceFilter = <pxtDateField>this.field[key];\n          instanceFilter.type = 'filter';\n          this.fields.push(instanceFilter);\n          break;\n\n        //RadioButton\n        case pxtRadioButtonField.name:\n          var instanceRadio = <pxtDateField>this.field[key];\n          instanceRadio.type = 'radio';\n          this.fields.push(instanceRadio);\n          break;\n\n          \n        //Select\n        case pxtSelectField.name:\n        var instanceSelect = <pxtDateField>this.field[key];\n        instanceSelect.type = 'select';\n        this.fields.push(instanceSelect);\n        break;\n\n        default:\n          break;\n      }\n    });\n  }\n    this.onResize();\n    this.colsInitial = this.cols;\n    this.form = this.createControl();\n  }\n\n  // Method responsible for create control\n  public onSubmit(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.form.valid) {\n\n      this.submit.emit(this.form.value);\n    } else {\n      this.validateAllFormFields(this.form);\n    }\n  }\n\n  // Method responsible for create control\n  public createControl() {\n    const group = this.fb.group({});\n    this.fields.forEach(field => {\n      if (field.type === \"button\") return;\n      const control = this.fb.control(\n        { value: field.value, disabled: field.disabled },\n        this.bindValidations(field.validations || [])\n      );\n      group.addControl(field.name, control);\n    });\n    return group;\n  }\n\n  public bindValidations(validations: any): any {\n    if (validations.length > 0) {\n      const validList = [];\n      validations.forEach(valid => {\n        validList.push(valid.validator);\n      });\n      return Validators.compose(validList);\n    }\n    return null;\n  }\n\n  public validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      control.markAsTouched({ onlySelf: true });\n    });\n  }\n  screenWidth;\n  @HostListener('window:resize', ['$event'])\n  onResize(event?) {\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth <= 800) {\n      this.cols = 1;\n    } else if (this.screenWidth <= 1100) {\n      this.cols = 3;\n    } else {\n      this.cols = this.colsInitial;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FieldConfig } from '../../../../interfaces/field.interface';\nimport { FormGroup } from '@angular/forms';\nimport { ViewEncapsulation } from '@angular/compiler/src/core';\n\n@Component({\n  selector: 'pxt-input',\n  templateUrl: './pxt-input.component.html',\n  styleUrls: ['./pxt-input.component.scss']\n})\nexport class PxtInputComponent implements OnInit {\n\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FieldConfig } from '../../../../interfaces/field.interface';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'pxt-button',\n  templateUrl: './pxt-button.component.html',\n  styleUrls: ['./pxt-button.component.scss']\n})\nexport class PxtButtonComponent implements OnInit {\n\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n\n}\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\n\n@Component({\n  selector: 'pxt-date',\n  templateUrl: './pxt-date.component.html',\n  styleUrls: ['./pxt-date.component.scss']\n})\nexport class PxtDateComponent implements OnInit {\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'pxt-checkbox',\n  templateUrl: './pxt-checkbox.component.html',\n  styleUrls: ['./pxt-checkbox.component.scss']\n})\nexport class PxtCheckboxComponent implements OnInit {\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'pxt-radiobutton',\n  templateUrl: './pxt-radiobutton.component.html',\n  styleUrls: ['./pxt-radiobutton.component.scss']\n})\nexport class PxtRadiobuttonComponent implements OnInit {\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n\n}\n","import { Component, OnInit, Input, forwardRef, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { RequestBaseService } from '../../../../services/pxt-http/request-base.service';\n\nconst noop = () => {\n};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PxtSelectComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pxt-select',\n  templateUrl: './pxt-select.component.html',\n  styleUrls: ['./pxt-select.component.scss'],\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class PxtSelectComponent implements OnInit, ControlValueAccessor {\n\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Selecione';\n  @Input() model: any;\n  @Input() params: any;\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter<any>();\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.params != undefined && !changes.params.firstChange) {\n      this.params = changes.params.currentValue;\n      this.find();\n    }\n  }\n\n  controller = \"\";\n  auto = false;\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n\n  option: any;\n\n  options: any[] = [];\n\n  get selectedOption() {\n    return this.option;\n  }\n\n  onBlur() {\n    this.onTouchedCallback();\n  }\n\n  set selectedOption(f: any) {\n    if (f != undefined) {\n      if (f !== this.option) {\n        this.option = f;\n        this.onChangeCallback(f.codigo);\n        this.selectionChange.emit(this.option);\n      }\n    }\n  }\n\n  writeValue(value: any) {\n    this.option = value;\n    this.onChangeCallback(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  constructor(public pxthttp: RequestBaseService) {\n  }\n\n  ngOnInit() {\n    if (this.model != undefined) {\n      this.controller = this.model.constructor.name;\n      this.field = this.model;\n      this.auto = false;\n    } else if (this.field != undefined && this.field.className != undefined) {\n      this.controller = this.field.className.name;\n      this.auto = true;\n    }\n  };\n\n  find() {\n    if (this.controller != undefined) {\n      this.pxthttp.doGet(this.controller, this.params).subscribe(result => {\n        if (this.auto) {\n          this.field.options = result;\n        } else {\n          this.options = result;\n        }\n      });\n    }\n  };\n  ngAfterViewInit() {\n    this.find();\n  };\n}\n\n\n","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { HttpHelperService } from '../../../services/pxt-http/http-helper-service';\nimport { RequestBaseService } from '../../../services/pxt-http/request-base.service';\nimport { PxtFieldConfig } from '../../../interfaces/pxt-field-config';\n\nimport { pxtInputField } from '../../../fields/pxt-input-field';\nimport { pxtCheckboxField } from '../../../fields/pxt-checkbox-field';\nimport { pxtDateField } from '../../../fields/pxt-date-field';\nimport { pxtFilterField } from '../../../fields/pxt-filter-field';\nimport { pxtSelectField } from '../../../fields/pxt-select-field';\nimport { pxtRadioButtonField } from '../../../fields/pxt-radiobutton-field';\nimport { pxtfilterCustomField } from '../../../fields/pxt-filter-custom-field';\nimport { post } from 'selenium-webdriver/http';\n\n\ndeclare var $: any;\n@Component({\n  selector: 'pxt-dialog-filter',\n  templateUrl: './pxt-dialog-filter.component.html',\n  styleUrls: ['./pxt-dialog-filter.component.scss']\n})\nexport class PxtDialogFilterComponent implements OnInit {\n\n  displayedColumns = ['codigo', 'descricao'];\n  dataSource = new MatTableDataSource<any>();\n  controller = \"\";\n  cols = 2;\n  fields: PxtFieldConfig[] = [];\n  fieldsHist: PxtFieldConfig[] = [];\n  auto: boolean;\n  filter = { code: undefined, description: undefined };\n  field: PxtFieldConfig;\n  public form: FormGroup;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  get value() {\n    return this.form.value;\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogFilterComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public helper: HttpHelperService,\n    public http: RequestBaseService) {\n    this.controller = data.controller;\n  }\n  ngOnInit() {\n    this.auto = this.data.auto;\n    if (this.auto) {\n      this.field = this.data.filters;\n      Object.keys(this.field).forEach(key => {\n        switch (this.field[key].constructor.name) {\n          case pxtfilterCustomField.name:\n            var instanceFilterCustom = <pxtfilterCustomField>this.field[key];\n            instanceFilterCustom.type = 'filter';\n            this.fields.push(instanceFilterCustom);\n            this.fieldsHist.push(instanceFilterCustom);\n            break;\n          //Input\n          case pxtInputField.name:\n            var instanceInput = <pxtInputField>this.field[key];\n            instanceInput.type = 'input';\n            this.fields.push(instanceInput);\n            this.fieldsHist.push(instanceInput);\n            break;\n\n          //Checkbox\n          case pxtCheckboxField.name:\n            var instanceCheck = <pxtCheckboxField>this.field[key];\n            instanceCheck.type = 'checkbox';\n            this.fields.push(instanceCheck);\n            this.fieldsHist.push(instanceCheck);\n            break;\n\n          //Date\n          case pxtDateField.name:\n            var instanceDate = <pxtDateField>this.field[key];\n            instanceDate.type = 'date';\n            this.fields.push(instanceDate);\n            this.fieldsHist.push(instanceDate);\n            break;\n\n          //Filter\n          case pxtFilterField.name:\n            var instanceFilter = <pxtDateField>this.field[key];\n            instanceFilter.type = 'filter';\n            this.fields.push(instanceFilter);\n            this.fieldsHist.push(instanceFilter);\n            break;\n\n          //RadioButton\n          case pxtRadioButtonField.name:\n            var instanceRadio = <pxtDateField>this.field[key];\n            instanceRadio.type = 'radio';\n            this.fields.push(instanceRadio);\n            this.fieldsHist.push(instanceRadio);\n            break;\n          //Select\n          case pxtSelectField.name:\n            var instanceSelect = <pxtDateField>this.field[key];\n            instanceSelect.type = 'select';\n            this.fields.push(instanceSelect);\n            this.fieldsHist.push(instanceSelect);\n            break;\n        }\n      });\n      this.fields.sort((a, b) => {\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        return 0;\n      });\n      this.fieldsHist.sort((a, b) => {\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        return 0;\n      });\n      this.form = this.createControl();\n    }\n    else {\n      if (this.data.displayedColumns != undefined) {\n        this.displayedColumns = this.data.displayedColumns;\n      }\n    }\n  }\n\n  cancelation() {\n    this.dialogRef.close(undefined);\n  }\n  confirmation(event) {\n    this.dialogRef.close(true);\n  }\n\n  //Search.\n  search() {\n    let params = new Map<any, any>();\n    debugger;\n    if (this.data.auto != undefined && this.data.auto) {\n      if (this.form.value !== undefined) {\n        Object.keys(this.form.value).forEach(key => {\n          if (this.form.value[key] != undefined) {\n            params.set(key, this.form.value[key]);\n          }\n        });\n      }\n\n      this.http.doGet(this.controller, params).subscribe(result => {\n        this.dataSource.data = result;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n    } else {\n      if (this.filter.code != undefined && this.filter.code != 0 && this.filter.code != \"\") {\n        params.set(\"codigo\", this.filter.code);\n      }\n      if (this.filter.description != undefined && this.filter.description != \"\") {\n        params.set(\"descricao\", this.filter.description);\n      }\n      this.http.doGet(this.controller, params).subscribe(result => {\n        this.dataSource.data = result;\n      });\n    }\n  };\n\n  selectRow(row) {\n    this.dialogRef.close(row);\n  };\n  // Method responsible for create control\n  createControl() {\n    const group = this.fb.group({});\n    this.fields.forEach(field => {\n      if (field.type === \"button\") return;\n      const control = this.fb.control(\n        { value: field.value, disabled: field.disabled },\n        this.bindValidations(field.validations || [])\n      );\n      group.addControl(field.name, control);\n    });\n    return group;\n  };\n\n  bindValidations(validations: any): any {\n    if (validations.length > 0) {\n      const validList = [];\n      validations.forEach(valid => {\n        validList.push(valid.validator);\n      });\n      return Validators.compose(validList);\n    }\n    return null;\n  };\n\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      control.markAsTouched({ onlySelf: true });\n    });\n  };\n\n  close() {\n    this.dialogRef.close(undefined);\n  };\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n}\n","import { Component, OnInit, Input, forwardRef, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { PxtDialogFilterComponent } from '../../../pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.component';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n/*\nconst noop = () => {\n};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PxtInputFilterComponent),\n  multi: true\n};\n*/\n@Component({\n  selector: 'pxt-input-filter',\n  templateUrl: './pxt-input-filter.component.html',\n  styleUrls: ['./pxt-input-filter.component.scss'],\n  //providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class PxtInputFilterComponent implements OnInit {\n  isDisabled = true;\n  auto: boolean;\n  @Input() className :String;\n  @Input() placeholder : String = \" \";\n  @Input() displayedColumns : any[];\n  @Output() onValueCallback: EventEmitter<any> = new EventEmitter();\n  @Input() value :String = \" \";\n   \n  field: PxtFieldConfig;\n  group: FormGroup;\n\n  //private onChangeCallback: (_: any) => void = noop;\n \n  constructor(public dialog: MatDialog) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.className != undefined && !changes.className.firstChange) {\n      this.className = changes.className.currentValue;\n    }\n    if (changes.placeholder != undefined && !changes.placeholder.firstChange) {\n      this.placeholder = changes.placeholder.currentValue;\n    }\n\n    if (changes.value != undefined && !changes.value.firstChange) {\n      this.value = changes.value.currentValue;\n    }\n    if (changes.displayedColumns != undefined && !changes.displayedColumns.firstChange) {\n      this.displayedColumns = changes.displayedColumns.currentValue;\n    }\n  }\n\n  ngOnInit() {\n    if (this.field != undefined){\n      this.value = this.field.value;\n    }\n  }\n\n  //Method resposible for open dialog filter\n  openFilter() {\n    if (this.field != undefined && this.field.filters != undefined) {\n      this.auto = true;\n      let dialogRef = this.dialog.open(PxtDialogFilterComponent, {\n        width: '600px',\n        panelClass: 'pxt-dialog',\n        data: { auto: this.auto, filters: this.field.filters, controller: this.field.className, titleDialog: \"Selecione: ( \" + this.field.className + \" )\" }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          this.field.value = result.codigo;\n        }\n      });\n    }else {\n      let dialogRef = this.dialog.open(PxtDialogFilterComponent, {\n        width: '600px',\n        panelClass: 'pxt-dialog',\n        data: {controller: this.className, displayedColumns:this.displayedColumns, titleDialog: \"Selecione: ( \" +  this.className + \" )\" }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          this.value = result[this.displayedColumns[1]];\n          this.onValueCallback.emit(result);\n        }\n      });\n    }\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, ViewContainerRef } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { PxtInputComponent } from \"../modules/shared/components/pxt-input/pxt-input.component\";\r\nimport { PxtButtonComponent } from \"../modules/shared/components/pxt-button/pxt-button.component\";\r\nimport { FieldConfig } from \"../interfaces/field.interface\";\r\nimport { PxtDateComponent } from \"../modules/shared/components/pxt-date/pxt-date.component\";\r\nimport { PxtCheckboxComponent } from \"../modules/shared/components/pxt-checkbox/pxt-checkbox.component\";\r\nimport { PxtRadiobuttonComponent } from \"../modules/shared/components/pxt-radiobutton/pxt-radiobutton.component\";\r\nimport { PxtSelectComponent } from \"../modules/shared/components/pxt-select/pxt-select.component\";\r\nimport { PxtInputFilterComponent } from \"../modules/shared/components/pxt-input-filter/pxt-input-filter.component\";\r\n\r\nconst componentMapper = {\r\n  input: PxtInputComponent,\r\n  button: PxtButtonComponent,\r\n  date: PxtDateComponent,\r\n  select: PxtSelectComponent,\r\n  radiobutton: PxtRadiobuttonComponent,\r\n  checkbox: PxtCheckboxComponent,\r\n  filter: PxtInputFilterComponent,\r\n};\r\n@Directive({\r\n  selector: \"[dynamicField]\"\r\n})\r\nexport class DynamicFieldDirective implements OnInit {\r\n  @Input() field: FieldConfig;\r\n  @Input() group: FormGroup;\r\n  componentRef: any;\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) { }\r\n  ngOnInit() {\r\n    const factory = this.resolver.resolveComponentFactory(\r\n      componentMapper[this.field.type]\r\n    );\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.field = this.field;\r\n    this.componentRef.instance.group = this.group;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtInputComponent } from './pxt-input.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtInputComponent],\n  exports:[PxtInputComponent],\n  entryComponents:[PxtInputComponent]\n})\nexport class PxtInputModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtButtonComponent } from './pxt-button.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtButtonComponent],\n  exports:[PxtButtonComponent],\n  entryComponents:[PxtButtonComponent]\n})\nexport class PxtButtonModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtDateComponent } from './pxt-date.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtDateComponent],\n  exports: [PxtDateComponent],\n  entryComponents: [PxtDateComponent]\n})\nexport class PxtDateModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtSelectComponent } from './pxt-select.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  exports:[PxtSelectComponent],\n  entryComponents:[PxtSelectComponent],\n  declarations: [PxtSelectComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class PxtSelectModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtRadiobuttonComponent } from './pxt-radiobutton.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtRadiobuttonComponent],\n  exports: [PxtRadiobuttonComponent],\n  entryComponents: [PxtRadiobuttonComponent]\n})\nexport class PxtRadiobuttonModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtCheckboxComponent } from './pxt-checkbox.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtCheckboxComponent],\n  exports: [PxtCheckboxComponent],\n  entryComponents:[PxtCheckboxComponent]\n})\nexport class PxtCheckboxModule { }\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, ViewContainerRef } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { PxtInputComponent } from \"../modules/shared/components/pxt-input/pxt-input.component\";\r\nimport { PxtButtonComponent } from \"../modules/shared/components/pxt-button/pxt-button.component\";\r\nimport { FieldConfig } from \"../interfaces/field.interface\";\r\nimport { PxtDateComponent } from \"../modules/shared/components/pxt-date/pxt-date.component\";\r\nimport { PxtCheckboxComponent } from \"../modules/shared/components/pxt-checkbox/pxt-checkbox.component\";\r\nimport { PxtRadiobuttonComponent } from \"../modules/shared/components/pxt-radiobutton/pxt-radiobutton.component\";\r\nimport { PxtSelectComponent } from \"../modules/shared/components/pxt-select/pxt-select.component\";\r\nimport { PxtInputFilterComponent } from \"../modules/shared/components/pxt-input-filter/pxt-input-filter.component\";\r\n\r\nconst componentMapper = {\r\n  input: PxtInputComponent,\r\n  button: PxtButtonComponent,\r\n  date: PxtDateComponent,\r\n  select: PxtSelectComponent,\r\n  radiobutton: PxtRadiobuttonComponent,\r\n  checkbox: PxtCheckboxComponent,\r\n  filter: PxtInputFilterComponent,\r\n};\r\n@Directive({\r\n  selector: \"[dynamicFieldDialog]\"\r\n})\r\nexport class DynamicFieldDirectiveDialog implements OnInit {\r\n  @Input() field: FieldConfig;\r\n  @Input() group: FormGroup;\r\n  componentRef: any;\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) { }\r\n  ngOnInit() {\r\n    const factory = this.resolver.resolveComponentFactory(\r\n      componentMapper[this.field.type]\r\n    );\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.field = this.field;\r\n    this.componentRef.instance.group = this.group;\r\n  }\r\n}\r\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtDialogFilterComponent } from './pxt-dialog-filter.component';\nimport { MaterialAngularModule } from '../../material-angular/material-angular.module';\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material';\nimport { DynamicFieldDirectiveDialog } from '../../../directives/dynamic-field-directive-dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtDialogFilterComponent,DynamicFieldDirectiveDialog],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  exports:[PxtDialogFilterComponent],\n  entryComponents:[PxtDialogFilterComponent],\n  providers: [\n    {provide: MAT_DIALOG_DATA, useValue: {}},\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}}\n  ]\n})\nexport class PxtDialogFilterModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtInputFilterComponent } from './pxt-input-filter.component';\nimport { PxtDialogFilterModule } from '../../../pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.module';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { DynamicFieldDirectiveDialog } from '../../../../directives/dynamic-field-directive-dialog';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PxtDialogFilterModule,\n    PipeModule\n  ],\n  declarations: [PxtInputFilterComponent],\n  exports: [PxtInputFilterComponent],\n  entryComponents:[PxtInputFilterComponent]\n})\nexport class PxtInputFilterModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtContentComponent } from './pxt-content.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { templateJitUrl } from '@angular/compiler';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { DynamicFieldDirective } from '../../directives/dynamic-field-directive';\nimport { PxtInputModule } from '../shared/components/pxt-input/pxt-input.module';\nimport { PxtButtonModule } from '../shared/components/pxt-button/pxt-button.module';\nimport { PxtDateModule } from '../shared/components/pxt-date/pxt-date.module';\nimport { PxtSelectModule } from '../shared/components/pxt-select/pxt-select.module';\nimport { PxtRadiobuttonModule } from '../shared/components/pxt-radiobutton/pxt-radiobutton.module';\nimport { PxtCheckboxModule } from '../shared/components/pxt-checkbox/pxt-checkbox.module';\nimport { PxtInputFilterModule } from '../shared/components/pxt-input-filter/pxt-input-filter.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    HttpClientModule,\n    HttpModule,\n    PxtInputModule,\n    PxtButtonModule,\n    PxtDateModule,\n    PxtSelectModule,\n    PxtRadiobuttonModule,\n    PxtCheckboxModule,\n    PxtInputFilterModule\n  ],\n  declarations: [PxtContentComponent, DynamicFieldDirective],\n   exports: [PxtContentComponent],\n  entryComponents: [ PxtContentComponent]\n})\nexport class PxtContentModule { }\n","\r\n\r\n\r\nexport class PxtButton {\r\n    icon: String;\r\n    menu: String;\r\n    enable: Boolean;\r\n    enum : Number;\r\n    constructor(icon: String, menu: String, enable: Boolean, id : number) {\r\n        this.icon = icon;\r\n        this.menu = menu;\r\n        this.enable = enable;\r\n        this.enum = id;\r\n    }\r\n\r\n}\r\n","export enum OptionsSubmenu {\r\n    SALVAR = 1,\r\n    PESQUISAR = 2,\r\n    LIMPAR = 3,\r\n    NOVO = 4,\r\n    VOLTAR= 5,\r\n    EXCLUIR= 6\r\n}","import { Component, ViewChild, ComponentFactoryResolver, Output, Input, EventEmitter } from '@angular/core';\nimport { PxtButton } from './model/pxt-submenus.model';\nimport { OptionsSubmenu } from './enum/option-submenu.enum';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { Observable } from 'rxjs';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\nimport { UpercaseFirst } from '../../pipes/uppercase-first';\nimport { ControllerPipe } from '../../pipes/controller.pipe';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'pxt-submenus',\n  templateUrl: './pxt-submenus.component.html',\n  styleUrls: ['./pxt-submenus.component.css']\n})\nexport class PxtSubmenusComponent<T> {\n\n  @Input() model?: T = {} as T;\n  private urlService = \"\";\n\n  @Output() listing: EventEmitter<T[]> = new EventEmitter();\n  @Output() statusSave: EventEmitter<T[]> = new EventEmitter();\n  @Output() statusDelete: EventEmitter<T[]> = new EventEmitter();\n  @Input() controller?: String;\n\n  save() {\n    if (this.validationModel()) {\n      this._serviceBase.save(this.model).subscribe(result => {\n        this.statusSave.emit(result);\n      });\n    }\n  };\n  search() {\n    this._serviceBase.load().subscribe(result => {\n      this.listing.emit(result);\n    });\n  };\n  delete(id) {\n    this._serviceBase.delete(id).subscribe(result => {\n      this.statusDelete.emit(result);\n    });\n  };\n  clear() {\n    this.model = {} as T;\n  };\n  add() {\n    throw new Error(\"Method 'add()' not implemented.\");\n  };\n  back() {\n    throw new Error(\"Method 'back()' not implemented.\");\n  };\n  cols = 3;\n  colspan = 1;\n  buttons: PxtButton[] = [];\n  enableSave = true;\n  enableBack = true;\n  enableClear = true;\n  enableSearch = true;\n  enableAdd = true;\n  enableDelete = true;\n\n  constructor(public _pxtAppService: PxtAppComponentService,\n    public _serviceBase: RequestBaseService,\n    public helper: HttpHelperService,\n    public notificationService: ToastrService) {\n    this.buttons.push(new PxtButton(\"keyboard_backspace\", \"VOLTAR\", true, OptionsSubmenu.VOLTAR));\n    this.buttons.push(new PxtButton(\"add\", \"SALVAR\", true, OptionsSubmenu.SALVAR));\n    this.buttons.push(new PxtButton(\"add\", \"NOVO\", true, OptionsSubmenu.NOVO));\n    this.buttons.push(new PxtButton(\"delete\", \"LIMPAR\", true, OptionsSubmenu.LIMPAR));\n    this.buttons.push(new PxtButton(\"search\", \"PESQUISAR\", true, OptionsSubmenu.PESQUISAR));\n    this.buttons.push(new PxtButton(\"delete\", \"EXCLUIR\", true, OptionsSubmenu.EXCLUIR));\n\n    setTimeout(() => {\n      debugger;\n      this.urlService = helper.getApi() + new ControllerPipe().transform(this.model.constructor.name);\n      this._serviceBase.urlServiceAuto = this.urlService;\n    }, 100);\n  }\n\n  validationModel() {\n    if (Object.keys(this.model).length > 0) {\n      Object.keys(this.model).forEach(key => {\n        if (this.model[key] != undefined && this.model[key] != \"\") {\n          this.notificationService.error(\"Campo ObrigatÃ³rio\", key.toString().toLocaleUpperCase());\n          return false;\n        }\n      });\n      return true;\n    } else {\n      debugger;\n      this.notificationService.warning(\"Nenhum campo preenchido.\", \"Aviso!\");\n      return false;\n    }\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { PxtSubmenusComponent } from './pxt-submenus.component';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { PxtHttpService } from '../../services/pxt-http/pxt-http.service';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\nimport { ConfigService } from '../../services/pxt-http/config.service';\nimport { PipeModule } from '../../pipes/pipes.module';\nimport { ToastrModule } from 'ngx-toastr';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtSubmenusComponent],\n  exports: [PxtSubmenusComponent],\n  providers:[PxtHttpService, RequestBaseService, HttpHelperService, ConfigService]\n})\nexport class PxtSubmenusModule { }\n\n  ","import { Component, OnInit, Input, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nconst noop = () => {\r\n};\r\n\r\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => PxtDatepickerComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'pxt-datepicker',\r\n  templateUrl: './pxt-datepicker.component.html',\r\n  styleUrls: ['./pxt-datepicker.component.scss'],\r\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class PxtDatepickerComponent implements OnInit, ControlValueAccessor {\r\n\r\n  @Input() placeholder: String = \"Escolha uma data\";\r\n  @Input() minDate: Date;\r\n  @Input() maxDate: Date;\r\n  @Input() inputDisabled: boolean = false;\r\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  dateModel: Date;\r\n\r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n\r\n  get dataSelecionada() {\r\n    return this.dateModel;\r\n  }\r\n\r\n  set dataSelecionada(d: Date) {\r\n    if (d !== this.dateModel) {\r\n      this.dateModel = d;\r\n      this.onChangeCallback(d);\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    this.onTouchedCallback();\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    this.dateModel = value;\r\n    this.onChangeCallback(value);\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n      this.onTouchedCallback = fn;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onDateChange() {\r\n    this.onChange.emit(true);\r\n  }\r\n\r\n  clear() {\r\n    this.writeValue(undefined);\r\n    this.onDateChange();\r\n  }\r\n  \r\n}","\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { PxtDatepickerComponent } from './pxt-datepicker.component';\r\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule,   MaterialAngularModule],\r\n  providers: [DatePipe],\r\n  declarations: [PxtDatepickerComponent],\r\n  exports: [PxtDatepickerComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\r\n})\r\nexport class PxtDatePickerModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtDialogComponent } from './pxt-dialog.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtDialogComponent],\n  exports: [PxtDialogComponent],\n  entryComponents:[PxtDialogComponent]\n\n})\nexport class PxtDialogModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { PxtDialogComponent } from '../pxt-dialog/pxt-dialog.component';\n\n@Component({\n  selector: 'app-pxt-filter',\n  templateUrl: './pxt-filter.component.html',\n  styleUrls: ['./pxt-filter.component.css']\n})\nexport class PxtFilterComponent implements OnInit {\n\n  public data : any;\n  constructor(private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogComponent>, @Inject(MAT_DIALOG_DATA) data) {\n      this.data = data;\n     }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtFilterComponent } from './pxt-filter.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule, \n    MaterialAngularModule\n  ],\n  declarations: [PxtFilterComponent],\n  exports: [PxtFilterComponent],\n  entryComponents:[PxtFilterComponent]\n \n})\nexport class PxtFilterModule { }\n","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { RequestBaseService } from '../../../services/pxt-http/request-base.service';\n\n\n@Component({\n  selector: 'pxt-dialog-filter-custom',\n  templateUrl: './pxt-dialog-filter-custom.component.html',\n  styleUrls: ['./pxt-dialog-filter-custom.component.scss']\n})\nexport class PxtDialogFilterCustomComponent implements OnInit {\n\n  @Input() filters: any;\n  @Input() model: any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  \n  displayedColumns = ['codigo', 'descricao'];\n  dataSource = new MatTableDataSource<any>();\n\n  constructor(private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogFilterCustomComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public http: RequestBaseService) { }\n\n  ngOnInit() {\n  }\n  //Search.\n  search() {\n    let params = new Map<any, any>();\n    if (this.filters !== undefined) {\n      Object.keys(this.filters).forEach(key => {\n        if (this.filters[key] != undefined) {\n          params.set(key, this.filters[key]);\n        }\n      });\n    }\n    this.http.doGet(this.model.constructor.name, params).subscribe(result => {\n      this.dataSource.data = result;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  };\n\n  //Row Selected\n  selectRow(row) {\n    this.dialogRef.close(row);\n  };\n\n  //Close\n  close() {\n    this.dialogRef.close(undefined);\n  };\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { PxtDialogFilterCustomComponent } from './pxt-dialog-filter-custom.component';\nimport { MaterialAngularModule } from '../../material-angular/material-angular.module';\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material';\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtDialogFilterCustomComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  exports:[PxtDialogFilterCustomComponent],\n  entryComponents:[PxtDialogFilterCustomComponent],\n  providers: [\n    {provide: MAT_DIALOG_DATA, useValue: {}},\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}}\n  ]\n})\nexport class PxtDialogFilterCustomModule { }\n","import { Component, OnInit, Output, Input } from '@angular/core';\nimport { MatChipInputEvent, MatTableDataSource } from '@angular/material';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'pxt-filter-mat-table',\n  templateUrl: './pxt-filter-mat-table.component.html',\n  styleUrls: ['./pxt-filter-mat-table.component.scss']\n})\nexport class PxtFilterMatTableComponent implements OnInit {\n\n  @Input() dataSource = new MatTableDataSource<any>();\n  @Input() placeholder : String ;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  filters: any[] = [];\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      // this.filters = [];\n      this.filters.push({ name: value.trim() });\n      //this.applyFilter(value);\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n    //this.applyFilterx ();\n    this.applyFilterArray();\n\n  }\n  applyFilterArray() {\n    if (this.filters.length > 0) {\n      this.filters.forEach(filter => {\n        filter = filter.name.trim();\n        filter = filter.toLowerCase();\n        this.dataSource.filter = filter;\n      });\n    } else {\n      this.applyFilter(\"\");\n    }\n  }\n\n  applyFilterx (){\n      const tableFilters = [];\n      this.filters.forEach((filter) => {\n        tableFilters.push({\n          id: \"nomeImagem\",\n          value: filter.name\n        });\n      });\n      this.dataSource.filter = JSON.stringify(tableFilters);\n  }\n\n  applyFilter(filter: string) {\n    filter = filter.trim();\n    filter = filter.toLowerCase();\n    this.dataSource.filter = filter;\n  }\n  \n  remove(filter: any): void {\n    const index = this.filters.indexOf(filter);\n    if (index >= 0) {\n      this.filters.splice(index, 1);\n    }\n    this.applyFilterArray();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtFilterMatTableComponent } from './pxt-filter-mat-table.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtFilterMatTableComponent],\n  exports: [PxtFilterMatTableComponent],\n  entryComponents : [PxtFilterMatTableComponent]\n})\nexport class PxtFilterMatTableModule { }\n","import { pxtEnumTagHtml } from \"../enum/pxt-enum-tag-html\";\r\nimport { pxtEnumTypeTag } from \"../enum/pxt-enum-type-tag\";\r\n\r\n\r\nexport class pxtFields {\r\n    type: pxtEnumTypeTag;\r\n    value: any;\r\n    tag: pxtEnumTagHtml;\r\n}\r\n","export enum pxtEnumTagHtml {\r\n    Input = 1,\r\n    Combo = 2,\r\n    Filter = 3,\r\n    Checkbox = 4\r\n}","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'pxt-upload-file',\n  templateUrl: './pxt-upload-file.component.html',\n  styleUrls: ['./pxt-upload-file.component.css']\n})\nexport class PxtUploadFileComponent implements OnInit {\n\n  @Input() placeholder :string;\n  @Output() fileSelected: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  arrayImages :FileReader;\n\n  ngOnInit() {\n  }\n  onChangeImagem(event) {\n    if (event != undefined) {\n      let imagem: File = event;\n      this.placeholder= imagem.name;\n    return this.fileSelected.next(imagem);\n    }\n\n  };\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtUploadFileComponent } from './pxt-upload-file.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtUploadFileComponent],\n  exports:[PxtUploadFileComponent],\n  entryComponents : [PxtUploadFileComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class PxtUploadFileModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { CommonModule } from '@angular/common';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\n\ndeclare var $: any;\n@Component({\n  selector: 'pxt-gallery',\n  templateUrl: './pxt-gallery.component.html',\n  styleUrls: ['./pxt-gallery.component.css']\n})\nexport class PxtGalleryComponent implements OnInit {\n\n  galleryOptions: NgxGalleryOptions[];\n  @Input() galleryImages: NgxGalleryImage[];\n  @Input() width: any = \"100%\";\n  @Input() height: any = '400px';\n  constructor() {\n  }\n  ngOnInit() {\n\n    this.galleryOptions = [\n      {\n        width: this.width,\n        height: this.height,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide\n      },\n      // max-width 800\n      {\n        breakpoint: 800,\n        width: this.width,\n        height: this.height,\n        imagePercent: 80,\n        thumbnailsPercent: 20,\n        thumbnailsMargin: 20,\n        thumbnailMargin: 20\n      },\n      {\n        breakpoint: 400,\n        preview: false\n      }\n    ];\n  }\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtGalleryComponent } from './pxt-gallery.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/compiler/src/core';\n\n@NgModule({\n  imports: [CommonModule, MaterialAngularModule, NgxGalleryModule],\n  declarations: [PxtGalleryComponent],\n  exports: [PxtGalleryComponent],\n  entryComponents: [PxtGalleryComponent]\n})\nexport class PxtGalleryModule { }\n"]}