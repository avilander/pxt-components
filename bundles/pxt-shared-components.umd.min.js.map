{"version":3,"sources":["ng://pxt-shared-components/src/app/directives/pxt-content-body.ts","ng://pxt-shared-components/src/app/services/pxt-app-components.service.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.component.ts","ng://pxt-shared-components/src/app/modules/material-angular/material-angular.module.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.module.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.component.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.module.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/model/pxt-submenus.model.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/enum/option-submenu.enum.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.component.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.module.ts"],"names":["PxtContentBody","viewContainerRef","this","Directive","args","selector","ViewContainerRef","PxtAppComponentService","Subject","submenusItens","asObservable","_loadComponent","_setUserLogged","_setInfoInit","prototype","setSubmenus","routes","next","setInitialInfo","infoInitial","loadComponent","component","setUser","user","Injectable","PxtAppComponent","changeDetectorRef","media","componentFactoryResolver","pxtAppComponentService","_this","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","subscribe","undefined","components","ngOnDestroy","removeListener","clearInterval","interval","ngOnInit","subscribeComponent","route","adHost","menuSelected","data","text","adItem","componentFactory","resolveComponentFactory","clear","createComponent","loadComponentObservable","selectItemMenu","nav","console","log","Component","template","ChangeDetectorRef","MediaMatcher","ComponentFactoryResolver","Inject","ViewChild","MaterialAngularModule","NgModule","exports","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","BrowserModule","BrowserAnimationsModule","CommonModule","PxtAppModule","imports","declarations","providers","PxtContentComponent","PxtContentModule","entryComponents","PxtButton","icon","menu","enable","id","enum","SALVAR","PESQUISAR","LIMPAR","NOVO","VOLTAR","PxtSubmenusComponent","_pxtAppService","buttons","push","OptionsSubmenu","save","Error","search","add","back","PxtSubmenusModule"],"mappings":"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","sourcesContent":["import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ad-pxt-content]',\r\n})\r\nexport class PxtContentBody {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class PxtAppComponentService {\r\n    private submenusItens: Subject<any> = new Subject<any>();\r\n    public readonly submenusItensObservable: Observable<any> = this.submenusItens.asObservable();\r\n\r\n    private _loadComponent: Subject<any> = new Subject<any>();\r\n    public readonly loadComponentObservable: Observable<any> = this._loadComponent.asObservable();\r\n\r\n    private _setUserLogged: Subject<any> = new Subject<any>();\r\n    public readonly userLoggedObservable: Observable<any> = this._setUserLogged.asObservable();\r\n\r\n    private _setInfoInit: Subject<any> = new Subject<any>();\r\n    public readonly infoInitial: Observable<any> = this._setInfoInit.asObservable();\r\n\r\n    setSubmenus(routes: any) {\r\n        this.submenusItens.next(routes);\r\n    }\r\n\r\n    setInitialInfo(infoInitial) {\r\n        this._setInfoInit.next(infoInitial)\r\n    }\r\n\r\n    loadComponent(component: any) {\r\n        this._loadComponent.next(component);\r\n    }\r\n\r\n    setUser(user: any) {\r\n        this._setUserLogged.next(user);\r\n    }\r\n\r\n}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, Input, ViewChild, ComponentFactoryResolver, Inject } from '@angular/core';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\n\nimport { Routes } from '@angular/router';\nimport { PxtApp } from './pxt-app';\nimport { PxtAppModel } from './model/pxt-app.model';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\n\n@Component({\n  selector: 'pxt-app',\n  templateUrl: './pxt-app.component.html',\n  styleUrls: ['./pxt-app.component.scss']\n})\nexport class PxtAppComponent {\n\n  routes: any[] = [];\n  submenus: any[] = [];\n  system: String = \"SYSTEM NAME\"\n  urlImg: string = 'http://imagensdsv.peixoto.com.br/auth/mini_logo.png';\n  menuSelected = \"ACTION\";\n  usuerLogged = \"Loogged user\";\n\n  _mobileQueryListener: () => void;\n  mobileQuery: MediaQueryList;\n  shouldRun = true;\n\n  constructor(changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(PxtAppComponentService) public pxtAppComponentService\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n    //this.routes = routes;\n    pxtAppComponentService.infoInitial.subscribe(infoInitial => {\n      if (infoInitial != undefined) {\n        this.routes = infoInitial.components;\n      } else {\n        this.routes = [];\n      }\n\n    });\n\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n    clearInterval(this.interval);\n  }\n\n  currentAdIndex = -1;\n  @ViewChild(PxtContentBody) adHost: PxtContentBody;\n  interval: any;\n\n  ngOnInit() {\n    this.subscribeComponent();\n  }\n  loadComponent(route: any, adHost) {\n    this.menuSelected = route.data.text;\n    //this.currentAdIndex = (this.currentAdIndex + 1) % this.ads.length;\n    let adItem = route;\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(adItem.component);\n\n    let viewContainerRef = adHost.viewContainerRef;\n    viewContainerRef.clear();\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    //(<Teste1Component>componentRef.instance).data = adItem.data;\n  }\n\n  subscribeComponent() {\n    debugger;\n    this.pxtAppComponentService.loadComponentObservable.subscribe(component => {\n      debugger;\n      let componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n      let viewContainerRef = this.adHost.viewContainerRef;\n      viewContainerRef.clear();\n      let componentRef = viewContainerRef.createComponent(componentFactory);\n    });\n  }\n\n\n  selectItemMenu(nav) {\n    console.log(nav);\n    this.loadComponent(nav, this.adHost);\n  }\n\n}\n","import './../../../polyfills';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatIconModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule\n  ]\n})\nexport class MaterialAngularModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtAppComponent } from './pxt-app.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtAppComponent, PxtContentBody],\n  exports: [PxtAppComponent],\n  providers:[PxtAppComponentService]\n})\nexport class PxtAppModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'pxt-content-body',\n  templateUrl: './pxt-content.component.html',\n  styleUrls: ['./pxt-content.component.css']\n})\nexport class PxtContentComponent implements OnInit, OnDestroy  {\n\n  ngOnDestroy(): void {\n    //throw new Error(\"Method not implemented.\");\n  }\n  ngOnInit(): void {\n    //throw new Error(\"Method not implemented.\");\n  }\n  constructor() { }\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtContentComponent } from './pxt-content.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { templateJitUrl } from '@angular/compiler';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n  ],\n  declarations: [PxtContentComponent],\n   exports: [PxtContentComponent],\n  entryComponents: [ PxtContentComponent ]\n})\nexport class PxtContentModule { }\n","\r\n\r\n\r\nexport class PxtButton {\r\n    icon: String;\r\n    menu: String;\r\n    enable: Boolean;\r\n    enum : Number;\r\n    constructor(icon: String, menu: String, enable: Boolean, id : number) {\r\n        this.icon = icon;\r\n        this.menu = menu;\r\n        this.enable = enable;\r\n        this.enum = id;\r\n    }\r\n\r\n}\r\n","export enum OptionsSubmenu {\r\n    SALVAR = 1,\r\n    PESQUISAR = 2,\r\n    LIMPAR = 3,\r\n    NOVO = 4,\r\n    VOLTAR= 5\r\n}","import { Component, ViewChild, ComponentFactoryResolver } from '@angular/core';\nimport { PxtButton } from './model/pxt-submenus.model';\nimport { OptionsSubmenu } from './enum/option-submenu.enum';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\n@Component({\n  selector: 'pxt-submenus',\n  templateUrl: './pxt-submenus.component.html',\n  styleUrls: ['./pxt-submenus.component.css']\n})\nexport class PxtSubmenusComponent {\n\n  save() {\n    throw new Error(\"Method not implemented.\");\n  }\n  search() {\n    throw new Error(\"Method not implemented.\");\n  }\n  clear() {\n    throw new Error(\"Method not implemented.\");\n  }\n  add() {\n    throw new Error(\"Method not implemented.\");\n  }\n  back() {\n    throw new Error(\"Method not implemented.\");\n  }\n  buttons : PxtButton [] = [];\n  constructor(public  _pxtAppService : PxtAppComponentService\n  ) {\n    this.buttons.push( new PxtButton (\"keyboard_backspace\", \"VOLTAR\", true, OptionsSubmenu.VOLTAR ));\n    this.buttons.push(new PxtButton (\"add\", \"SALVAR\", true , OptionsSubmenu.SALVAR));\n    this.buttons.push(new PxtButton (\"add\", \"NOVO\", true, OptionsSubmenu.NOVO ));\n    this.buttons.push(new PxtButton (\"delete\", \"LIMPAR\", true, OptionsSubmenu.LIMPAR ));\n    this.buttons.push(new PxtButton (\"search\", \"PESQUISAR\", true, OptionsSubmenu.PESQUISAR));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { PxtSubmenusComponent } from './pxt-submenus.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtSubmenusComponent],\n  exports: [PxtSubmenusComponent]  \n})\nexport class PxtSubmenusModule { }\n\n"]}