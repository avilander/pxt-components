{"version":3,"sources":["ng://pxt-shared-components/src/app/directives/pxt-content-body.ts","ng://pxt-shared-components/src/app/services/pxt-app-components.service.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.component.ts","ng://pxt-shared-components/src/app/modules/material-angular/material-angular.module.ts","ng://pxt-shared-components/src/app/services/pxt-http/config.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/http-helper-service.ts","node_modules/tslib/tslib.es6.js","ng://pxt-shared-components/src/environments/environment.ts","ng://pxt-shared-components/src/app/services/pxt-http/token.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/pxt-http.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/request-base.service.ts","ng://pxt-shared-components/src/app/pipes/uppercase-first.ts","ng://pxt-shared-components/src/app/util/constants.ts","ng://pxt-shared-components/src/app/pipes/date-format.pipe.ts","ng://pxt-shared-components/src/app/pipes/date-time-format.pipe.ts","ng://pxt-shared-components/src/app/pipes/pipes.module.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app-menu-item/pxt-app-menu-item.component.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app-menu-item/pxt-app-menu-item.module.ts","ng://pxt-shared-components/src/app/directives/HashDirective.ts","ng://pxt-shared-components/src/app/services/authority.service.ts","ng://pxt-shared-components/src/app/models/pxtConfiguration.ts","ng://pxt-shared-components/src/app/visible-in-roles.guard.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.module.ts","ng://pxt-shared-components/src/app/fields/pxt-input-field.ts","ng://pxt-shared-components/src/app/fields/pxt-checkbox-field.ts","ng://pxt-shared-components/src/app/fields/pxt-date-field.ts","ng://pxt-shared-components/src/app/fields/pxt-filter-field.ts","ng://pxt-shared-components/src/app/fields/pxt-radiobutton-field.ts","ng://pxt-shared-components/src/app/fields/pxt-select-field.ts","ng://pxt-shared-components/src/app/fields/pxt-filter-custom-field.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input/pxt-input.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-button/pxt-button.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-date/pxt-date.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-checkbox/pxt-checkbox.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-radiobutton/pxt-radiobutton.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-select/pxt-select.component.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input-filter/pxt-input-filter.component.ts","ng://pxt-shared-components/src/app/directives/dynamic-field-directive.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input/pxt-input.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-button/pxt-button.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-date/pxt-date.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-select/pxt-select.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-radiobutton/pxt-radiobutton.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-checkbox/pxt-checkbox.module.ts","ng://pxt-shared-components/src/app/directives/dynamic-field-directive-dialog.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input-filter/pxt-input-filter.module.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.module.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/model/pxt-submenus.model.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/enum/option-submenu.enum.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.component.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.module.ts","ng://pxt-shared-components/src/app/modules/pxt-datepicker/pxt-datepicker.component.ts","ng://pxt-shared-components/src/app/modules/pxt-datepicker/pxt-datepicker.module.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog.component.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog.module.ts","ng://pxt-shared-components/src/app/modules/pxt-filter/pxt-filter.component.ts","ng://pxt-shared-components/src/app/modules/pxt-filter/pxt-filter.module.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter-custom/pxt-dialog-filter-custom.component.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter-custom/pxt-dialog-filter-custom.module.ts","ng://pxt-shared-components/src/app/models/pxt-fields-model.ts","ng://pxt-shared-components/src/app/enum/pxt-enum-tag-html.ts","ng://pxt-shared-components/src/app/modules/pxt-upload-file/pxt-upload-file.component.ts","ng://pxt-shared-components/src/app/modules/pxt-upload-file/pxt-upload-file.module.ts","ng://pxt-shared-components/src/app/modules/pxt-gallery/pxt-gallery.component.ts","ng://pxt-shared-components/src/app/modules/pxt-gallery/pxt-gallery.module.ts"],"names":["PxtContentBody","viewContainerRef","this","Directive","args","selector","ViewContainerRef","PxtAppComponentService","Subject","submenusItens","asObservable","_loadComponent","_setUserLogged","_setInfoInit","prototype","setSubmenus","routes","next","setInitialInfo","infoInitial","loadComponent","component","setUser","user","Injectable","PxtAppComponent","changeDetectorRef","media","componentFactoryResolver","pxtAppComponentService","_this","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","result","subscribe","undefined","usuerLogged","userLogged","system","menusReceived","sideBarMenus","menus","prepareMenu","subscribeComponent","ngOnDestroy","removeListener","clearInterval","interval","route","adHost","menuSelected","menuText","adItem","menuSource","componentFactory","resolveComponentFactory","clear","createComponent","loadComponentObservable","componentObj","arrayAux","filter","x","length","data","selectItemMenu","nav","menuType","menuParent","arrayAuxGroup","arrayAuxItem","forEach","item","arrayTmp","menuId","childs","push","Component","template","ChangeDetectorRef","MediaMatcher","ComponentFactoryResolver","Inject","Input","ViewChild","read","MatMenuTrigger","MaterialAngularModule","NgModule","imports","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","BrowserModule","BrowserAnimationsModule","CommonModule","FormsModule","MatLineModule","MatCommonModule","MatOptionModule","MatFormFieldModule","MatPseudoCheckboxModule","ReactiveFormsModule","exports","ConfigService","injector","load","url","injectHttp","get","HttpClient","Promise","resolve","pipe","map","res","config","getConfiguration","element","dataList","urlWithDataList","verifyUrl","urlWithElement","typeModel","includes","Injector","HttpHelperService","configService","getApi","getApiSgi","getApiUrl","name","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","environment","id","prex","TokenService","getAccessToken","token","localStorage","getItem","setTokenStorage","setItem","JSON","stringify","removeTokenStorage","decoded","jwt_decode","removeItem","sub","deleteToken","tokenExists","PxtHttpService","backend","options","tokenService","_super","call","tslib_1.__extends","getHeaders","headers","Headers","append","handleResponse","observable","origRequest","catchError","error","onCatch","onResult","status","_body","json","doGet","api","loader","requestOptions","RequestOptions","doPost","endpoint","params","post","doPut","put","doPath","patch","doDelete","urlParam","delete","request","requestArgs","urlRequest","set","concat","isUnathourized","console","log","Observable","throw","XHRBackend","Http","RequestBaseService","httpService","helper","_httpClient","urlService","urlServiceAuto","save","model","path","size","buildRequestParams","indexOf","uploadImage","header","Authorization","httpOptions","HttpHeaders","formdata","setParamsFormdata","req","HttpRequest","reportProgress","responseType","FormData","value","key","final","primeiraIteracao","UpercaseFirst","transform","text","words","toLowerCase","split","a","w","toUpperCase","slice","join","Pipe","UpperCasePipe","DateFormatPipe","Constants","DATE_FMT","DatePipe","DateTimeFormatPipe","DATE_TIME_FMT","PipeModule","declarations","PxtAppMenuItemComponent","ngOnInit","child","PxtAppMenuItemModule","entryComponents","HashDirective","vcRef","AuthorityService","_http","_httpHelper","buscarAuthorities","codigoSistema","pxtConfiguration","systemId","systemPrex","VisibleInRolesGuard","router","httpHelper","authorityService","canActivate","state","decoded_1","tokenAuthorities","authority","err","Router","PxtAppModule","providers","pxtInputField","pxtCheckboxField","pxtDateField","pxtFilterField","pxtRadioButtonField","pxtSelectField","pxtfilterCustomField","PxtContentComponent","fb","EventEmitter","form","field","keys","instanceFilterCustom","type","fields","instanceInput","instanceCheck","instanceDate","instanceFilter","instanceRadio","instanceSelect","onResize","colsInitial","cols","createControl","onSubmit","event","preventDefault","stopPropagation","valid","submit","emit","validateAllFormFields","group","control","disabled","bindValidations","validations","addControl","validList_1","validator","Validators","compose","formGroup","controls","markAsTouched","onlySelf","screenWidth","window","innerWidth","FormBuilder","Output","HostListener","PxtInputComponent","PxtButtonComponent","PxtDateComponent","PxtCheckboxComponent","PxtRadiobuttonComponent","noop","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","PxtSelectComponent","multi","pxthttp","ngOnChanges","changes","firstChange","currentValue","find","defineProperty","option","f","onChangeCallback","codigo","selectionChange","onBlur","onTouchedCallback","writeValue","registerOnChange","fn","registerOnTouched","controller","auto","className","ngAfterViewInit","PxtDialogFilterComponent","dialogRef","http","MatTableDataSource","code","description","filters","fieldsHist","sort","position","cancelation","close","confirmation","search","Map","dataSource","paginator","selectRow","row","MatDialogRef","MAT_DIALOG_DATA","MatPaginator","MatSort","PxtInputFilterComponent","dialog","placeholder","openFilter","open","width","panelClass","titleDialog","afterClosed","descricao","onValueCallback","MatDialog","componentMapper","input","button","date","select","radiobutton","checkbox","DynamicFieldDirective","resolver","container","factory","componentRef","instance","PxtInputModule","PxtButtonModule","PxtDateModule","PxtSelectModule","schemas","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","PxtRadiobuttonModule","PxtCheckboxModule","DynamicFieldDirectiveDialog","ɵ0$1","ɵ1","hasBackdrop","useValue","MAT_DIALOG_DEFAULT_OPTIONS","PxtInputFilterModule","PxtDialogFilterModule","PxtContentModule","HttpClientModule","HttpModule","PxtButton","icon","menu","enable","enum","SALVAR","PESQUISAR","LIMPAR","NOVO","VOLTAR","EXCLUIR","PxtSubmenusComponent","_pxtAppService","_serviceBase","buttons","OptionsSubmenu","setTimeout","statusSave","listing","statusDelete","add","Error","back","PxtSubmenusModule","PxtDatepickerComponent","dateModel","onDateChange","onChange","PxtDatePickerModule","PxtDialogComponent","PxtDialogModule","PxtFilterComponent","PxtFilterModule","PxtDialogFilterCustomComponent","ɵ0$3","ɵ1$1","pxtFields","Combo","Filter","Checkbox","PxtUploadFileComponent","onChangeImagem","imagem","fileSelected","PxtUploadFileModule","PxtGalleryComponent","galleryOptions","height","thumbnailsColumns","imageAnimation","NgxGalleryAnimation","Slide","breakpoint","imagePercent","thumbnailsPercent","thumbnailsMargin","thumbnailMargin","preview","PxtGalleryModule","NgxGalleryModule"],"mappings":"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","sourcesContent":["import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ad-pxt-content]',\r\n})\r\nexport class PxtContentBody {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class PxtAppComponentService {\r\n    private submenusItens: Subject<any> = new Subject<any>();\r\n    public readonly submenusItensObservable: Observable<any> = this.submenusItens.asObservable();\r\n\r\n    private _loadComponent: Subject<any> = new Subject<any>();\r\n    public readonly loadComponentObservable: Observable<any> = this._loadComponent.asObservable();\r\n\r\n    private _setUserLogged: Subject<any> = new Subject<any>();\r\n    public readonly userLoggedObservable: Observable<any> = this._setUserLogged.asObservable();\r\n\r\n    private _setInfoInit: Subject<any> = new Subject<any>();\r\n    public readonly infoInitial: Observable<any> = this._setInfoInit.asObservable();\r\n\r\n    setSubmenus(routes: any) {\r\n        this.submenusItens.next(routes);\r\n    }\r\n\r\n    setInitialInfo(infoInitial) {\r\n        this._setInfoInit.next(infoInitial)\r\n    }\r\n\r\n    loadComponent(component: any) {\r\n        this._loadComponent.next(component);\r\n    }\r\n\r\n    setUser(user: any) {\r\n        this._setUserLogged.next(user);\r\n    }\r\n\r\n}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, Input, ViewChild, ComponentFactoryResolver, Inject, ViewContainerRef } from '@angular/core';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { Routes } from '@angular/router';\nimport { PxtApp } from './pxt-app';\nimport { PxtAppModel } from './model/pxt-app.model';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { AdComponent } from '../../interfaces/ad.component';\nimport { MatMenu, MatMenuTrigger } from '@angular/material';\nimport { group } from '@angular/animations';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'pxt-app',\n  templateUrl: './pxt-app.component.html',\n  styleUrls: ['./pxt-app.component.scss']\n\n})\nexport class PxtAppComponent {\n\n  //Properties\n  routes: any[] = [];\n  groups: any[] = [];\n  menus: any[] = [];\n  system: String = \"SYSTEM NAME\"\n  urlImg: string = 'http://imagensdsv.peixoto.com.br/auth/mini_logo.png';\n  menuSelected = \"\";\n  usuerLogged = \"Loogged user\";\n  menusHtml: SafeHtml;\n  result: Observable<boolean>;\n  _mobileQueryListener: () => void;\n  mobileQuery: MediaQueryList;\n  shouldRun = true;\n  @Input() matMenu: MatMenu;\n  @ViewChild('menus', { read: ViewContainerRef }) subContainer1: ViewContainerRef;\n  @ViewChild('contextMenuTrigger', { read: MatMenuTrigger }) contextMenuTrigger: MatMenuTrigger;\n  currentAdIndex = -1;\n  @ViewChild(PxtContentBody) adHost: PxtContentBody;\n  interval: any;\n  menusReceived : any[];\n  \n  //Constructor\n  constructor(changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(PxtAppComponentService) public pxtAppComponentService\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n    this.result = pxtAppComponentService.infoInitial.subscribe(infoInitial => {\n      if (infoInitial != undefined) {\n        this.usuerLogged = infoInitial.userLogged;\n        this.system = infoInitial.system;\n        this.menusReceived = infoInitial.sideBarMenus;\n        this.menus = infoInitial.sideBarMenus;\n        this.prepareMenu();\n      }\n    });\n    this.subscribeComponent();\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n    clearInterval(this.interval);\n  }\n\n  // Include of components in the application body\n  loadComponent(route: any, adHost) {\n    this.menuSelected = route.menuText;\n    let adItem = route.menuSource;\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(adItem.component);\n    let viewContainerRef = adHost.viewContainerRef;\n    viewContainerRef.clear();\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n  }\n\n  // Subscription to the service responsible for including components in the body of the application\n  subscribeComponent() {\n    this.pxtAppComponentService.loadComponentObservable.subscribe(componentObj => {\n      var arrayAux = this.menusReceived.filter(x=>x.menuSource != undefined && x.menuSource.component === componentObj.component);\n      if(arrayAux.length == 1){\n        this.menuSelected = arrayAux[0].menuText;\n      }\n      let componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentObj.component);\n      let viewContainerRef = this.adHost.viewContainerRef;\n      viewContainerRef.clear();\n      let componentRef = viewContainerRef.createComponent(componentFactory);\n      (<AdComponent>componentRef.instance).data = componentObj.data;\n    });\n  }\n\n  // Responsible for call method \"loadcomponents()\" informing parameters\n  selectItemMenu(nav) {\n    this.loadComponent(nav, this.adHost);\n  }\n\n  // Method responsible for preparing application menus;\n  prepareMenu() {\n    let arrayAux: any[];\n    arrayAux = this.menus.filter(x => x.menuType == \"group\" && x.menuParent == \"\");\n    var arrayAuxGroup = this.menus.filter(x => x.menuType == \"group\" && x.menuParent !== \"\");\n    var arrayAuxItem = this.menus.filter(x => x.menuType == \"item\" && x.menuParent !== \"\");\n\n    //add itens in groups\n    arrayAuxItem.forEach(item => {\n      var arrayTmp = arrayAuxGroup.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n        }\n        arrayTmp[0].childs.push(item);\n      };\n    });\n    //add groups in groups\n    arrayAuxGroup.forEach(item => {\n      var arrayTmp = arrayAuxGroup.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n        }\n        arrayTmp[0].childs.push(item)\n      };\n    });\n    //add groups in super-groups\n    arrayAuxGroup.forEach(item => {\n      var arrayTmp = arrayAux.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n          arrayTmp[0].childs.push(item);\n        } else {\n          arrayTmp[0].childs.push(item);\n        }\n      };\n    });\n\n    //add itens in super-groups\n    arrayAuxItem.forEach(item => {\n      var arrayTmp = arrayAux.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n        }\n        arrayTmp[0].childs.push(item);\n      };\n    });\n    this.menus = arrayAux;\n  }\n}\n","import './../../../polyfills';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatLineModule,\n  MatCommonModule,\n  MatOptionModule,\n  MatFormFieldModule,\n  MatPseudoCheckboxModule,\n  \n} from '@angular/material';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatIconModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    MatCardModule,MatIconModule,MatLineModule,\n    MatListModule,MatSortModule,MatTabsModule,MatTreeModule,\n    MatBadgeModule,MatChipsModule,MatInputModule,MatRadioModule,\n    MatTableModule,MatButtonModule,MatCommonModule,MatDialogModule,\n    MatOptionModule,MatRippleModule,MatSelectModule,MatSliderModule,\n    MatDividerModule,MatSidenavModule,MatStepperModule,MatToolbarModule,\n    MatToolbarModule,MatTooltipModule,MatCheckboxModule,MatGridListModule,\n    MatSnackBarModule,MatExpansionModule,MatFormFieldModule,MatPaginatorModule,\n    MatDatepickerModule,MatNativeDateModule,MatBottomSheetModule,MatProgressBarModule,\n    MatSlideToggleModule,MatAutocompleteModule,MatButtonToggleModule,MatPseudoCheckboxModule,\n    MatProgressSpinnerModule, BrowserModule, CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatIconModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    MatMenuModule,MatCardModule,MatIconModule,MatLineModule,\n    MatListModule,MatSortModule,MatTabsModule,MatTreeModule,\n    MatBadgeModule,MatChipsModule,MatInputModule,MatRadioModule,\n    MatTableModule,MatButtonModule,MatCommonModule,MatDialogModule,\n    MatOptionModule,MatRippleModule,MatSelectModule,MatSliderModule,\n    MatDividerModule,MatSidenavModule,MatStepperModule,MatToolbarModule,\n    MatToolbarModule,MatTooltipModule,MatCheckboxModule,MatGridListModule,\n    MatSnackBarModule,MatExpansionModule,MatFormFieldModule,MatPaginatorModule,\n    MatDatepickerModule,MatNativeDateModule,MatBottomSheetModule,MatProgressBarModule,\n    MatSlideToggleModule,MatAutocompleteModule,MatButtonToggleModule,MatPseudoCheckboxModule,\n    MatProgressSpinnerModule, BrowserModule, CommonModule,\n    MatNativeDateModule,\n    ReactiveFormsModule\n  ]\n})\nexport class MaterialAngularModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { map, filter, scan } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  config: any;\r\n  constructor(\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  load(url: string) {\r\n    const injectHttp = this.injector.get(HttpClient);\r\n    return new Promise((resolve) => {\r\n      injectHttp.get(url).pipe(\r\n        map(res => res)\r\n      ).subscribe(config => {\r\n          this.config = config;\r\n          resolve();\r\n        });\r\n    });\r\n  }\r\n\r\n  getConfiguration(element: string, dataList?: string) {\r\n    if (!dataList) {\r\n      const urlWithElement = this.config[element];\r\n      return this.verifyUrl(urlWithElement);\r\n    } else {\r\n      const urlWithDataList = this.config[dataList][element];\r\n      return this.verifyUrl(urlWithDataList);\r\n    }\r\n  }\r\n\r\n  verifyUrl(typeModel: any) {\r\n    if (typeModel.includes('/', typeModel.length - 1)) {\r\n      const typeRelease = typeModel;\r\n      return typeRelease;\r\n    } else {\r\n      const newType = typeModel + '/';\r\n      return newType;\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nimport { Http } from '@angular/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { map, filter, scan } from 'rxjs/operators';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable()\r\nexport class HttpHelperService {\r\n  constructor(private configService: ConfigService) {\r\n  }\r\n  public getApi() {\r\n    return this.configService.getConfiguration('API', 'PATH');\r\n  };\r\n\r\n  public getApiSgi() {\r\n    return this.configService.getConfiguration('API', 'SGI');\r\n  };\r\n\r\n  public getApiUrl (name, url) {\r\n    return this.configService.getConfiguration(url, name);\r\n  }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport const environment = {\n  production: true,\n  envName: 'dev',\n  version: '0.0.1',\n  CONFIG_FILE: 'assets/config/env.json',\n  esbApiPxt : \"http://esbdsv.peixoto.com.br/sge/\",\n  system: {\n    id: 108,\n    prex: \"PORCRP\"\n  }\n};\n\n","import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\nimport { Observable } from 'rxjs';\nimport { Http, RequestOptions } from '@angular/http';\nimport { environment } from '../../../environments/environment';\n\nvar system = environment.system;\n\n@Injectable()\nexport class TokenService {\n\n  constructor() {\n  }\n  getAccessToken() {\n    const token = localStorage.getItem('token');\n    if (token != null) {\n      return token;\n    }\n  }\n  setTokenStorage(res: any) {\n    localStorage.setItem('token', JSON.stringify(res));\n  }\n  removeTokenStorage() {\n    var token =  localStorage.getItem('token')\n    const decoded = <any> jwt_decode(token);\n    localStorage.removeItem(system.id+system.prex+decoded.sub);\n  }\n  \n  deleteToken() {\n    this.removeTokenStorage();\n  }\n\n  tokenExists(): boolean {\n    return localStorage.getItem('token') !== null && localStorage.getItem('token') !== undefined && localStorage.getItem('token') !== '';\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { Inject, forwardRef, Injectable, Injector } from '@angular/core';\nimport { Headers, Http, RequestOptions, Response, XHRBackend, RequestOptionsArgs, Request } from '@angular/http';\nimport { map, filter, scan, finalize, catchError } from 'rxjs/operators';\n\nimport { environment } from './../../../environments/environment';\nimport { TokenService } from './token.service';\n//import { HttpHelperService } from './HttpHelperService';\n\n@Injectable()\nexport class PxtHttpService extends Http {\n\n  constructor(private backend: XHRBackend,\n    options: RequestOptions,\n    private injector: Injector,\n    //private urlHelper: HttpHelperService,\n    private tokenService: TokenService\n  ) {\n    super(backend, options);\n  }\n\n  urlRequest: any;\n  origRequest: Request;\n  isUnathourized = false;\n\n  /**\n   *  Control Services\n   */\n  getHeaders() {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Cache-Control', 'no-store');\n    headers.append('Pragma', 'no-cache');\n    return headers;\n  }\n\n  handleResponse(observable: Observable<Response>, url?: string) {\n\n    let result = null;\n    const orig = this.origRequest;\n    result = observable.pipe(\n      catchError((error) => {\n        return this.onCatch(error);\n      }),\n      map(res => {\n        return this.onResult(res);\n      })\n    );\n    return result;\n  }\n  onResult(res) {\n    if (res.status == 201) {\n      return res._body;\n    } else {\n      return res.json();\n    }\n  }\n\n  doGet(api: string, loader?: boolean) {\n    // this.preLoaderService.update(true);\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.get(url, requestOptions));\n  }\n\n  doPost(endpoint: string, params?: any) {\n    const url = endpoint;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.post(url, params, requestOptions), url);\n  }\n\n  doPut(api: string, params?: any) {\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.put(url, params, requestOptions), url);\n  }\n\n  doPath(api: string, params?: any, loader?: boolean) {\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.patch(url, params, requestOptions), url);\n  }\n\n  doDelete(api: string, params: any, loader?: boolean) {\n    const url = api;\n    const urlParam = url + '/' + params;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n\n    return this.handleResponse(super.delete(urlParam, requestOptions), urlParam);\n  }\n\n\n  request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\n    options = this.requestArgs(options);\n    if (typeof url === 'string') {\n      this.urlRequest = url;\n    } else {\n      this.urlRequest = url.url;\n      this.origRequest = url;\n    }\n\n    if (this.urlRequest !== environment.CONFIG_FILE) {\n      const token = this.tokenService.getAccessToken();\n      if (token != null) {\n        this.origRequest.headers.set('Authorization', 'Bearer '.concat(token));\n        options.headers.set('Authorization', 'Bearer '.concat(token));\n      }\n    }\n\n    url = this.origRequest;\n    return super.request(url, options);\n  }\n\n  private requestArgs(options: RequestOptionsArgs): RequestOptionsArgs {\n    if (options == null) {\n      options = new RequestOptions({ headers: this.getHeaders() });\n    }\n    return options;\n  }\n  public onCatch(error: any) {\n    switch (error.status) {\n      case 401:\n        if (!this.isUnathourized) {\n          console.log(401);\n          //this.tokenService.removeTokenStorage();\n          //window.location.href = environment.esbApiPxt + \"?erro=401\";\n        }\n        this.isUnathourized = true;\n        break;\n      case 400:\n        console.log(\"error 400\");\n        // this.tokenService.removeTokenStorage();\n        //window.location.href = environment.esbApiPxt + \"?erro=400\";\n        break;\n      case 404:\n        console.log(\"error 400\");\n        //this.tokenService.removeTokenStorage();\n        //window.location.href = environment.esbApiPxt + \"?erro=404\";\n        break;\n      default:\n        console.log(\"error 400\");\n        // window.location.href = environment.esbApiPxt + \"?erro=0\";\n        break;\n    }\n    return Observable.throw(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PxtHttpService } from './pxt-http.service';\nimport { HttpHelperService } from './http-helper-service';\nimport { TokenService } from './token.service';\nimport { HttpClient, HttpRequest, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class RequestBaseService {\n\n  public model: any;\n  public urlService: string;\n  public urlServiceAuto: string;\n\n  constructor(private httpService: PxtHttpService,\n    private helper: HttpHelperService,\n    private tokenService: TokenService,\n    public _httpClient: HttpClient) {\n    this.urlService = helper.getApi();\n  }\n  load(): any {\n    return this.httpService.doGet(this.urlServiceAuto);\n  };\n  save(model?: any): any {\n    return this.httpService.doPost(this.urlServiceAuto, model);\n  };\n  delete(id): any {\n    return this.httpService.doDelete(this.urlServiceAuto, id);\n  };\n\n  doGet(path: string, params?: Map<any, any>) {\n    let url\n    if (params !== undefined && params.size > 0) {\n      url = path + this.buildRequestParams(params);\n    } else {\n      url = path;\n    }\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doGet(path);\n    } else {\n      return this.httpService.doGet(this.urlService + url);\n    }\n  };\n\n  doPost(path: string, model?: any) {\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doPost(path, model);\n    } else {\n      return this.httpService.doPost(this.urlService + path, model);\n    };\n  };\n\n  doPut(path: string, model?: any) {\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doPut(path, model);\n    } else {\n      return this.httpService.doPut(this.urlService + path, model);\n    }\n  };\n\n  doDelete(path: string, id: number) {\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doDelete(path, id);\n    } else {\n      return this.httpService.doDelete(this.urlService + path, id);\n    };\n  };\n\n  uploadImage(path, params?: Map<any, any>): any {\n\n    if (path.indexOf('http') <= -1) {\n      path = this.urlService + path ;\n    };\n\n    const header = {\n      'Authorization': 'Bearer '.concat(this.tokenService.getAccessToken())\n    };\n    const httpOptions = new HttpHeaders(header);\n    const token = this.tokenService.getAccessToken();\n    const formdata = this.setParamsFormdata(params);\n    const req = new HttpRequest('POST', path, formdata, {\n      headers: httpOptions,\n      reportProgress: true,\n      responseType: 'text'\n    });\n    return this._httpClient.request(req);\n  }\n\n\n  setParamsFormdata(params: Map<any, any>): FormData {\n    const formdata: FormData = new FormData();\n    let primeiraIteracao = true;\n    params.forEach((value, key) => {\n      formdata.append(key, value);\n    });\n    return formdata;\n  };\n\n  private buildRequestParams(params: Map<any, any>): string {\n    let final = '';\n    let primeiraIteracao = true;\n    params.forEach((value, key) => {\n      if (primeiraIteracao) {\n        final += '?' + key + '=' + value;\n        primeiraIteracao = false;\n      } else {\n        final += '&' + key + '=' + value;\n      }\n    });\n    return final;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, UpperCasePipe } from \"@angular/common\";\r\n\r\n@Pipe({\r\n  name: 'uppercaseFirst'\r\n})\r\nexport class UpercaseFirst extends UpperCasePipe implements PipeTransform {\r\n  transform(text: any, args?: any): any {\r\n    if (text != undefined) {\r\n      var words = text.toLowerCase().split(\" \");\r\n      for (var a = 0; a < words.length; a++) {\r\n        if (words[a].length > 3) {\r\n          var w = words[a];\r\n          words[a] = w[0].toUpperCase() + w.slice(1);\r\n        }\r\n      }\r\n      return words.join(\" \");\r\n    }\r\n  }\r\n}","export class Constants {\r\n    static readonly DATE_FMT = 'dd/MM/yyyy';\r\n    static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} - hh:mm:ss a`;\r\n  }","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { Constants } from \"../util/constants\";\r\n\r\n@Pipe({\r\n    name: 'dateFormat'\r\n  })\r\n  export class DateFormatPipe extends DatePipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n      return super.transform(value, Constants.DATE_FMT);\r\n    }\r\n  }","import { DatePipe } from \"@angular/common\";\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { Constants } from \"../util/constants\";\r\n\r\n\r\n@Pipe({\r\n  name: 'dateTimeFormat'\r\n})\r\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    var datePipe = new DatePipe(\"en-US\");\r\n    return  datePipe.transform(value, Constants.DATE_TIME_FMT);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UpercaseFirst } from './uppercase-first';\r\nimport { DateFormatPipe } from './date-format.pipe';\r\nimport { DateTimeFormatPipe } from './date-time-format.pipe';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [UpercaseFirst, DateFormatPipe,DateTimeFormatPipe ],\r\n    exports: [UpercaseFirst, DateFormatPipe,DateTimeFormatPipe ]\r\n})\r\nexport class PipeModule { }\r\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { PxtAppComponentService } from '../../../services/pxt-app-components.service';\n\n\n@Component({\n  selector: 'pxt-app-menu-item',\n  templateUrl: './pxt-app-menu-item.component.html',\n  styleUrls: ['./pxt-app-menu-item.component.css']\n})\nexport class PxtAppMenuItemComponent implements OnInit {\n\n  @Input() items: any[];\n  @ViewChild('childMenu') public childMenu;\n\n  constructor(@Inject(PxtAppComponentService) public pxtAppComponentService) { }\n  ngOnInit() {\n  }\n\n  loadComponent(child) {\n    this.pxtAppComponentService.loadComponent({component: child.menuSource.component, data:\"\"});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtAppMenuItemComponent } from './pxt-app-menu-item.component';\nimport { PipeModule } from '../../../pipes/pipes.module';\nimport { MaterialAngularModule } from '../../material-angular/material-angular.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtAppMenuItemComponent],\n   exports: [PxtAppMenuItemComponent],\n  entryComponents: [ PxtAppMenuItemComponent ]\n  \n})\nexport class PxtAppMenuItemModule { }\n","import { Directive, Input, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[hash]',\r\n  })\r\n  export class HashDirective  {\r\n    @Input() hash: string;\r\n  \r\n    constructor(public vcRef: ViewContainerRef) {}\r\n  }","import { Injectable } from '@angular/core';\nimport { VisibleInRolesGuard } from '../visible-in-roles.guard';\nimport { PxtHttpService } from '../services/pxt-http/pxt-http.service';\nimport { HttpHelperService } from '../services/pxt-http/http-helper-service';\n@Injectable()\nexport class AuthorityService {\n  constructor(private _http: PxtHttpService, private _httpHelper: HttpHelperService) { }\n\n  buscarAuthorities (codigoSistema) {\n    const url = this._httpHelper.getApiSgi() + \"permissoes/buscarPerfilSistema/?\";\n    const params = \"codigoSistema=\" + codigoSistema;\n    return this._http.doGet(url + params);\n  }\n}","export const pxtConfiguration = {systemId: 104 ,systemPrex: \"SGE_NEW\"}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpHelperService } from './services/pxt-http/http-helper-service';\r\nimport { AuthorityService } from './services/authority.service';\r\nimport { pxtConfiguration } from \"./models/pxtConfiguration\"\r\n\r\n@Injectable()\r\nexport class VisibleInRolesGuard implements CanActivate {\r\n  constructor(private router: Router, private httpHelper: HttpHelperService, private authorityService: AuthorityService) { }\r\n  canActivate(next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const token = localStorage.getItem('token');\r\n    if (token !== 'undefined' && token !== '' && token !== null) {\r\n      try {\r\n        const decoded = <any>jwt_decode(token);\r\n        var tokenAuthorities = localStorage.getItem(pxtConfiguration.systemId + pxtConfiguration.systemPrex + decoded.sub);\r\n        if (tokenAuthorities === 'undefined' || tokenAuthorities === '' || tokenAuthorities === null) {\r\n          this.authorityService.buscarAuthorities(pxtConfiguration.systemId).subscribe(data => {\r\n            localStorage.setItem(pxtConfiguration.systemId + pxtConfiguration.systemPrex + decoded.sub, data.authority)\r\n          });\r\n        }\r\n      }\r\n      catch (err) {\r\n        //window.location.href = this.httpHelper.getUrlAutenticacao() + \"?erro=401\";\r\n        console.log(err);\r\n        return false;\r\n      }\r\n    } else {\r\n      // window.location.href = this.httpHelper.getUrlAutenticacao() + \"?erro=401\";\r\n      console.log(\"Token Undefined\");\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtAppComponent } from './pxt-app.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { ConfigService } from '../../services/pxt-http/config.service';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { PxtHttpService } from '../../services/pxt-http/pxt-http.service';\nimport { environment } from '../../../environments/environment';\nimport { PipeModule } from '../../pipes/pipes.module';\nimport { MatMenuModule } from '@angular/material';\nimport { PxtAppMenuItemModule } from './pxt-app-menu-item/pxt-app-menu-item.module';\nimport { HashDirective } from '../../directives/HashDirective';\nimport { VisibleInRolesGuard } from '../../visible-in-roles.guard';\nimport { AuthorityService } from '../../services/authority.service';\nimport { TokenService } from '../../services/pxt-http/token.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule,\n    MatMenuModule,\n    PxtAppMenuItemModule,    \n  ],\n  declarations: [PxtAppComponent, PxtContentBody, HashDirective],\n  exports: [PxtAppComponent],\n  providers: [PxtAppComponentService, PxtHttpService, \n    RequestBaseService, HttpHelperService, ConfigService,     \n    VisibleInRolesGuard,TokenService,AuthorityService]\n})\nexport class PxtAppModule { }\n","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtInputField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtCheckboxField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    filters?: any;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\n\r\nexport class pxtDateField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    type?: string;\r\n    validations?: Validator[];\r\n    disabled: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtFilterField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    className?: any;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}\r\n","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\n\r\nexport class pxtRadioButtonField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    options?: string[];\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtSelectField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    className?: any;\r\n    options?: string[];\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n    parameter?: any; \r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtfilterCustomField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    className?: any;\r\n    inputType?: string;\r\n    filters?: any;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    disabled?: boolean;\r\n    validations?: Validator[];\r\n}","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { AdComponent } from '../../interfaces/ad.component';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '../../interfaces/field.interface';\nimport { PxtFieldConfig } from '../../interfaces/pxt-field-config';\nimport { PxtInputComponent } from '../shared/components/pxt-input/pxt-input.component';\nimport { pxtInputField } from '../../fields/pxt-input-field';\nimport { pxtCheckboxField } from '../../fields/pxt-checkbox-field';\nimport { pxtDateField } from '../../fields/pxt-date-field';\nimport { pxtFilterField } from '../../fields/pxt-filter-field';\nimport { pxtRadioButtonField } from '../../fields/pxt-radiobutton-field';\nimport { pxtSelectField } from '../../fields/pxt-select-field';\nimport { pxtfilterCustomField } from '../../fields/pxt-filter-custom-field';\n\n@Component({\n  selector: 'pxt-content-body',\n  templateUrl: './pxt-content.component.html',\n  styleUrls: ['./pxt-content.component.scss']\n})\nexport class PxtContentComponent implements AdComponent {\n  //Properties \n  @Input() data: any;\n  @Input() auto?: boolean;\n  @Input() fields: PxtFieldConfig[] = [];\n  @Input() cols: number = 5;\n  @Input() field: any;\n  colsInitial = 5;\n  @Output() submit: EventEmitter<any> = new EventEmitter<any>();\n\n  public form: FormGroup;\n\n  public get value() {\n    return this.form.value;\n  }\n\n  //Constructor\n  constructor(public fb: FormBuilder) { }\n\n  ngOnInit() {\n\n    if (this.field != undefined){\n    Object.keys(this.field).forEach(key => {\n      switch (this.field[key].constructor.name) {\n\n        //FilterCustom\n        case pxtfilterCustomField.name:\n          var instanceFilterCustom = <pxtfilterCustomField>this.field[key];\n          instanceFilterCustom.type = 'filter';\n          this.fields.push(instanceFilterCustom);\n          break;\n\n        //Input\n        case pxtInputField.name:\n          var instanceInput = <pxtInputField>this.field[key];\n          instanceInput.type = 'input';\n          this.fields.push(instanceInput);\n          break;\n\n        //Checkbox\n        case pxtCheckboxField.name:\n          var instanceCheck = <pxtCheckboxField>this.field[key];\n          instanceCheck.type = 'checkbox';\n          this.fields.push(instanceCheck);\n          break;\n\n        //Date\n        case pxtDateField.name:\n          var instanceDate = <pxtDateField>this.field[key];\n          instanceDate.type = 'date';\n          this.fields.push(instanceDate);\n          break;\n\n        //Filter\n        case pxtFilterField.name:\n          var instanceFilter = <pxtDateField>this.field[key];\n          instanceFilter.type = 'filter';\n          this.fields.push(instanceFilter);\n          break;\n\n        //RadioButton\n        case pxtRadioButtonField.name:\n          var instanceRadio = <pxtDateField>this.field[key];\n          instanceRadio.type = 'radio';\n          this.fields.push(instanceRadio);\n          break;\n\n          \n        //Select\n        case pxtSelectField.name:\n        var instanceSelect = <pxtDateField>this.field[key];\n        instanceSelect.type = 'select';\n        this.fields.push(instanceSelect);\n        break;\n\n        default:\n          break;\n      }\n    });\n  }\n    this.onResize();\n    this.colsInitial = this.cols;\n    this.form = this.createControl();\n  }\n\n  // Method responsible for create control\n  public onSubmit(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.form.valid) {\n\n      this.submit.emit(this.form.value);\n    } else {\n      this.validateAllFormFields(this.form);\n    }\n  }\n\n  // Method responsible for create control\n  public createControl() {\n    const group = this.fb.group({});\n    this.fields.forEach(field => {\n      if (field.type === \"button\") return;\n      const control = this.fb.control(\n        { value: field.value, disabled: field.disabled },\n        this.bindValidations(field.validations || [])\n      );\n      group.addControl(field.name, control);\n    });\n    return group;\n  }\n\n  public bindValidations(validations: any): any {\n    if (validations.length > 0) {\n      const validList = [];\n      validations.forEach(valid => {\n        validList.push(valid.validator);\n      });\n      return Validators.compose(validList);\n    }\n    return null;\n  }\n\n  public validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      control.markAsTouched({ onlySelf: true });\n    });\n  }\n  screenWidth;\n  @HostListener('window:resize', ['$event'])\n  onResize(event?) {\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth <= 800) {\n      this.cols = 1;\n    } else if (this.screenWidth <= 1100) {\n      this.cols = 3;\n    } else {\n      this.cols = this.colsInitial;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FieldConfig } from '../../../../interfaces/field.interface';\nimport { FormGroup } from '@angular/forms';\nimport { ViewEncapsulation } from '@angular/compiler/src/core';\n\n@Component({\n  selector: 'pxt-input',\n  templateUrl: './pxt-input.component.html',\n  styleUrls: ['./pxt-input.component.scss']\n})\nexport class PxtInputComponent implements OnInit {\n\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FieldConfig } from '../../../../interfaces/field.interface';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'pxt-button',\n  templateUrl: './pxt-button.component.html',\n  styleUrls: ['./pxt-button.component.scss']\n})\nexport class PxtButtonComponent implements OnInit {\n\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n\n}\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\n\n@Component({\n  selector: 'pxt-date',\n  templateUrl: './pxt-date.component.html',\n  styleUrls: ['./pxt-date.component.scss']\n})\nexport class PxtDateComponent implements OnInit {\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'pxt-checkbox',\n  templateUrl: './pxt-checkbox.component.html',\n  styleUrls: ['./pxt-checkbox.component.scss']\n})\nexport class PxtCheckboxComponent implements OnInit {\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'pxt-radiobutton',\n  templateUrl: './pxt-radiobutton.component.html',\n  styleUrls: ['./pxt-radiobutton.component.scss']\n})\nexport class PxtRadiobuttonComponent implements OnInit {\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n\n}\n","import { Component, OnInit, Input, forwardRef, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { RequestBaseService } from '../../../../services/pxt-http/request-base.service';\n\nconst noop = () => {\n};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PxtSelectComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pxt-select',\n  templateUrl: './pxt-select.component.html',\n  styleUrls: ['./pxt-select.component.scss'],\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class PxtSelectComponent implements OnInit, ControlValueAccessor {\n\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Selecione';\n  @Input() model: any;\n  @Input() params: any;\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter<any>();\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.params != undefined && !changes.params.firstChange) {\n      this.params = changes.params.currentValue;\n      this.find();\n    }\n  }\n\n  controller = \"\";\n  auto = false;\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n\n  option: any;\n\n  options: any[] = [];\n\n  get selectedOption() {\n    return this.option;\n  }\n\n  onBlur() {\n    this.onTouchedCallback();\n  }\n\n  set selectedOption(f: any) {\n    if (f != undefined) {\n      if (f !== this.option) {\n        this.option = f;\n        this.onChangeCallback(f.codigo);\n        this.selectionChange.emit(this.option);\n      }\n    }\n  }\n\n  writeValue(value: any) {\n    this.option = value;\n    this.onChangeCallback(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  constructor(public pxthttp: RequestBaseService) {\n  }\n\n  ngOnInit() {\n    if (this.model != undefined) {\n      this.controller = this.model.constructor.name;\n      this.field = this.model;\n      this.auto = false;\n    } else if (this.field != undefined && this.field.className != undefined) {\n      this.controller = this.field.className.name;\n      this.auto = true;\n    }\n  };\n\n  find() {\n    if (this.controller != undefined) {\n      this.pxthttp.doGet(this.controller, this.params).subscribe(result => {\n        if (this.auto) {\n          this.field.options = result;\n        } else {\n          this.options = result;\n        }\n      });\n    }\n  };\n  ngAfterViewInit() {\n    this.find();\n  };\n}\n\n\n","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { HttpHelperService } from '../../../services/pxt-http/http-helper-service';\nimport { RequestBaseService } from '../../../services/pxt-http/request-base.service';\nimport { PxtFieldConfig } from '../../../interfaces/pxt-field-config';\n\nimport { pxtInputField } from '../../../fields/pxt-input-field';\nimport { pxtCheckboxField } from '../../../fields/pxt-checkbox-field';\nimport { pxtDateField } from '../../../fields/pxt-date-field';\nimport { pxtFilterField } from '../../../fields/pxt-filter-field';\nimport { pxtSelectField } from '../../../fields/pxt-select-field';\nimport { pxtRadioButtonField } from '../../../fields/pxt-radiobutton-field';\nimport { pxtfilterCustomField } from '../../../fields/pxt-filter-custom-field';\nimport { post } from 'selenium-webdriver/http';\n\n\ndeclare var $: any;\n@Component({\n  selector: 'pxt-dialog-filter',\n  templateUrl: './pxt-dialog-filter.component.html',\n  styleUrls: ['./pxt-dialog-filter.component.scss']\n})\nexport class PxtDialogFilterComponent implements OnInit {\n\n  displayedColumns = ['codigo', 'descricao'];\n  dataSource = new MatTableDataSource<any>();\n  controller = \"\";\n  cols = 2;\n  fields: PxtFieldConfig[] = [];\n  fieldsHist: PxtFieldConfig[] = [];\n  auto: boolean;\n  filter = { code: undefined, description: undefined };\n  field: PxtFieldConfig;\n  public form: FormGroup;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  get value() {\n    return this.form.value;\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogFilterComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public helper: HttpHelperService,\n    public http: RequestBaseService) {\n    this.controller = data.controller;\n  }\n  ngOnInit() {\n    this.auto = this.data.auto;\n    if (this.auto) {\n      this.field = this.data.filters;\n      Object.keys(this.field).forEach(key => {\n        switch (this.field[key].constructor.name) {\n          case pxtfilterCustomField.name:\n            var instanceFilterCustom = <pxtfilterCustomField>this.field[key];\n            instanceFilterCustom.type = 'filter';\n            this.fields.push(instanceFilterCustom);\n            this.fieldsHist.push(instanceFilterCustom);\n            break;\n          //Input\n          case pxtInputField.name:\n            var instanceInput = <pxtInputField>this.field[key];\n            instanceInput.type = 'input';\n            this.fields.push(instanceInput);\n            this.fieldsHist.push(instanceInput);\n            break;\n\n          //Checkbox\n          case pxtCheckboxField.name:\n            var instanceCheck = <pxtCheckboxField>this.field[key];\n            instanceCheck.type = 'checkbox';\n            this.fields.push(instanceCheck);\n            this.fieldsHist.push(instanceCheck);\n            break;\n\n          //Date\n          case pxtDateField.name:\n            var instanceDate = <pxtDateField>this.field[key];\n            instanceDate.type = 'date';\n            this.fields.push(instanceDate);\n            this.fieldsHist.push(instanceDate);\n            break;\n\n          //Filter\n          case pxtFilterField.name:\n            var instanceFilter = <pxtDateField>this.field[key];\n            instanceFilter.type = 'filter';\n            this.fields.push(instanceFilter);\n            this.fieldsHist.push(instanceFilter);\n            break;\n\n          //RadioButton\n          case pxtRadioButtonField.name:\n            var instanceRadio = <pxtDateField>this.field[key];\n            instanceRadio.type = 'radio';\n            this.fields.push(instanceRadio);\n            this.fieldsHist.push(instanceRadio);\n            break;\n          //Select\n          case pxtSelectField.name:\n            var instanceSelect = <pxtDateField>this.field[key];\n            instanceSelect.type = 'select';\n            this.fields.push(instanceSelect);\n            this.fieldsHist.push(instanceSelect);\n            break;\n        }\n      });\n      this.fields.sort((a, b) => {\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        return 0;\n      });\n      this.fieldsHist.sort((a, b) => {\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        return 0;\n      });\n      this.form = this.createControl();\n    }\n  }\n\n  cancelation() {\n    this.dialogRef.close(undefined);\n  }\n  confirmation(event) {\n    this.dialogRef.close(true);\n  }\n\n  //Search.\n  search() {\n    let params = new Map<any, any>();\n    debugger;\n    if (this.data.auto != undefined && this.data.auto) {\n      if (this.form.value !== undefined) {\n        Object.keys(this.form.value).forEach(key => {\n          if (this.form.value[key] != undefined) {\n            params.set(key, this.form.value[key]);\n          }\n        });\n      }\n\n      this.http.doGet(this.controller, params).subscribe(result => {\n        this.dataSource.data = result;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n    } else {\n      if (this.filter.code != undefined && this.filter.code != 0 && this.filter.code != \"\") {\n        params.set(\"codigo\", this.filter.code);\n      }\n      if (this.filter.description != undefined && this.filter.description != \"\") {\n        params.set(\"descricao\", this.filter.description);\n      }\n      this.http.doGet(this.controller, params).subscribe(result => {\n        this.dataSource.data = result;\n      });\n    }\n  };\n\n  selectRow(row) {\n    this.dialogRef.close(row);\n  };\n  // Method responsible for create control\n  createControl() {\n    const group = this.fb.group({});\n    this.fields.forEach(field => {\n      if (field.type === \"button\") return;\n      const control = this.fb.control(\n        { value: field.value, disabled: field.disabled },\n        this.bindValidations(field.validations || [])\n      );\n      group.addControl(field.name, control);\n    });\n    return group;\n  };\n\n  bindValidations(validations: any): any {\n    if (validations.length > 0) {\n      const validList = [];\n      validations.forEach(valid => {\n        validList.push(valid.validator);\n      });\n      return Validators.compose(validList);\n    }\n    return null;\n  };\n\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      control.markAsTouched({ onlySelf: true });\n    });\n  };\n\n  close() {\n    this.dialogRef.close(undefined);\n  };\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n}\n","import { Component, OnInit, Input, forwardRef, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { PxtDialogFilterComponent } from '../../../pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.component';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n/*\nconst noop = () => {\n};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PxtInputFilterComponent),\n  multi: true\n};\n*/\n@Component({\n  selector: 'pxt-input-filter',\n  templateUrl: './pxt-input-filter.component.html',\n  styleUrls: ['./pxt-input-filter.component.scss'],\n  //providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class PxtInputFilterComponent implements OnInit {\n  isDisabled = true;\n  auto: boolean;\n  @Input() className :String;\n  @Input() placeholder : String = \" \";\n  @Output() onValueCallback: EventEmitter<any> = new EventEmitter();\n   value : String = \"\";\n  field: PxtFieldConfig;\n  group: FormGroup;\n\n  //private onChangeCallback: (_: any) => void = noop;\n \n  constructor(public dialog: MatDialog) { }\n\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.className != undefined && !changes.className.firstChange) {\n      this.className = changes.className.currentValue;\n    }\n    if (changes.placeholder != undefined && !changes.placeholder.firstChange) {\n      this.placeholder = changes.placeholder.currentValue;\n    }\n  }\n\n  ngOnInit() {\n    if (this.field != undefined){\n      this.value = this.field.value;\n    }\n  }\n\n  /*\n  get inputValue() {\n    return this.value;\n  }\n\n  set inputValue(f: any) {\n    if (f != undefined) {\n      if (f !== this.value) {\n        this.value = f;\n        this.onChangeCallback(f);\n      }\n    }\n  }\n*/\n  //Method resposible for open dialog filter\n  openFilter() {\n    if (this.field != undefined && this.field.filters != undefined) {\n      this.auto = true;\n      let dialogRef = this.dialog.open(PxtDialogFilterComponent, {\n        width: '600px',\n        panelClass: 'pxt-dialog',\n        data: { auto: this.auto, filters: this.field.filters, controller: this.field.className, titleDialog: \"Selecione: ( \" + this.field.className + \" )\" }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          this.field.value = result.codigo;\n        }\n      });\n    }else {\n      let dialogRef = this.dialog.open(PxtDialogFilterComponent, {\n        width: '600px',\n        panelClass: 'pxt-dialog',\n        data: {controller: this.className, titleDialog: \"Selecione: ( \" +  this.className + \" )\" }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          this.value = result.descricao;\n          this.onValueCallback.emit(result);\n        }\n      });\n    }\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, ViewContainerRef } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { PxtInputComponent } from \"../modules/shared/components/pxt-input/pxt-input.component\";\r\nimport { PxtButtonComponent } from \"../modules/shared/components/pxt-button/pxt-button.component\";\r\nimport { FieldConfig } from \"../interfaces/field.interface\";\r\nimport { PxtDateComponent } from \"../modules/shared/components/pxt-date/pxt-date.component\";\r\nimport { PxtCheckboxComponent } from \"../modules/shared/components/pxt-checkbox/pxt-checkbox.component\";\r\nimport { PxtRadiobuttonComponent } from \"../modules/shared/components/pxt-radiobutton/pxt-radiobutton.component\";\r\nimport { PxtSelectComponent } from \"../modules/shared/components/pxt-select/pxt-select.component\";\r\nimport { PxtInputFilterComponent } from \"../modules/shared/components/pxt-input-filter/pxt-input-filter.component\";\r\n\r\nconst componentMapper = {\r\n  input: PxtInputComponent,\r\n  button: PxtButtonComponent,\r\n  date: PxtDateComponent,\r\n  select: PxtSelectComponent,\r\n  radiobutton: PxtRadiobuttonComponent,\r\n  checkbox: PxtCheckboxComponent,\r\n  filter: PxtInputFilterComponent,\r\n};\r\n@Directive({\r\n  selector: \"[dynamicField]\"\r\n})\r\nexport class DynamicFieldDirective implements OnInit {\r\n  @Input() field: FieldConfig;\r\n  @Input() group: FormGroup;\r\n  componentRef: any;\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) { }\r\n  ngOnInit() {\r\n    const factory = this.resolver.resolveComponentFactory(\r\n      componentMapper[this.field.type]\r\n    );\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.field = this.field;\r\n    this.componentRef.instance.group = this.group;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtInputComponent } from './pxt-input.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtInputComponent],\n  exports:[PxtInputComponent],\n  entryComponents:[PxtInputComponent]\n})\nexport class PxtInputModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtButtonComponent } from './pxt-button.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtButtonComponent],\n  exports:[PxtButtonComponent],\n  entryComponents:[PxtButtonComponent]\n})\nexport class PxtButtonModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtDateComponent } from './pxt-date.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtDateComponent],\n  exports: [PxtDateComponent],\n  entryComponents: [PxtDateComponent]\n})\nexport class PxtDateModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtSelectComponent } from './pxt-select.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  exports:[PxtSelectComponent],\n  entryComponents:[PxtSelectComponent],\n  declarations: [PxtSelectComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class PxtSelectModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtRadiobuttonComponent } from './pxt-radiobutton.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtRadiobuttonComponent],\n  exports: [PxtRadiobuttonComponent],\n  entryComponents: [PxtRadiobuttonComponent]\n})\nexport class PxtRadiobuttonModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtCheckboxComponent } from './pxt-checkbox.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtCheckboxComponent],\n  exports: [PxtCheckboxComponent],\n  entryComponents:[PxtCheckboxComponent]\n})\nexport class PxtCheckboxModule { }\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, ViewContainerRef } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { PxtInputComponent } from \"../modules/shared/components/pxt-input/pxt-input.component\";\r\nimport { PxtButtonComponent } from \"../modules/shared/components/pxt-button/pxt-button.component\";\r\nimport { FieldConfig } from \"../interfaces/field.interface\";\r\nimport { PxtDateComponent } from \"../modules/shared/components/pxt-date/pxt-date.component\";\r\nimport { PxtCheckboxComponent } from \"../modules/shared/components/pxt-checkbox/pxt-checkbox.component\";\r\nimport { PxtRadiobuttonComponent } from \"../modules/shared/components/pxt-radiobutton/pxt-radiobutton.component\";\r\nimport { PxtSelectComponent } from \"../modules/shared/components/pxt-select/pxt-select.component\";\r\nimport { PxtInputFilterComponent } from \"../modules/shared/components/pxt-input-filter/pxt-input-filter.component\";\r\n\r\nconst componentMapper = {\r\n  input: PxtInputComponent,\r\n  button: PxtButtonComponent,\r\n  date: PxtDateComponent,\r\n  select: PxtSelectComponent,\r\n  radiobutton: PxtRadiobuttonComponent,\r\n  checkbox: PxtCheckboxComponent,\r\n  filter: PxtInputFilterComponent,\r\n};\r\n@Directive({\r\n  selector: \"[dynamicFieldDialog]\"\r\n})\r\nexport class DynamicFieldDirectiveDialog implements OnInit {\r\n  @Input() field: FieldConfig;\r\n  @Input() group: FormGroup;\r\n  componentRef: any;\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) { }\r\n  ngOnInit() {\r\n    const factory = this.resolver.resolveComponentFactory(\r\n      componentMapper[this.field.type]\r\n    );\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.field = this.field;\r\n    this.componentRef.instance.group = this.group;\r\n  }\r\n}\r\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtDialogFilterComponent } from './pxt-dialog-filter.component';\nimport { MaterialAngularModule } from '../../material-angular/material-angular.module';\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material';\nimport { DynamicFieldDirectiveDialog } from '../../../directives/dynamic-field-directive-dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtDialogFilterComponent,DynamicFieldDirectiveDialog],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  exports:[PxtDialogFilterComponent],\n  entryComponents:[PxtDialogFilterComponent],\n  providers: [\n    {provide: MAT_DIALOG_DATA, useValue: {}},\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}}\n  ]\n})\nexport class PxtDialogFilterModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtInputFilterComponent } from './pxt-input-filter.component';\nimport { PxtDialogFilterModule } from '../../../pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.module';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { DynamicFieldDirectiveDialog } from '../../../../directives/dynamic-field-directive-dialog';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PxtDialogFilterModule,\n    PipeModule\n  ],\n  declarations: [PxtInputFilterComponent],\n  exports: [PxtInputFilterComponent],\n  entryComponents:[PxtInputFilterComponent]\n})\nexport class PxtInputFilterModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtContentComponent } from './pxt-content.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { templateJitUrl } from '@angular/compiler';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { DynamicFieldDirective } from '../../directives/dynamic-field-directive';\nimport { PxtInputModule } from '../shared/components/pxt-input/pxt-input.module';\nimport { PxtButtonModule } from '../shared/components/pxt-button/pxt-button.module';\nimport { PxtDateModule } from '../shared/components/pxt-date/pxt-date.module';\nimport { PxtSelectModule } from '../shared/components/pxt-select/pxt-select.module';\nimport { PxtRadiobuttonModule } from '../shared/components/pxt-radiobutton/pxt-radiobutton.module';\nimport { PxtCheckboxModule } from '../shared/components/pxt-checkbox/pxt-checkbox.module';\nimport { PxtInputFilterModule } from '../shared/components/pxt-input-filter/pxt-input-filter.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    HttpClientModule,\n    HttpModule,\n    PxtInputModule,\n    PxtButtonModule,\n    PxtDateModule,\n    PxtSelectModule,\n    PxtRadiobuttonModule,\n    PxtCheckboxModule,\n    PxtInputFilterModule\n  ],\n  declarations: [PxtContentComponent, DynamicFieldDirective],\n   exports: [PxtContentComponent],\n  entryComponents: [ PxtContentComponent]\n})\nexport class PxtContentModule { }\n","\r\n\r\n\r\nexport class PxtButton {\r\n    icon: String;\r\n    menu: String;\r\n    enable: Boolean;\r\n    enum : Number;\r\n    constructor(icon: String, menu: String, enable: Boolean, id : number) {\r\n        this.icon = icon;\r\n        this.menu = menu;\r\n        this.enable = enable;\r\n        this.enum = id;\r\n    }\r\n\r\n}\r\n","export enum OptionsSubmenu {\r\n    SALVAR = 1,\r\n    PESQUISAR = 2,\r\n    LIMPAR = 3,\r\n    NOVO = 4,\r\n    VOLTAR= 5,\r\n    EXCLUIR= 6\r\n}","import { Component, ViewChild, ComponentFactoryResolver, Output, Input, EventEmitter } from '@angular/core';\nimport { PxtButton } from './model/pxt-submenus.model';\nimport { OptionsSubmenu } from './enum/option-submenu.enum';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { Observable } from 'rxjs';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\n@Component({\n  selector: 'pxt-submenus',\n  templateUrl: './pxt-submenus.component.html',\n  styleUrls: ['./pxt-submenus.component.css']\n})\nexport class PxtSubmenusComponent<T> {\n\n  @Input() model?: T = {} as T;\n  private urlService = \"\";\n\n  @Output() listing: EventEmitter<T[]> = new EventEmitter();\n  @Output() statusSave: EventEmitter<T[]> = new EventEmitter();\n  @Output() statusDelete: EventEmitter<T[]> = new EventEmitter();\n  @Input() controller?: String;\n\n  save() {\n    this._serviceBase.save(this.model).subscribe(result => {\n      this.statusSave.emit(result);\n    });\n  };\n  search() {\n    this._serviceBase.load().subscribe(result => {\n      this.listing.emit(result);\n    });\n  };\n  delete(id) {\n    this._serviceBase.delete(id).subscribe(result => {\n      this.statusDelete.emit(result);\n    });\n  };\n  clear() {\n   this.model = {} as T;\n  };\n  add() {\n    throw new Error(\"Method 'add()' not implemented.\");\n  };\n  back() {\n    throw new Error(\"Method 'back()' not implemented.\");\n  };\n\n  buttons: PxtButton[] = [];\n  enableSave = true;\n  enableBack = true;\n  enableClear = true;\n  enableSearch = true;\n  enableAdd = true;\n  enableDelete = true;\n\n  constructor(public _pxtAppService: PxtAppComponentService, public _serviceBase: RequestBaseService,public helper:  HttpHelperService) {\n    this.buttons.push(new PxtButton(\"keyboard_backspace\", \"VOLTAR\", true, OptionsSubmenu.VOLTAR));\n    this.buttons.push(new PxtButton(\"add\", \"SALVAR\", true, OptionsSubmenu.SALVAR));\n    this.buttons.push(new PxtButton(\"add\", \"NOVO\", true, OptionsSubmenu.NOVO));\n    this.buttons.push(new PxtButton(\"delete\", \"LIMPAR\", true, OptionsSubmenu.LIMPAR));\n    this.buttons.push(new PxtButton(\"search\", \"PESQUISAR\", true, OptionsSubmenu.PESQUISAR));\n    this.buttons.push(new PxtButton(\"delete\", \"EXCLUIR\", true, OptionsSubmenu.EXCLUIR));\n\n\n    setTimeout(() => {\n      this.urlService = helper.getApi() + this.model.constructor.name.toLowerCase();\n      this._serviceBase.urlServiceAuto = this.urlService ;\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { PxtSubmenusComponent } from './pxt-submenus.component';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { PxtHttpService } from '../../services/pxt-http/pxt-http.service';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\nimport { ConfigService } from '../../services/pxt-http/config.service';\nimport { PipeModule } from '../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtSubmenusComponent],\n  exports: [PxtSubmenusComponent],\n  providers:[PxtHttpService, RequestBaseService, HttpHelperService, ConfigService]\n})\nexport class PxtSubmenusModule { }\n\n","import { Component, OnInit, Input, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nconst noop = () => {\r\n};\r\n\r\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => PxtDatepickerComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'pxt-datepicker',\r\n  templateUrl: './pxt-datepicker.component.html',\r\n  styleUrls: ['./pxt-datepicker.component.scss'],\r\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class PxtDatepickerComponent implements OnInit, ControlValueAccessor {\r\n\r\n  @Input() placeholder: String = \"Escolha uma data\";\r\n  @Input() minDate: Date;\r\n  @Input() maxDate: Date;\r\n  @Input() inputDisabled: boolean = false;\r\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  dateModel: Date;\r\n\r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n\r\n  get dataSelecionada() {\r\n    return this.dateModel;\r\n  }\r\n\r\n  set dataSelecionada(d: Date) {\r\n    if (d !== this.dateModel) {\r\n      this.dateModel = d;\r\n      this.onChangeCallback(d);\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    this.onTouchedCallback();\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    this.dateModel = value;\r\n    this.onChangeCallback(value);\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n      this.onTouchedCallback = fn;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onDateChange() {\r\n    this.onChange.emit(true);\r\n  }\r\n\r\n  clear() {\r\n    this.writeValue(undefined);\r\n    this.onDateChange();\r\n  }\r\n  \r\n}","\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { PxtDatepickerComponent } from './pxt-datepicker.component';\r\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule,   MaterialAngularModule],\r\n  providers: [DatePipe],\r\n  declarations: [PxtDatepickerComponent],\r\n  exports: [PxtDatepickerComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\r\n})\r\nexport class PxtDatePickerModule {\r\n}\r\n","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-pxt-dialog',\n  templateUrl: './pxt-dialog.component.html',\n  styleUrls: ['./pxt-dialog.component.scss']\n})\nexport class PxtDialogComponent implements OnInit {\n\n  @Input() placeholder: string;\n\n  constructor(private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n  ngOnInit() {\n  }\n  cancelation() {\n    this.dialogRef.close(false);\n  }\n  confirmation() {\n    this.dialogRef.close(true);\n  }\n  selectRow(row) {\n    this.dialogRef.close(row);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtDialogComponent } from './pxt-dialog.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtDialogComponent],\n  exports: [PxtDialogComponent],\n  entryComponents:[PxtDialogComponent]\n\n})\nexport class PxtDialogModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { PxtDialogComponent } from '../pxt-dialog/pxt-dialog.component';\n\n@Component({\n  selector: 'app-pxt-filter',\n  templateUrl: './pxt-filter.component.html',\n  styleUrls: ['./pxt-filter.component.css']\n})\nexport class PxtFilterComponent implements OnInit {\n\n  public data : any;\n  constructor(private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogComponent>, @Inject(MAT_DIALOG_DATA) data) {\n      this.data = data;\n     }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtFilterComponent } from './pxt-filter.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule, \n    MaterialAngularModule\n  ],\n  declarations: [PxtFilterComponent],\n  exports: [PxtFilterComponent],\n  entryComponents:[PxtFilterComponent]\n \n})\nexport class PxtFilterModule { }\n","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { RequestBaseService } from '../../../services/pxt-http/request-base.service';\n\n\n@Component({\n  selector: 'pxt-dialog-filter-custom',\n  templateUrl: './pxt-dialog-filter-custom.component.html',\n  styleUrls: ['./pxt-dialog-filter-custom.component.scss']\n})\nexport class PxtDialogFilterCustomComponent implements OnInit {\n\n  @Input() filters: any;\n  @Input() model: any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  \n  displayedColumns = ['codigo', 'descricao'];\n  dataSource = new MatTableDataSource<any>();\n\n  constructor(private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogFilterCustomComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public http: RequestBaseService) { }\n\n  ngOnInit() {\n  }\n  //Search.\n  search() {\n    let params = new Map<any, any>();\n    if (this.filters !== undefined) {\n      Object.keys(this.filters).forEach(key => {\n        if (this.filters[key] != undefined) {\n          params.set(key, this.filters[key]);\n        }\n      });\n    }\n    this.http.doGet(this.model.constructor.name, params).subscribe(result => {\n      this.dataSource.data = result;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  };\n\n  //Row Selected\n  selectRow(row) {\n    this.dialogRef.close(row);\n  };\n\n  //Close\n  close() {\n    this.dialogRef.close(undefined);\n  };\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { PxtDialogFilterCustomComponent } from './pxt-dialog-filter-custom.component';\nimport { MaterialAngularModule } from '../../material-angular/material-angular.module';\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material';\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtDialogFilterCustomComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  exports:[PxtDialogFilterCustomComponent],\n  entryComponents:[PxtDialogFilterCustomComponent],\n  providers: [\n    {provide: MAT_DIALOG_DATA, useValue: {}},\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}}\n  ]\n})\nexport class PxtDialogFilterCustomModule { }\n","import { pxtEnumTagHtml } from \"../enum/pxt-enum-tag-html\";\r\nimport { pxtEnumTypeTag } from \"../enum/pxt-enum-type-tag\";\r\n\r\n\r\nexport class pxtFields {\r\n    type: pxtEnumTypeTag;\r\n    value: any;\r\n    tag: pxtEnumTagHtml;\r\n}\r\n","export enum pxtEnumTagHtml {\r\n    Input = 1,\r\n    Combo = 2,\r\n    Filter = 3,\r\n    Checkbox = 4\r\n}","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'pxt-upload-file',\n  templateUrl: './pxt-upload-file.component.html',\n  styleUrls: ['./pxt-upload-file.component.css']\n})\nexport class PxtUploadFileComponent implements OnInit {\n\n  @Input() placeholder :string;\n  @Output() fileSelected: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  arrayImages :FileReader;\n\n  ngOnInit() {\n  }\n  onChangeImagem(event) {\n    if (event != undefined) {\n      let imagem: File = event;\n      this.placeholder= imagem.name;\n    return this.fileSelected.next(imagem);\n    }\n\n  };\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtUploadFileComponent } from './pxt-upload-file.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtUploadFileComponent],\n  exports:[PxtUploadFileComponent],\n  entryComponents : [PxtUploadFileComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class PxtUploadFileModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { CommonModule } from '@angular/common';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\n\ndeclare var $: any;\n@Component({\n  selector: 'pxt-gallery',\n  templateUrl: './pxt-gallery.component.html',\n  styleUrls: ['./pxt-gallery.component.css']\n})\nexport class PxtGalleryComponent implements OnInit {\n\n  galleryOptions: NgxGalleryOptions[];\n  @Input() galleryImages: NgxGalleryImage[];\n  @Input() width: any = \"100%\";\n  @Input() height: any = '400px';\n  constructor() {\n  }\n  ngOnInit() {\n\n    this.galleryOptions = [\n      {\n        width: this.width,\n        height: this.height,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide\n      },\n      // max-width 800\n      {\n        breakpoint: 800,\n        width: this.width,\n        height: this.height,\n        imagePercent: 80,\n        thumbnailsPercent: 20,\n        thumbnailsMargin: 20,\n        thumbnailMargin: 20\n      },\n      {\n        breakpoint: 400,\n        preview: false\n      }\n    ];\n  }\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtGalleryComponent } from './pxt-gallery.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/compiler/src/core';\n\n@NgModule({\n  imports: [CommonModule, MaterialAngularModule, NgxGalleryModule],\n  declarations: [PxtGalleryComponent],\n  exports: [PxtGalleryComponent],\n  entryComponents: [PxtGalleryComponent]\n})\nexport class PxtGalleryModule { }\n"]}