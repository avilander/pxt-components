{"version":3,"file":"pxt-shared-components.js.map","sources":["ng://pxt-shared-components/src/app/directives/pxt-content-body.ts","ng://pxt-shared-components/src/app/services/pxt-app-components.service.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.component.ts","ng://pxt-shared-components/src/app/modules/material-angular/material-angular.module.ts","ng://pxt-shared-components/src/app/services/pxt-http/config.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/http-helper-service.ts","ng://pxt-shared-components/src/environments/environment.ts","ng://pxt-shared-components/src/app/services/pxt-http/token.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/pxt-http.service.ts","ng://pxt-shared-components/src/app/services/pxt-http/request-base.service.ts","ng://pxt-shared-components/src/app/pipes/uppercase-first.ts","ng://pxt-shared-components/src/app/util/constants.ts","ng://pxt-shared-components/src/app/pipes/date-format.pipe.ts","ng://pxt-shared-components/src/app/pipes/date-time-format.pipe.ts","ng://pxt-shared-components/src/app/pipes/controller.pipe.ts","ng://pxt-shared-components/src/app/pipes/pipes.module.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app-menu-item/pxt-app-menu-item.component.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app-menu-item/pxt-app-menu-item.module.ts","ng://pxt-shared-components/src/app/directives/HashDirective.ts","ng://pxt-shared-components/src/app/services/authority.service.ts","ng://pxt-shared-components/src/app/models/pxtConfiguration.ts","ng://pxt-shared-components/src/app/visible-in-roles.guard.ts","ng://pxt-shared-components/src/app/modules/pxt-app/pxt-app.module.ts","ng://pxt-shared-components/src/app/fields/pxt-input-field.ts","ng://pxt-shared-components/src/app/fields/pxt-checkbox-field.ts","ng://pxt-shared-components/src/app/fields/pxt-date-field.ts","ng://pxt-shared-components/src/app/fields/pxt-filter-field.ts","ng://pxt-shared-components/src/app/fields/pxt-radiobutton-field.ts","ng://pxt-shared-components/src/app/fields/pxt-select-field.ts","ng://pxt-shared-components/src/app/fields/pxt-filter-custom-field.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input/pxt-input.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-button/pxt-button.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-date/pxt-date.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-checkbox/pxt-checkbox.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-radiobutton/pxt-radiobutton.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-select/pxt-select.component.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.component.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input-filter/pxt-input-filter.component.ts","ng://pxt-shared-components/src/app/directives/dynamic-field-directive.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input/pxt-input.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-button/pxt-button.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-date/pxt-date.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-select/pxt-select.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-radiobutton/pxt-radiobutton.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-checkbox/pxt-checkbox.module.ts","ng://pxt-shared-components/src/app/directives/dynamic-field-directive-dialog.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.module.ts","ng://pxt-shared-components/src/app/modules/shared/components/pxt-input-filter/pxt-input-filter.module.ts","ng://pxt-shared-components/src/app/modules/pxt-content/pxt-content.module.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/model/pxt-submenus.model.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/enum/option-submenu.enum.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.component.ts","ng://pxt-shared-components/src/app/modules/pxt-submenus/pxt-submenus.module.ts","ng://pxt-shared-components/src/app/modules/pxt-datepicker/pxt-datepicker.component.ts","ng://pxt-shared-components/src/app/modules/pxt-datepicker/pxt-datepicker.module.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog.component.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog.module.ts","ng://pxt-shared-components/src/app/modules/pxt-filter/pxt-filter.component.ts","ng://pxt-shared-components/src/app/modules/pxt-filter/pxt-filter.module.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter-custom/pxt-dialog-filter-custom.component.ts","ng://pxt-shared-components/src/app/modules/pxt-dialog/pxt-dialog-filter-custom/pxt-dialog-filter-custom.module.ts","ng://pxt-shared-components/src/app/models/pxt-fields-model.ts","ng://pxt-shared-components/src/app/enum/pxt-enum-tag-html.ts","ng://pxt-shared-components/src/app/modules/pxt-upload-file/pxt-upload-file.component.ts","ng://pxt-shared-components/src/app/modules/pxt-upload-file/pxt-upload-file.module.ts","ng://pxt-shared-components/src/app/modules/pxt-gallery/pxt-gallery.component.ts","ng://pxt-shared-components/src/app/modules/pxt-gallery/pxt-gallery.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ad-pxt-content]',\r\n})\r\nexport class PxtContentBody {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class PxtAppComponentService {\r\n    private submenusItens: Subject<any> = new Subject<any>();\r\n    public readonly submenusItensObservable: Observable<any> = this.submenusItens.asObservable();\r\n\r\n    private _loadComponent: Subject<any> = new Subject<any>();\r\n    public readonly loadComponentObservable: Observable<any> = this._loadComponent.asObservable();\r\n\r\n    private _setUserLogged: Subject<any> = new Subject<any>();\r\n    public readonly userLoggedObservable: Observable<any> = this._setUserLogged.asObservable();\r\n\r\n    private _setInfoInit: Subject<any> = new Subject<any>();\r\n    public readonly infoInitial: Observable<any> = this._setInfoInit.asObservable();\r\n\r\n    setSubmenus(routes: any) {\r\n        this.submenusItens.next(routes);\r\n    }\r\n\r\n    setInitialInfo(infoInitial) {\r\n        this._setInfoInit.next(infoInitial)\r\n    }\r\n\r\n    loadComponent(component: any) {\r\n        this._loadComponent.next(component);\r\n    }\r\n\r\n    setUser(user: any) {\r\n        this._setUserLogged.next(user);\r\n    }\r\n\r\n}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, Input, ViewChild, ComponentFactoryResolver, Inject, ViewContainerRef } from '@angular/core';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { Routes } from '@angular/router';\nimport { PxtApp } from './pxt-app';\nimport { PxtAppModel } from './model/pxt-app.model';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { AdComponent } from '../../interfaces/ad.component';\nimport { MatMenu, MatMenuTrigger } from '@angular/material';\nimport { group } from '@angular/animations';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'pxt-app',\n  templateUrl: './pxt-app.component.html',\n  styleUrls: ['./pxt-app.component.scss']\n\n})\nexport class PxtAppComponent {\n\n  //Properties\n  routes: any[] = [];\n  groups: any[] = [];\n  menus: any[] = [];\n  system: String = \"SYSTEM NAME\"\n  urlImg: string = 'http://imagensdsv.peixoto.com.br/auth/mini_logo.png';\n  menuSelected = \"\";\n  usuerLogged = \"Loogged user\";\n  menusHtml: SafeHtml;\n  result: Observable<boolean>;\n  _mobileQueryListener: () => void;\n  mobileQuery: MediaQueryList;\n  shouldRun = true;\n  @Input() matMenu: MatMenu;\n  @ViewChild('menus', { read: ViewContainerRef }) subContainer1: ViewContainerRef;\n  @ViewChild('contextMenuTrigger', { read: MatMenuTrigger }) contextMenuTrigger: MatMenuTrigger;\n  currentAdIndex = -1;\n  @ViewChild(PxtContentBody) adHost: PxtContentBody;\n  interval: any;\n  menusReceived : any[];\n  \n  //Constructor\n  constructor(changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(PxtAppComponentService) public pxtAppComponentService\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n    this.result = pxtAppComponentService.infoInitial.subscribe(infoInitial => {\n      if (infoInitial != undefined) {\n        this.usuerLogged = infoInitial.userLogged;\n        this.system = infoInitial.system;\n        this.menusReceived = infoInitial.sideBarMenus;\n        this.menus = infoInitial.sideBarMenus;\n        this.prepareMenu();\n      }\n    });\n    this.subscribeComponent();\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n    clearInterval(this.interval);\n  }\n\n  // Include of components in the application body\n  loadComponent(route: any, adHost) {\n    this.menuSelected = route.menuText;\n    let adItem = route.menuSource;\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(adItem.component);\n    let viewContainerRef = adHost.viewContainerRef;\n    viewContainerRef.clear();\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n  }\n\n  // Subscription to the service responsible for including components in the body of the application\n  subscribeComponent() {\n    this.pxtAppComponentService.loadComponentObservable.subscribe(componentObj => {\n      var arrayAux = this.menusReceived.filter(x=>x.menuSource != undefined && x.menuSource.component === componentObj.component);\n      if(arrayAux.length == 1){\n        this.menuSelected = arrayAux[0].menuText;\n      }\n      let componentFactory = this.componentFactoryResolver.resolveComponentFactory(componentObj.component);\n      let viewContainerRef = this.adHost.viewContainerRef;\n      viewContainerRef.clear();\n      let componentRef = viewContainerRef.createComponent(componentFactory);\n      (<AdComponent>componentRef.instance).data = componentObj.data;\n    });\n  }\n\n  // Responsible for call method \"loadcomponents()\" informing parameters\n  selectItemMenu(nav) {\n    this.loadComponent(nav, this.adHost);\n  }\n\n  // Method responsible for preparing application menus;\n  prepareMenu() {\n    let arrayAux: any[];\n    arrayAux = this.menus.filter(x => x.menuType == \"group\" && x.menuParent == \"\");\n    var arrayAuxGroup = this.menus.filter(x => x.menuType == \"group\" && x.menuParent !== \"\");\n    var arrayAuxItem = this.menus.filter(x => x.menuType == \"item\" && x.menuParent !== \"\");\n\n    //add itens in groups\n    arrayAuxItem.forEach(item => {\n      var arrayTmp = arrayAuxGroup.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n        }\n        arrayTmp[0].childs.push(item);\n      };\n    });\n    //add groups in groups\n    arrayAuxGroup.forEach(item => {\n      var arrayTmp = arrayAuxGroup.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n        }\n        arrayTmp[0].childs.push(item)\n      };\n    });\n    //add groups in super-groups\n    arrayAuxGroup.forEach(item => {\n      var arrayTmp = arrayAux.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n          arrayTmp[0].childs.push(item);\n        } else {\n          arrayTmp[0].childs.push(item);\n        }\n      };\n    });\n\n    //add itens in super-groups\n    arrayAuxItem.forEach(item => {\n      var arrayTmp = arrayAux.filter(x => x.menuId == item.menuParent);\n      if (arrayTmp.length == 1) {\n        if (arrayTmp[0].childs == undefined) {\n          arrayTmp[0].childs = [];\n        }\n        arrayTmp[0].childs.push(item);\n      };\n    });\n    this.menus = arrayAux;\n  }\n}\n","import './../../../polyfills';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatLineModule,\n  MatCommonModule,\n  MatOptionModule,\n  MatFormFieldModule,\n  MatPseudoCheckboxModule,\n  \n} from '@angular/material';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatIconModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    MatCardModule,MatIconModule,MatLineModule,\n    MatListModule,MatSortModule,MatTabsModule,MatTreeModule,\n    MatBadgeModule,MatChipsModule,MatInputModule,MatRadioModule,\n    MatTableModule,MatButtonModule,MatCommonModule,MatDialogModule,\n    MatOptionModule,MatRippleModule,MatSelectModule,MatSliderModule,\n    MatDividerModule,MatSidenavModule,MatStepperModule,MatToolbarModule,\n    MatToolbarModule,MatTooltipModule,MatCheckboxModule,MatGridListModule,\n    MatSnackBarModule,MatExpansionModule,MatFormFieldModule,MatPaginatorModule,\n    MatDatepickerModule,MatNativeDateModule,MatBottomSheetModule,MatProgressBarModule,\n    MatSlideToggleModule,MatAutocompleteModule,MatButtonToggleModule,MatPseudoCheckboxModule,\n    MatProgressSpinnerModule, BrowserModule, CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatIconModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    MatMenuModule,MatCardModule,MatIconModule,MatLineModule,\n    MatListModule,MatSortModule,MatTabsModule,MatTreeModule,\n    MatBadgeModule,MatChipsModule,MatInputModule,MatRadioModule,\n    MatTableModule,MatButtonModule,MatCommonModule,MatDialogModule,\n    MatOptionModule,MatRippleModule,MatSelectModule,MatSliderModule,\n    MatDividerModule,MatSidenavModule,MatStepperModule,MatToolbarModule,\n    MatToolbarModule,MatTooltipModule,MatCheckboxModule,MatGridListModule,\n    MatSnackBarModule,MatExpansionModule,MatFormFieldModule,MatPaginatorModule,\n    MatDatepickerModule,MatNativeDateModule,MatBottomSheetModule,MatProgressBarModule,\n    MatSlideToggleModule,MatAutocompleteModule,MatButtonToggleModule,MatPseudoCheckboxModule,\n    MatProgressSpinnerModule, BrowserModule, CommonModule,\n    MatNativeDateModule,\n    ReactiveFormsModule\n  ]\n})\nexport class MaterialAngularModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { map, filter, scan } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  config: any;\r\n  constructor(\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  load(url: string) {\r\n    const injectHttp = this.injector.get(HttpClient);\r\n    return new Promise((resolve) => {\r\n      injectHttp.get(url).pipe(\r\n        map(res => res)\r\n      ).subscribe(config => {\r\n          this.config = config;\r\n          resolve();\r\n        });\r\n    });\r\n  }\r\n\r\n  getConfiguration(element: string, dataList?: string) {\r\n    if (!dataList) {\r\n      const urlWithElement = this.config[element];\r\n      return this.verifyUrl(urlWithElement);\r\n    } else {\r\n      const urlWithDataList = this.config[dataList][element];\r\n      return this.verifyUrl(urlWithDataList);\r\n    }\r\n  }\r\n\r\n  verifyUrl(typeModel: any) {\r\n    if (typeModel.includes('/', typeModel.length - 1)) {\r\n      const typeRelease = typeModel;\r\n      return typeRelease;\r\n    } else {\r\n      const newType = typeModel + '/';\r\n      return newType;\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nimport { Http } from '@angular/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { map, filter, scan } from 'rxjs/operators';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable()\r\nexport class HttpHelperService {\r\n  constructor(private configService: ConfigService) {\r\n  }\r\n  public getApi() {\r\n    return this.configService.getConfiguration('API', 'PATH');\r\n  };\r\n\r\n  public getApiSgi() {\r\n    return this.configService.getConfiguration('API', 'SGI');\r\n  };\r\n\r\n  public getApiUrl (name, url) {\r\n    return this.configService.getConfiguration(url, name);\r\n  }\r\n}","\nexport const environment = {\n  production: true,\n  envName: 'dev',\n  version: '0.0.1',\n  CONFIG_FILE: 'assets/config/env.json',\n  esbApiPxt : \"http://esbdsv.peixoto.com.br/sge/\",\n  system: {\n    id: 108,\n    prex: \"PORCRP\"\n  }\n};\n\n","import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\nimport { Observable } from 'rxjs';\nimport { Http, RequestOptions } from '@angular/http';\nimport { environment } from '../../../environments/environment';\n\nvar system = environment.system;\n\n@Injectable()\nexport class TokenService {\n\n  constructor() {\n  }\n  getAccessToken() {\n    const token = localStorage.getItem('token');\n    if (token != null) {\n      return token;\n    }\n  }\n  setTokenStorage(res: any) {\n    localStorage.setItem('token', JSON.stringify(res));\n  }\n  removeTokenStorage() {\n    var token =  localStorage.getItem('token')\n    const decoded = <any> jwt_decode(token);\n    localStorage.removeItem(system.id+system.prex+decoded.sub);\n  }\n  \n  deleteToken() {\n    this.removeTokenStorage();\n  }\n\n  tokenExists(): boolean {\n    return localStorage.getItem('token') !== null && localStorage.getItem('token') !== undefined && localStorage.getItem('token') !== '';\n  }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { Inject, forwardRef, Injectable, Injector } from '@angular/core';\nimport { Headers, Http, RequestOptions, Response, XHRBackend, RequestOptionsArgs, Request } from '@angular/http';\nimport { map, filter, scan, finalize, catchError } from 'rxjs/operators';\n\nimport { environment } from './../../../environments/environment';\nimport { TokenService } from './token.service';\n//import { HttpHelperService } from './HttpHelperService';\n\n@Injectable()\nexport class PxtHttpService extends Http {\n\n  constructor(private backend: XHRBackend,\n    options: RequestOptions,\n    private injector: Injector,\n    //private urlHelper: HttpHelperService,\n    private tokenService: TokenService\n  ) {\n    super(backend, options);\n  }\n\n  urlRequest: any;\n  origRequest: Request;\n  isUnathourized = false;\n\n  /**\n   *  Control Services\n   */\n  getHeaders() {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Cache-Control', 'no-store');\n    headers.append('Pragma', 'no-cache');\n    return headers;\n  }\n\n  handleResponse(observable: Observable<Response>, url?: string) {\n\n    let result = null;\n    const orig = this.origRequest;\n    result = observable.pipe(\n      catchError((error) => {\n        return this.onCatch(error);\n      }),\n      map(res => {\n        return this.onResult(res);\n      })\n    );\n    return result;\n  }\n  onResult(res) {\n    if (res.status == 201) {\n      return res._body;\n    } else {\n      return res.json();\n    }\n  }\n\n  doGet(api: string, loader?: boolean) {\n    // this.preLoaderService.update(true);\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.get(url, requestOptions));\n  }\n\n  doPost(endpoint: string, params?: any) {\n    const url = endpoint;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.post(url, params, requestOptions), url);\n  }\n\n  doPut(api: string, params?: any) {\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.put(url, params, requestOptions), url);\n  }\n\n  doPath(api: string, params?: any, loader?: boolean) {\n    const url = api;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n    return this.handleResponse(super.patch(url, params, requestOptions), url);\n  }\n\n  doDelete(api: string, params: any, loader?: boolean) {\n    const url = api;\n    const urlParam = url + '/' + params;\n    const requestOptions = new RequestOptions({ headers: this.getHeaders() });\n\n    return this.handleResponse(super.delete(urlParam, requestOptions), urlParam);\n  }\n\n\n  request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\n    options = this.requestArgs(options);\n    if (typeof url === 'string') {\n      this.urlRequest = url;\n    } else {\n      this.urlRequest = url.url;\n      this.origRequest = url;\n    }\n\n    if (this.urlRequest !== environment.CONFIG_FILE) {\n      const token = this.tokenService.getAccessToken();\n      if (token != null) {\n        this.origRequest.headers.set('Authorization', 'Bearer '.concat(token));\n        options.headers.set('Authorization', 'Bearer '.concat(token));\n      }\n    }\n\n    url = this.origRequest;\n    return super.request(url, options);\n  }\n\n  private requestArgs(options: RequestOptionsArgs): RequestOptionsArgs {\n    if (options == null) {\n      options = new RequestOptions({ headers: this.getHeaders() });\n    }\n    return options;\n  }\n  public onCatch(error: any) {\n    switch (error.status) {\n      case 401:\n        if (!this.isUnathourized) {\n          console.log(401);\n          //this.tokenService.removeTokenStorage();\n          //window.location.href = environment.esbApiPxt + \"?erro=401\";\n        }\n        this.isUnathourized = true;\n        break;\n      case 400:\n        console.log(\"error 400\");\n        // this.tokenService.removeTokenStorage();\n        //window.location.href = environment.esbApiPxt + \"?erro=400\";\n        break;\n      case 404:\n        console.log(\"error 400\");\n        //this.tokenService.removeTokenStorage();\n        //window.location.href = environment.esbApiPxt + \"?erro=404\";\n        break;\n      default:\n        console.log(\"error 400\");\n        // window.location.href = environment.esbApiPxt + \"?erro=0\";\n        break;\n    }\n    return Observable.throw(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PxtHttpService } from './pxt-http.service';\nimport { HttpHelperService } from './http-helper-service';\nimport { TokenService } from './token.service';\nimport { HttpClient, HttpRequest, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class RequestBaseService {\n\n  public model: any;\n  public urlService: string;\n  public urlServiceAuto: string;\n\n  constructor(private httpService: PxtHttpService,\n    private helper: HttpHelperService,\n    private tokenService: TokenService,\n    public _httpClient: HttpClient) {\n    this.urlService = helper.getApi();\n  }\n  load(): any {\n    return this.httpService.doGet(this.urlServiceAuto);\n  };\n  save(model?: any): any {\n    return this.httpService.doPost(this.urlServiceAuto, model);\n  };\n  delete(id): any {\n    return this.httpService.doDelete(this.urlServiceAuto, id);\n  };\n\n  doGet(path: string, params?: Map<any, any>) {\n    let url\n    if (params !== undefined && params.size > 0) {\n      url = path + this.buildRequestParams(params);\n    } else {\n      url = path;\n    }\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doGet(path);\n    } else {\n      return this.httpService.doGet(this.urlService + url);\n    }\n  };\n\n  doPost(path: string, model?: any) {\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doPost(path, model);\n    } else {\n      return this.httpService.doPost(this.urlService + path, model);\n    };\n  };\n\n  doPut(path: string, model?: any) {\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doPut(path, model);\n    } else {\n      return this.httpService.doPut(this.urlService + path, model);\n    }\n  };\n\n  doDelete(path: string, id: number) {\n    if (path.indexOf('http') > -1) {\n      return this.httpService.doDelete(path, id);\n    } else {\n      return this.httpService.doDelete(this.urlService + path, id);\n    };\n  };\n\n  uploadImage(path, params?: Map<any, any>): any {\n\n    if (path.indexOf('http') <= -1) {\n      path = this.urlService + path ;\n    };\n\n    const header = {\n      'Authorization': 'Bearer '.concat(this.tokenService.getAccessToken())\n    };\n    const httpOptions = new HttpHeaders(header);\n    const token = this.tokenService.getAccessToken();\n    const formdata = this.setParamsFormdata(params);\n    const req = new HttpRequest('POST', path, formdata, {\n      headers: httpOptions,\n      reportProgress: true,\n      responseType: 'text'\n    });\n    return this._httpClient.request(req);\n  }\n\n\n  setParamsFormdata(params: Map<any, any>): FormData {\n    const formdata: FormData = new FormData();\n    let primeiraIteracao = true;\n    params.forEach((value, key) => {\n      formdata.append(key, value);\n    });\n    return formdata;\n  };\n\n  private buildRequestParams(params: Map<any, any>): string {\n    let final = '';\n    let primeiraIteracao = true;\n    params.forEach((value, key) => {\n      if (primeiraIteracao) {\n        final += '?' + key + '=' + value;\n        primeiraIteracao = false;\n      } else {\n        final += '&' + key + '=' + value;\n      }\n    });\n    return final;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, UpperCasePipe } from \"@angular/common\";\r\n\r\n@Pipe({\r\n  name: 'uppercaseFirst'\r\n})\r\nexport class UpercaseFirst extends UpperCasePipe implements PipeTransform {\r\n  transform(text: any, args?: any): any {\r\n    if (text != undefined) {\r\n      var words = text.toLowerCase().split(\" \");\r\n      for (var a = 0; a < words.length; a++) {\r\n        if (words[a].length > 3) {\r\n          var w = words[a];\r\n          words[a] = w[0].toUpperCase() + w.slice(1);\r\n        }\r\n      }\r\n      return words.join(\" \");\r\n    }\r\n  }\r\n}","export class Constants {\r\n    static readonly DATE_FMT = 'dd/MM/yyyy';\r\n    static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} - hh:mm:ss a`;\r\n  }","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { Constants } from \"../util/constants\";\r\n\r\n@Pipe({\r\n    name: 'dateFormat'\r\n  })\r\n  export class DateFormatPipe extends DatePipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n      return super.transform(value, Constants.DATE_FMT);\r\n    }\r\n  }","import { DatePipe } from \"@angular/common\";\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { Constants } from \"../util/constants\";\r\n\r\n\r\n@Pipe({\r\n  name: 'dateTimeFormat'\r\n})\r\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    var datePipe = new DatePipe(\"en-US\");\r\n    return  datePipe.transform(value, Constants.DATE_TIME_FMT);\r\n  }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DatePipe, UpperCasePipe } from \"@angular/common\";\r\n\r\n@Pipe({\r\n  name: 'controllerPipe'\r\n})\r\nexport class ControllerPipe implements PipeTransform {\r\n  transform(text: any, args?: any): any {\r\n    if (text != undefined) {\r\n      var words = text;\r\n      var aux = \"\";\r\n      for (var a = 0; a < words.length; a++) {\r\n        if (a == 0) {\r\n            aux = words[a].toLowerCase();\r\n        }\r\n        else{\r\n            aux = aux + words[a] ;\r\n        }\r\n      }\r\n      return aux;\r\n    }\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UpercaseFirst } from './uppercase-first';\r\nimport { DateFormatPipe } from './date-format.pipe';\r\nimport { DateTimeFormatPipe } from './date-time-format.pipe';\r\nimport { ControllerPipe } from './controller.pipe';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [UpercaseFirst, DateFormatPipe,DateTimeFormatPipe, ControllerPipe ],\r\n    exports: [UpercaseFirst, DateFormatPipe,DateTimeFormatPipe, ControllerPipe ]\r\n})\r\nexport class PipeModule { }\r\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { PxtAppComponentService } from '../../../services/pxt-app-components.service';\n\n\n@Component({\n  selector: 'pxt-app-menu-item',\n  templateUrl: './pxt-app-menu-item.component.html',\n  styleUrls: ['./pxt-app-menu-item.component.css']\n})\nexport class PxtAppMenuItemComponent implements OnInit {\n\n  @Input() items: any[];\n  @ViewChild('childMenu') public childMenu;\n\n  constructor(@Inject(PxtAppComponentService) public pxtAppComponentService) { }\n  ngOnInit() {\n  }\n\n  loadComponent(child) {\n    this.pxtAppComponentService.loadComponent({component: child.menuSource.component, data:\"\"});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtAppMenuItemComponent } from './pxt-app-menu-item.component';\nimport { PipeModule } from '../../../pipes/pipes.module';\nimport { MaterialAngularModule } from '../../material-angular/material-angular.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtAppMenuItemComponent],\n   exports: [PxtAppMenuItemComponent],\n  entryComponents: [ PxtAppMenuItemComponent ]\n  \n})\nexport class PxtAppMenuItemModule { }\n","import { Directive, Input, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[hash]',\r\n  })\r\n  export class HashDirective  {\r\n    @Input() hash: string;\r\n  \r\n    constructor(public vcRef: ViewContainerRef) {}\r\n  }","import { Injectable } from '@angular/core';\nimport { VisibleInRolesGuard } from '../visible-in-roles.guard';\nimport { PxtHttpService } from '../services/pxt-http/pxt-http.service';\nimport { HttpHelperService } from '../services/pxt-http/http-helper-service';\n@Injectable()\nexport class AuthorityService {\n  constructor(private _http: PxtHttpService, private _httpHelper: HttpHelperService) { }\n\n  buscarAuthorities (codigoSistema) {\n    const url = this._httpHelper.getApiSgi() + \"permissoes/buscarPerfilSistema/?\";\n    const params = \"codigoSistema=\" + codigoSistema;\n    return this._http.doGet(url + params);\n  }\n}","export const pxtConfiguration = {systemId: 104 ,systemPrex: \"SGE_NEW\"}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpHelperService } from './services/pxt-http/http-helper-service';\r\nimport { AuthorityService } from './services/authority.service';\r\nimport { pxtConfiguration } from \"./models/pxtConfiguration\"\r\n\r\n@Injectable()\r\nexport class VisibleInRolesGuard implements CanActivate {\r\n  constructor(private router: Router, private httpHelper: HttpHelperService, private authorityService: AuthorityService) { }\r\n  canActivate(next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const token = localStorage.getItem('token');\r\n    if (token !== 'undefined' && token !== '' && token !== null) {\r\n      try {\r\n        const decoded = <any>jwt_decode(token);\r\n        var tokenAuthorities = localStorage.getItem(pxtConfiguration.systemId + pxtConfiguration.systemPrex + decoded.sub);\r\n        if (tokenAuthorities === 'undefined' || tokenAuthorities === '' || tokenAuthorities === null) {\r\n          this.authorityService.buscarAuthorities(pxtConfiguration.systemId).subscribe(data => {\r\n            localStorage.setItem(pxtConfiguration.systemId + pxtConfiguration.systemPrex + decoded.sub, data.authority)\r\n          });\r\n        }\r\n      }\r\n      catch (err) {\r\n        //window.location.href = this.httpHelper.getUrlAutenticacao() + \"?erro=401\";\r\n        console.log(err);\r\n        return false;\r\n      }\r\n    } else {\r\n      // window.location.href = this.httpHelper.getUrlAutenticacao() + \"?erro=401\";\r\n      console.log(\"Token Undefined\");\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtAppComponent } from './pxt-app.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { ConfigService } from '../../services/pxt-http/config.service';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { PxtHttpService } from '../../services/pxt-http/pxt-http.service';\nimport { environment } from '../../../environments/environment';\nimport { PipeModule } from '../../pipes/pipes.module';\nimport { MatMenuModule } from '@angular/material';\nimport { PxtAppMenuItemModule } from './pxt-app-menu-item/pxt-app-menu-item.module';\nimport { HashDirective } from '../../directives/HashDirective';\nimport { VisibleInRolesGuard } from '../../visible-in-roles.guard';\nimport { AuthorityService } from '../../services/authority.service';\nimport { TokenService } from '../../services/pxt-http/token.service';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule,\n    MatMenuModule,\n    PxtAppMenuItemModule,\n    ToastrModule.forRoot({progressBar: true})    \n  ],\n  declarations: [PxtAppComponent, PxtContentBody, HashDirective],\n  exports: [PxtAppComponent],\n  providers: [PxtAppComponentService, PxtHttpService, \n    RequestBaseService, HttpHelperService, ConfigService,     \n    VisibleInRolesGuard,TokenService,AuthorityService]\n})\nexport class PxtAppModule { }\n","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtInputField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtCheckboxField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    filters?: any;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\n\r\nexport class pxtDateField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    type?: string;\r\n    validations?: Validator[];\r\n    disabled: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtFilterField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    className?: any;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}\r\n","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\n\r\nexport class pxtRadioButtonField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    options?: string[];\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtSelectField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    className?: any;\r\n    options?: string[];\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    validations?: Validator[];\r\n    disabled?: boolean;\r\n    parameter?: any; \r\n}","import { PxtFieldConfig } from \"../interfaces/pxt-field-config\";\r\nimport { Validator } from \"../interfaces/field.interface\";\r\n\r\nexport class pxtfilterCustomField implements PxtFieldConfig {\r\n    position: number;\r\n    label?: string;\r\n    name?: string;\r\n    className?: any;\r\n    inputType?: string;\r\n    filters?: any;\r\n    type: string;\r\n    value?: any;\r\n    colspan?: number;\r\n    disabled?: boolean;\r\n    validations?: Validator[];\r\n}","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { AdComponent } from '../../interfaces/ad.component';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { FieldConfig } from '../../interfaces/field.interface';\nimport { PxtFieldConfig } from '../../interfaces/pxt-field-config';\nimport { PxtInputComponent } from '../shared/components/pxt-input/pxt-input.component';\nimport { pxtInputField } from '../../fields/pxt-input-field';\nimport { pxtCheckboxField } from '../../fields/pxt-checkbox-field';\nimport { pxtDateField } from '../../fields/pxt-date-field';\nimport { pxtFilterField } from '../../fields/pxt-filter-field';\nimport { pxtRadioButtonField } from '../../fields/pxt-radiobutton-field';\nimport { pxtSelectField } from '../../fields/pxt-select-field';\nimport { pxtfilterCustomField } from '../../fields/pxt-filter-custom-field';\n\n@Component({\n  selector: 'pxt-content-body',\n  templateUrl: './pxt-content.component.html',\n  styleUrls: ['./pxt-content.component.scss']\n})\nexport class PxtContentComponent implements AdComponent {\n  //Properties \n  @Input() data: any;\n  @Input() auto?: boolean;\n  @Input() fields: PxtFieldConfig[] = [];\n  @Input() cols: number = 5;\n  @Input() field: any;\n  colsInitial = 5;\n  @Output() submit: EventEmitter<any> = new EventEmitter<any>();\n\n  public form: FormGroup;\n\n  public get value() {\n    return this.form.value;\n  }\n\n  //Constructor\n  constructor(public fb: FormBuilder) { }\n\n  ngOnInit() {\n\n    if (this.field != undefined){\n    Object.keys(this.field).forEach(key => {\n      switch (this.field[key].constructor.name) {\n\n        //FilterCustom\n        case pxtfilterCustomField.name:\n          var instanceFilterCustom = <pxtfilterCustomField>this.field[key];\n          instanceFilterCustom.type = 'filter';\n          this.fields.push(instanceFilterCustom);\n          break;\n\n        //Input\n        case pxtInputField.name:\n          var instanceInput = <pxtInputField>this.field[key];\n          instanceInput.type = 'input';\n          this.fields.push(instanceInput);\n          break;\n\n        //Checkbox\n        case pxtCheckboxField.name:\n          var instanceCheck = <pxtCheckboxField>this.field[key];\n          instanceCheck.type = 'checkbox';\n          this.fields.push(instanceCheck);\n          break;\n\n        //Date\n        case pxtDateField.name:\n          var instanceDate = <pxtDateField>this.field[key];\n          instanceDate.type = 'date';\n          this.fields.push(instanceDate);\n          break;\n\n        //Filter\n        case pxtFilterField.name:\n          var instanceFilter = <pxtDateField>this.field[key];\n          instanceFilter.type = 'filter';\n          this.fields.push(instanceFilter);\n          break;\n\n        //RadioButton\n        case pxtRadioButtonField.name:\n          var instanceRadio = <pxtDateField>this.field[key];\n          instanceRadio.type = 'radio';\n          this.fields.push(instanceRadio);\n          break;\n\n          \n        //Select\n        case pxtSelectField.name:\n        var instanceSelect = <pxtDateField>this.field[key];\n        instanceSelect.type = 'select';\n        this.fields.push(instanceSelect);\n        break;\n\n        default:\n          break;\n      }\n    });\n  }\n    this.onResize();\n    this.colsInitial = this.cols;\n    this.form = this.createControl();\n  }\n\n  // Method responsible for create control\n  public onSubmit(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.form.valid) {\n\n      this.submit.emit(this.form.value);\n    } else {\n      this.validateAllFormFields(this.form);\n    }\n  }\n\n  // Method responsible for create control\n  public createControl() {\n    const group = this.fb.group({});\n    this.fields.forEach(field => {\n      if (field.type === \"button\") return;\n      const control = this.fb.control(\n        { value: field.value, disabled: field.disabled },\n        this.bindValidations(field.validations || [])\n      );\n      group.addControl(field.name, control);\n    });\n    return group;\n  }\n\n  public bindValidations(validations: any): any {\n    if (validations.length > 0) {\n      const validList = [];\n      validations.forEach(valid => {\n        validList.push(valid.validator);\n      });\n      return Validators.compose(validList);\n    }\n    return null;\n  }\n\n  public validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      control.markAsTouched({ onlySelf: true });\n    });\n  }\n  screenWidth;\n  @HostListener('window:resize', ['$event'])\n  onResize(event?) {\n    this.screenWidth = window.innerWidth;\n    if (this.screenWidth <= 800) {\n      this.cols = 1;\n    } else if (this.screenWidth <= 1100) {\n      this.cols = 3;\n    } else {\n      this.cols = this.colsInitial;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FieldConfig } from '../../../../interfaces/field.interface';\nimport { FormGroup } from '@angular/forms';\nimport { ViewEncapsulation } from '@angular/compiler/src/core';\n\n@Component({\n  selector: 'pxt-input',\n  templateUrl: './pxt-input.component.html',\n  styleUrls: ['./pxt-input.component.scss']\n})\nexport class PxtInputComponent implements OnInit {\n\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FieldConfig } from '../../../../interfaces/field.interface';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'pxt-button',\n  templateUrl: './pxt-button.component.html',\n  styleUrls: ['./pxt-button.component.scss']\n})\nexport class PxtButtonComponent implements OnInit {\n\n  field: FieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n\n}\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\n\n@Component({\n  selector: 'pxt-date',\n  templateUrl: './pxt-date.component.html',\n  styleUrls: ['./pxt-date.component.scss']\n})\nexport class PxtDateComponent implements OnInit {\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'pxt-checkbox',\n  templateUrl: './pxt-checkbox.component.html',\n  styleUrls: ['./pxt-checkbox.component.scss']\n})\nexport class PxtCheckboxComponent implements OnInit {\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'pxt-radiobutton',\n  templateUrl: './pxt-radiobutton.component.html',\n  styleUrls: ['./pxt-radiobutton.component.scss']\n})\nexport class PxtRadiobuttonComponent implements OnInit {\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n  constructor() {}\n  ngOnInit() {}\n\n}\n","import { Component, OnInit, Input, forwardRef, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { RequestBaseService } from '../../../../services/pxt-http/request-base.service';\n\nconst noop = () => {\n};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PxtSelectComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pxt-select',\n  templateUrl: './pxt-select.component.html',\n  styleUrls: ['./pxt-select.component.scss'],\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class PxtSelectComponent implements OnInit, ControlValueAccessor {\n\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Selecione';\n  @Input() model: any;\n  @Input() params: any;\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter<any>();\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.params != undefined && !changes.params.firstChange) {\n      this.params = changes.params.currentValue;\n      this.find();\n    }\n  }\n\n  controller = \"\";\n  auto = false;\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  field: PxtFieldConfig;\n  group: FormGroup;\n\n  option: any;\n\n  options: any[] = [];\n\n  get selectedOption() {\n    return this.option;\n  }\n\n  onBlur() {\n    this.onTouchedCallback();\n  }\n\n  set selectedOption(f: any) {\n    if (f != undefined) {\n      if (f !== this.option) {\n        this.option = f;\n        this.onChangeCallback(f.codigo);\n        this.selectionChange.emit(this.option);\n      }\n    }\n  }\n\n  writeValue(value: any) {\n    this.option = value;\n    this.onChangeCallback(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  constructor(public pxthttp: RequestBaseService) {\n  }\n\n  ngOnInit() {\n    if (this.model != undefined) {\n      this.controller = this.model.constructor.name;\n      this.field = this.model;\n      this.auto = false;\n    } else if (this.field != undefined && this.field.className != undefined) {\n      this.controller = this.field.className.name;\n      this.auto = true;\n    }\n  };\n\n  find() {\n    if (this.controller != undefined) {\n      this.pxthttp.doGet(this.controller, this.params).subscribe(result => {\n        if (this.auto) {\n          this.field.options = result;\n        } else {\n          this.options = result;\n        }\n      });\n    }\n  };\n  ngAfterViewInit() {\n    this.find();\n  };\n}\n\n\n","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { HttpHelperService } from '../../../services/pxt-http/http-helper-service';\nimport { RequestBaseService } from '../../../services/pxt-http/request-base.service';\nimport { PxtFieldConfig } from '../../../interfaces/pxt-field-config';\n\nimport { pxtInputField } from '../../../fields/pxt-input-field';\nimport { pxtCheckboxField } from '../../../fields/pxt-checkbox-field';\nimport { pxtDateField } from '../../../fields/pxt-date-field';\nimport { pxtFilterField } from '../../../fields/pxt-filter-field';\nimport { pxtSelectField } from '../../../fields/pxt-select-field';\nimport { pxtRadioButtonField } from '../../../fields/pxt-radiobutton-field';\nimport { pxtfilterCustomField } from '../../../fields/pxt-filter-custom-field';\nimport { post } from 'selenium-webdriver/http';\n\n\ndeclare var $: any;\n@Component({\n  selector: 'pxt-dialog-filter',\n  templateUrl: './pxt-dialog-filter.component.html',\n  styleUrls: ['./pxt-dialog-filter.component.scss']\n})\nexport class PxtDialogFilterComponent implements OnInit {\n\n  displayedColumns = ['codigo', 'descricao'];\n  dataSource = new MatTableDataSource<any>();\n  controller = \"\";\n  cols = 2;\n  fields: PxtFieldConfig[] = [];\n  fieldsHist: PxtFieldConfig[] = [];\n  auto: boolean;\n  filter = { code: undefined, description: undefined };\n  field: PxtFieldConfig;\n  public form: FormGroup;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  get value() {\n    return this.form.value;\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogFilterComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public helper: HttpHelperService,\n    public http: RequestBaseService) {\n    this.controller = data.controller;\n  }\n  ngOnInit() {\n    this.auto = this.data.auto;\n    if (this.auto) {\n      this.field = this.data.filters;\n      Object.keys(this.field).forEach(key => {\n        switch (this.field[key].constructor.name) {\n          case pxtfilterCustomField.name:\n            var instanceFilterCustom = <pxtfilterCustomField>this.field[key];\n            instanceFilterCustom.type = 'filter';\n            this.fields.push(instanceFilterCustom);\n            this.fieldsHist.push(instanceFilterCustom);\n            break;\n          //Input\n          case pxtInputField.name:\n            var instanceInput = <pxtInputField>this.field[key];\n            instanceInput.type = 'input';\n            this.fields.push(instanceInput);\n            this.fieldsHist.push(instanceInput);\n            break;\n\n          //Checkbox\n          case pxtCheckboxField.name:\n            var instanceCheck = <pxtCheckboxField>this.field[key];\n            instanceCheck.type = 'checkbox';\n            this.fields.push(instanceCheck);\n            this.fieldsHist.push(instanceCheck);\n            break;\n\n          //Date\n          case pxtDateField.name:\n            var instanceDate = <pxtDateField>this.field[key];\n            instanceDate.type = 'date';\n            this.fields.push(instanceDate);\n            this.fieldsHist.push(instanceDate);\n            break;\n\n          //Filter\n          case pxtFilterField.name:\n            var instanceFilter = <pxtDateField>this.field[key];\n            instanceFilter.type = 'filter';\n            this.fields.push(instanceFilter);\n            this.fieldsHist.push(instanceFilter);\n            break;\n\n          //RadioButton\n          case pxtRadioButtonField.name:\n            var instanceRadio = <pxtDateField>this.field[key];\n            instanceRadio.type = 'radio';\n            this.fields.push(instanceRadio);\n            this.fieldsHist.push(instanceRadio);\n            break;\n          //Select\n          case pxtSelectField.name:\n            var instanceSelect = <pxtDateField>this.field[key];\n            instanceSelect.type = 'select';\n            this.fields.push(instanceSelect);\n            this.fieldsHist.push(instanceSelect);\n            break;\n        }\n      });\n      this.fields.sort((a, b) => {\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        return 0;\n      });\n      this.fieldsHist.sort((a, b) => {\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        if (a.position < b.position) return -1;\n        if (a.position > b.position) return 1;\n        return 0;\n      });\n      this.form = this.createControl();\n    }\n    else {\n      if (this.data.displayedColumns != undefined) {\n        this.displayedColumns = this.data.displayedColumns;\n      }\n    }\n  }\n\n  cancelation() {\n    this.dialogRef.close(undefined);\n  }\n  confirmation(event) {\n    this.dialogRef.close(true);\n  }\n\n  //Search.\n  search() {\n    let params = new Map<any, any>();\n    debugger;\n    if (this.data.auto != undefined && this.data.auto) {\n      if (this.form.value !== undefined) {\n        Object.keys(this.form.value).forEach(key => {\n          if (this.form.value[key] != undefined) {\n            params.set(key, this.form.value[key]);\n          }\n        });\n      }\n\n      this.http.doGet(this.controller, params).subscribe(result => {\n        this.dataSource.data = result;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n    } else {\n      if (this.filter.code != undefined && this.filter.code != 0 && this.filter.code != \"\") {\n        params.set(\"codigo\", this.filter.code);\n      }\n      if (this.filter.description != undefined && this.filter.description != \"\") {\n        params.set(\"descricao\", this.filter.description);\n      }\n      this.http.doGet(this.controller, params).subscribe(result => {\n        this.dataSource.data = result;\n      });\n    }\n  };\n\n  selectRow(row) {\n    this.dialogRef.close(row);\n  };\n  // Method responsible for create control\n  createControl() {\n    const group = this.fb.group({});\n    this.fields.forEach(field => {\n      if (field.type === \"button\") return;\n      const control = this.fb.control(\n        { value: field.value, disabled: field.disabled },\n        this.bindValidations(field.validations || [])\n      );\n      group.addControl(field.name, control);\n    });\n    return group;\n  };\n\n  bindValidations(validations: any): any {\n    if (validations.length > 0) {\n      const validList = [];\n      validations.forEach(valid => {\n        validList.push(valid.validator);\n      });\n      return Validators.compose(validList);\n    }\n    return null;\n  };\n\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      control.markAsTouched({ onlySelf: true });\n    });\n  };\n\n  close() {\n    this.dialogRef.close(undefined);\n  };\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n}\n","import { Component, OnInit, Input, forwardRef, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { PxtDialogFilterComponent } from '../../../pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.component';\nimport { PxtFieldConfig } from '../../../../interfaces/pxt-field-config';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\n/*\nconst noop = () => {\n};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PxtInputFilterComponent),\n  multi: true\n};\n*/\n@Component({\n  selector: 'pxt-input-filter',\n  templateUrl: './pxt-input-filter.component.html',\n  styleUrls: ['./pxt-input-filter.component.scss'],\n  //providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class PxtInputFilterComponent implements OnInit {\n  isDisabled = true;\n  auto: boolean;\n  @Input() className :String;\n  @Input() placeholder : String = \" \";\n  @Input() displayedColumns : any[];\n  @Output() onValueCallback: EventEmitter<any> = new EventEmitter();\n  @Input() value :String = \" \";\n   \n  field: PxtFieldConfig;\n  group: FormGroup;\n\n  //private onChangeCallback: (_: any) => void = noop;\n \n  constructor(public dialog: MatDialog) { }\n\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.className != undefined && !changes.className.firstChange) {\n      this.className = changes.className.currentValue;\n    }\n    if (changes.placeholder != undefined && !changes.placeholder.firstChange) {\n      this.placeholder = changes.placeholder.currentValue;\n    }\n\n    if (changes.value != undefined && !changes.value.firstChange) {\n      this.value = changes.value.currentValue;\n    }\n    if (changes.displayedColumns != undefined && !changes.displayedColumns.firstChange) {\n      this.displayedColumns = changes.displayedColumns.currentValue;\n    }\n  }\n\n  ngOnInit() {\n    if (this.field != undefined){\n      this.value = this.field.value;\n    }\n  }\n\n  /*\n  get inputValue() {\n    return this.value;\n  }\n\n  set inputValue(f: any) {\n    if (f != undefined) {\n      if (f !== this.value) {\n        this.value = f;\n        this.onChangeCallback(f);\n      }\n    }\n  }\n*/\n  //Method resposible for open dialog filter\n  openFilter() {\n    if (this.field != undefined && this.field.filters != undefined) {\n      this.auto = true;\n      let dialogRef = this.dialog.open(PxtDialogFilterComponent, {\n        width: '600px',\n        panelClass: 'pxt-dialog',\n        data: { auto: this.auto, filters: this.field.filters, controller: this.field.className, titleDialog: \"Selecione: ( \" + this.field.className + \" )\" }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          this.field.value = result.codigo;\n        }\n      });\n    }else {\n      let dialogRef = this.dialog.open(PxtDialogFilterComponent, {\n        width: '600px',\n        panelClass: 'pxt-dialog',\n        data: {controller: this.className, displayedColumns:this.displayedColumns, titleDialog: \"Selecione: ( \" +  this.className + \" )\" }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          this.value = result.descricao;\n          this.onValueCallback.emit(result);\n        }\n      });\n    }\n  }\n}\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, ViewContainerRef } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { PxtInputComponent } from \"../modules/shared/components/pxt-input/pxt-input.component\";\r\nimport { PxtButtonComponent } from \"../modules/shared/components/pxt-button/pxt-button.component\";\r\nimport { FieldConfig } from \"../interfaces/field.interface\";\r\nimport { PxtDateComponent } from \"../modules/shared/components/pxt-date/pxt-date.component\";\r\nimport { PxtCheckboxComponent } from \"../modules/shared/components/pxt-checkbox/pxt-checkbox.component\";\r\nimport { PxtRadiobuttonComponent } from \"../modules/shared/components/pxt-radiobutton/pxt-radiobutton.component\";\r\nimport { PxtSelectComponent } from \"../modules/shared/components/pxt-select/pxt-select.component\";\r\nimport { PxtInputFilterComponent } from \"../modules/shared/components/pxt-input-filter/pxt-input-filter.component\";\r\n\r\nconst componentMapper = {\r\n  input: PxtInputComponent,\r\n  button: PxtButtonComponent,\r\n  date: PxtDateComponent,\r\n  select: PxtSelectComponent,\r\n  radiobutton: PxtRadiobuttonComponent,\r\n  checkbox: PxtCheckboxComponent,\r\n  filter: PxtInputFilterComponent,\r\n};\r\n@Directive({\r\n  selector: \"[dynamicField]\"\r\n})\r\nexport class DynamicFieldDirective implements OnInit {\r\n  @Input() field: FieldConfig;\r\n  @Input() group: FormGroup;\r\n  componentRef: any;\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) { }\r\n  ngOnInit() {\r\n    const factory = this.resolver.resolveComponentFactory(\r\n      componentMapper[this.field.type]\r\n    );\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.field = this.field;\r\n    this.componentRef.instance.group = this.group;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtInputComponent } from './pxt-input.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtInputComponent],\n  exports:[PxtInputComponent],\n  entryComponents:[PxtInputComponent]\n})\nexport class PxtInputModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtButtonComponent } from './pxt-button.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtButtonComponent],\n  exports:[PxtButtonComponent],\n  entryComponents:[PxtButtonComponent]\n})\nexport class PxtButtonModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtDateComponent } from './pxt-date.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtDateComponent],\n  exports: [PxtDateComponent],\n  entryComponents: [PxtDateComponent]\n})\nexport class PxtDateModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtSelectComponent } from './pxt-select.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  exports:[PxtSelectComponent],\n  entryComponents:[PxtSelectComponent],\n  declarations: [PxtSelectComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class PxtSelectModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtRadiobuttonComponent } from './pxt-radiobutton.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtRadiobuttonComponent],\n  exports: [PxtRadiobuttonComponent],\n  entryComponents: [PxtRadiobuttonComponent]\n})\nexport class PxtRadiobuttonModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtCheckboxComponent } from './pxt-checkbox.component';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtCheckboxComponent],\n  exports: [PxtCheckboxComponent],\n  entryComponents:[PxtCheckboxComponent]\n})\nexport class PxtCheckboxModule { }\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnInit, ViewContainerRef } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { PxtInputComponent } from \"../modules/shared/components/pxt-input/pxt-input.component\";\r\nimport { PxtButtonComponent } from \"../modules/shared/components/pxt-button/pxt-button.component\";\r\nimport { FieldConfig } from \"../interfaces/field.interface\";\r\nimport { PxtDateComponent } from \"../modules/shared/components/pxt-date/pxt-date.component\";\r\nimport { PxtCheckboxComponent } from \"../modules/shared/components/pxt-checkbox/pxt-checkbox.component\";\r\nimport { PxtRadiobuttonComponent } from \"../modules/shared/components/pxt-radiobutton/pxt-radiobutton.component\";\r\nimport { PxtSelectComponent } from \"../modules/shared/components/pxt-select/pxt-select.component\";\r\nimport { PxtInputFilterComponent } from \"../modules/shared/components/pxt-input-filter/pxt-input-filter.component\";\r\n\r\nconst componentMapper = {\r\n  input: PxtInputComponent,\r\n  button: PxtButtonComponent,\r\n  date: PxtDateComponent,\r\n  select: PxtSelectComponent,\r\n  radiobutton: PxtRadiobuttonComponent,\r\n  checkbox: PxtCheckboxComponent,\r\n  filter: PxtInputFilterComponent,\r\n};\r\n@Directive({\r\n  selector: \"[dynamicFieldDialog]\"\r\n})\r\nexport class DynamicFieldDirectiveDialog implements OnInit {\r\n  @Input() field: FieldConfig;\r\n  @Input() group: FormGroup;\r\n  componentRef: any;\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) { }\r\n  ngOnInit() {\r\n    const factory = this.resolver.resolveComponentFactory(\r\n      componentMapper[this.field.type]\r\n    );\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.field = this.field;\r\n    this.componentRef.instance.group = this.group;\r\n  }\r\n}\r\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtDialogFilterComponent } from './pxt-dialog-filter.component';\nimport { MaterialAngularModule } from '../../material-angular/material-angular.module';\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material';\nimport { DynamicFieldDirectiveDialog } from '../../../directives/dynamic-field-directive-dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtDialogFilterComponent,DynamicFieldDirectiveDialog],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  exports:[PxtDialogFilterComponent],\n  entryComponents:[PxtDialogFilterComponent],\n  providers: [\n    {provide: MAT_DIALOG_DATA, useValue: {}},\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}}\n  ]\n})\nexport class PxtDialogFilterModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtInputFilterComponent } from './pxt-input-filter.component';\nimport { PxtDialogFilterModule } from '../../../pxt-dialog/pxt-dialog-filter/pxt-dialog-filter.module';\nimport { MaterialAngularModule } from '../../../material-angular/material-angular.module';\nimport { DynamicFieldDirectiveDialog } from '../../../../directives/dynamic-field-directive-dialog';\nimport { PipeModule } from '../../../../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PxtDialogFilterModule,\n    PipeModule\n  ],\n  declarations: [PxtInputFilterComponent],\n  exports: [PxtInputFilterComponent],\n  entryComponents:[PxtInputFilterComponent]\n})\nexport class PxtInputFilterModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtContentComponent } from './pxt-content.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { templateJitUrl } from '@angular/compiler';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { DynamicFieldDirective } from '../../directives/dynamic-field-directive';\nimport { PxtInputModule } from '../shared/components/pxt-input/pxt-input.module';\nimport { PxtButtonModule } from '../shared/components/pxt-button/pxt-button.module';\nimport { PxtDateModule } from '../shared/components/pxt-date/pxt-date.module';\nimport { PxtSelectModule } from '../shared/components/pxt-select/pxt-select.module';\nimport { PxtRadiobuttonModule } from '../shared/components/pxt-radiobutton/pxt-radiobutton.module';\nimport { PxtCheckboxModule } from '../shared/components/pxt-checkbox/pxt-checkbox.module';\nimport { PxtInputFilterModule } from '../shared/components/pxt-input-filter/pxt-input-filter.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    HttpClientModule,\n    HttpModule,\n    PxtInputModule,\n    PxtButtonModule,\n    PxtDateModule,\n    PxtSelectModule,\n    PxtRadiobuttonModule,\n    PxtCheckboxModule,\n    PxtInputFilterModule\n  ],\n  declarations: [PxtContentComponent, DynamicFieldDirective],\n   exports: [PxtContentComponent],\n  entryComponents: [ PxtContentComponent]\n})\nexport class PxtContentModule { }\n","\r\n\r\n\r\nexport class PxtButton {\r\n    icon: String;\r\n    menu: String;\r\n    enable: Boolean;\r\n    enum : Number;\r\n    constructor(icon: String, menu: String, enable: Boolean, id : number) {\r\n        this.icon = icon;\r\n        this.menu = menu;\r\n        this.enable = enable;\r\n        this.enum = id;\r\n    }\r\n\r\n}\r\n","export enum OptionsSubmenu {\r\n    SALVAR = 1,\r\n    PESQUISAR = 2,\r\n    LIMPAR = 3,\r\n    NOVO = 4,\r\n    VOLTAR= 5,\r\n    EXCLUIR= 6\r\n}","import { Component, ViewChild, ComponentFactoryResolver, Output, Input, EventEmitter } from '@angular/core';\nimport { PxtButton } from './model/pxt-submenus.model';\nimport { OptionsSubmenu } from './enum/option-submenu.enum';\nimport { PxtContentBody } from '../../directives/pxt-content-body';\nimport { PxtAppComponentService } from '../../services/pxt-app-components.service';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { Observable } from 'rxjs';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\nimport { UpercaseFirst } from '../../pipes/uppercase-first';\nimport { ControllerPipe } from '../../pipes/controller.pipe';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'pxt-submenus',\n  templateUrl: './pxt-submenus.component.html',\n  styleUrls: ['./pxt-submenus.component.css']\n})\nexport class PxtSubmenusComponent<T> {\n\n  @Input() model?: T = {} as T;\n  private urlService = \"\";\n\n  @Output() listing: EventEmitter<T[]> = new EventEmitter();\n  @Output() statusSave: EventEmitter<T[]> = new EventEmitter();\n  @Output() statusDelete: EventEmitter<T[]> = new EventEmitter();\n  @Input() controller?: String;\n\n  save() {\n    if (this.validationModel()) {\n      this._serviceBase.save(this.model).subscribe(result => {\n        this.statusSave.emit(result);\n      });\n    }\n  };\n  search() {\n    this._serviceBase.load().subscribe(result => {\n      this.listing.emit(result);\n    });\n  };\n  delete(id) {\n    this._serviceBase.delete(id).subscribe(result => {\n      this.statusDelete.emit(result);\n    });\n  };\n  clear() {\n    this.model = {} as T;\n  };\n  add() {\n    throw new Error(\"Method 'add()' not implemented.\");\n  };\n  back() {\n    throw new Error(\"Method 'back()' not implemented.\");\n  };\n\n  buttons: PxtButton[] = [];\n  enableSave = true;\n  enableBack = true;\n  enableClear = true;\n  enableSearch = true;\n  enableAdd = true;\n  enableDelete = true;\n\n  constructor(public _pxtAppService: PxtAppComponentService,\n    public _serviceBase: RequestBaseService,\n    public helper: HttpHelperService,\n    public notificationService: ToastrService) {\n    this.buttons.push(new PxtButton(\"keyboard_backspace\", \"VOLTAR\", true, OptionsSubmenu.VOLTAR));\n    this.buttons.push(new PxtButton(\"add\", \"SALVAR\", true, OptionsSubmenu.SALVAR));\n    this.buttons.push(new PxtButton(\"add\", \"NOVO\", true, OptionsSubmenu.NOVO));\n    this.buttons.push(new PxtButton(\"delete\", \"LIMPAR\", true, OptionsSubmenu.LIMPAR));\n    this.buttons.push(new PxtButton(\"search\", \"PESQUISAR\", true, OptionsSubmenu.PESQUISAR));\n    this.buttons.push(new PxtButton(\"delete\", \"EXCLUIR\", true, OptionsSubmenu.EXCLUIR));\n\n    setTimeout(() => {\n      debugger;\n      this.urlService = helper.getApi() + new ControllerPipe().transform(this.model.constructor.name);\n      this._serviceBase.urlServiceAuto = this.urlService;\n    }, 100);\n  }\n\n  validationModel() {\n    if (Object.keys(this.model).length > 0) {\n      Object.keys(this.model).forEach(key => {\n        if (this.model[key] != undefined && this.model[key] != \"\") {\n          this.notificationService.error(\"Campo ObrigatÃ³rio\", key.toString().toLocaleUpperCase());\n          return false;\n        }\n      });\n      return true;\n    } else {\n      debugger;\n      this.notificationService.warning(\"Nenhum campo preenchido.\", \"Aviso!\");\n      return false;\n    }\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { PxtSubmenusComponent } from './pxt-submenus.component';\nimport { RequestBaseService } from '../../services/pxt-http/request-base.service';\nimport { PxtHttpService } from '../../services/pxt-http/pxt-http.service';\nimport { HttpHelperService } from '../../services/pxt-http/http-helper-service';\nimport { ConfigService } from '../../services/pxt-http/config.service';\nimport { PipeModule } from '../../pipes/pipes.module';\nimport { ToastrModule } from 'ngx-toastr';\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule,\n    PipeModule\n  ],\n  declarations: [PxtSubmenusComponent],\n  exports: [PxtSubmenusComponent],\n  providers:[PxtHttpService, RequestBaseService, HttpHelperService, ConfigService]\n})\nexport class PxtSubmenusModule { }\n\n","import { Component, OnInit, Input, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nconst noop = () => {\r\n};\r\n\r\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => PxtDatepickerComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'pxt-datepicker',\r\n  templateUrl: './pxt-datepicker.component.html',\r\n  styleUrls: ['./pxt-datepicker.component.scss'],\r\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\r\n})\r\nexport class PxtDatepickerComponent implements OnInit, ControlValueAccessor {\r\n\r\n  @Input() placeholder: String = \"Escolha uma data\";\r\n  @Input() minDate: Date;\r\n  @Input() maxDate: Date;\r\n  @Input() inputDisabled: boolean = false;\r\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  dateModel: Date;\r\n\r\n  private onTouchedCallback: () => void = noop;\r\n  private onChangeCallback: (_: any) => void = noop;\r\n\r\n  get dataSelecionada() {\r\n    return this.dateModel;\r\n  }\r\n\r\n  set dataSelecionada(d: Date) {\r\n    if (d !== this.dateModel) {\r\n      this.dateModel = d;\r\n      this.onChangeCallback(d);\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    this.onTouchedCallback();\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    this.dateModel = value;\r\n    this.onChangeCallback(value);\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.onChangeCallback = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {\r\n      this.onTouchedCallback = fn;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onDateChange() {\r\n    this.onChange.emit(true);\r\n  }\r\n\r\n  clear() {\r\n    this.writeValue(undefined);\r\n    this.onDateChange();\r\n  }\r\n  \r\n}","\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { PxtDatepickerComponent } from './pxt-datepicker.component';\r\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule,   MaterialAngularModule],\r\n  providers: [DatePipe],\r\n  declarations: [PxtDatepickerComponent],\r\n  exports: [PxtDatepickerComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\r\n})\r\nexport class PxtDatePickerModule {\r\n}\r\n","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-pxt-dialog',\n  templateUrl: './pxt-dialog.component.html',\n  styleUrls: ['./pxt-dialog.component.scss']\n})\nexport class PxtDialogComponent implements OnInit {\n\n  @Input() placeholder: string;\n\n  constructor(private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n  ngOnInit() {\n  }\n  cancelation() {\n    this.dialogRef.close(false);\n  }\n  confirmation() {\n    this.dialogRef.close(true);\n  }\n  selectRow(row) {\n    this.dialogRef.close(row);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtDialogComponent } from './pxt-dialog.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtDialogComponent],\n  exports: [PxtDialogComponent],\n  entryComponents:[PxtDialogComponent]\n\n})\nexport class PxtDialogModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { PxtDialogComponent } from '../pxt-dialog/pxt-dialog.component';\n\n@Component({\n  selector: 'app-pxt-filter',\n  templateUrl: './pxt-filter.component.html',\n  styleUrls: ['./pxt-filter.component.css']\n})\nexport class PxtFilterComponent implements OnInit {\n\n  public data : any;\n  constructor(private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogComponent>, @Inject(MAT_DIALOG_DATA) data) {\n      this.data = data;\n     }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtFilterComponent } from './pxt-filter.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule, \n    MaterialAngularModule\n  ],\n  declarations: [PxtFilterComponent],\n  exports: [PxtFilterComponent],\n  entryComponents:[PxtFilterComponent]\n \n})\nexport class PxtFilterModule { }\n","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { RequestBaseService } from '../../../services/pxt-http/request-base.service';\n\n\n@Component({\n  selector: 'pxt-dialog-filter-custom',\n  templateUrl: './pxt-dialog-filter-custom.component.html',\n  styleUrls: ['./pxt-dialog-filter-custom.component.scss']\n})\nexport class PxtDialogFilterCustomComponent implements OnInit {\n\n  @Input() filters: any;\n  @Input() model: any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  \n  displayedColumns = ['codigo', 'descricao'];\n  dataSource = new MatTableDataSource<any>();\n\n  constructor(private fb: FormBuilder,\n    private dialogRef: MatDialogRef<PxtDialogFilterCustomComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public http: RequestBaseService) { }\n\n  ngOnInit() {\n  }\n  //Search.\n  search() {\n    let params = new Map<any, any>();\n    if (this.filters !== undefined) {\n      Object.keys(this.filters).forEach(key => {\n        if (this.filters[key] != undefined) {\n          params.set(key, this.filters[key]);\n        }\n      });\n    }\n    this.http.doGet(this.model.constructor.name, params).subscribe(result => {\n      this.dataSource.data = result;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  };\n\n  //Row Selected\n  selectRow(row) {\n    this.dialogRef.close(row);\n  };\n\n  //Close\n  close() {\n    this.dialogRef.close(undefined);\n  };\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { PxtDialogFilterCustomComponent } from './pxt-dialog-filter-custom.component';\nimport { MaterialAngularModule } from '../../material-angular/material-angular.module';\nimport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material';\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtDialogFilterCustomComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  exports:[PxtDialogFilterCustomComponent],\n  entryComponents:[PxtDialogFilterCustomComponent],\n  providers: [\n    {provide: MAT_DIALOG_DATA, useValue: {}},\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}}\n  ]\n})\nexport class PxtDialogFilterCustomModule { }\n","import { pxtEnumTagHtml } from \"../enum/pxt-enum-tag-html\";\r\nimport { pxtEnumTypeTag } from \"../enum/pxt-enum-type-tag\";\r\n\r\n\r\nexport class pxtFields {\r\n    type: pxtEnumTypeTag;\r\n    value: any;\r\n    tag: pxtEnumTagHtml;\r\n}\r\n","export enum pxtEnumTagHtml {\r\n    Input = 1,\r\n    Combo = 2,\r\n    Filter = 3,\r\n    Checkbox = 4\r\n}","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'pxt-upload-file',\n  templateUrl: './pxt-upload-file.component.html',\n  styleUrls: ['./pxt-upload-file.component.css']\n})\nexport class PxtUploadFileComponent implements OnInit {\n\n  @Input() placeholder :string;\n  @Output() fileSelected: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  arrayImages :FileReader;\n\n  ngOnInit() {\n  }\n  onChangeImagem(event) {\n    if (event != undefined) {\n      let imagem: File = event;\n      this.placeholder= imagem.name;\n    return this.fileSelected.next(imagem);\n    }\n\n  };\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtUploadFileComponent } from './pxt-upload-file.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialAngularModule\n  ],\n  declarations: [PxtUploadFileComponent],\n  exports:[PxtUploadFileComponent],\n  entryComponents : [PxtUploadFileComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class PxtUploadFileModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { CommonModule } from '@angular/common';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\n\ndeclare var $: any;\n@Component({\n  selector: 'pxt-gallery',\n  templateUrl: './pxt-gallery.component.html',\n  styleUrls: ['./pxt-gallery.component.css']\n})\nexport class PxtGalleryComponent implements OnInit {\n\n  galleryOptions: NgxGalleryOptions[];\n  @Input() galleryImages: NgxGalleryImage[];\n  @Input() width: any = \"100%\";\n  @Input() height: any = '400px';\n  constructor() {\n  }\n  ngOnInit() {\n\n    this.galleryOptions = [\n      {\n        width: this.width,\n        height: this.height,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide\n      },\n      // max-width 800\n      {\n        breakpoint: 800,\n        width: this.width,\n        height: this.height,\n        imagePercent: 80,\n        thumbnailsPercent: 20,\n        thumbnailsMargin: 20,\n        thumbnailMargin: 20\n      },\n      {\n        breakpoint: 400,\n        preview: false\n      }\n    ];\n  }\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PxtGalleryComponent } from './pxt-gallery.component';\nimport { MaterialAngularModule } from '../material-angular/material-angular.module';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/compiler/src/core';\n\n@NgModule({\n  imports: [CommonModule, MaterialAngularModule, NgxGalleryModule],\n  declarations: [PxtGalleryComponent],\n  exports: [PxtGalleryComponent],\n  entryComponents: [PxtGalleryComponent]\n})\nexport class PxtGalleryModule { }\n"],"names":["tslib_1.__extends","componentMapper","noop","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR"],"mappings":"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"}
